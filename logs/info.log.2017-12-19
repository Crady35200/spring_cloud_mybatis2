[2017-12-19 09:58:50.859][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af: startup date [Tue Dec 19 09:58:50 CST 2017]; root of context hierarchy
[2017-12-19 09:58:51.131][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 09:58:51.173][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ef970e5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 09:58:51.375][INFO ][main]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-19 09:58:51.392][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f59185e: startup date [Tue Dec 19 09:58:51 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 09:58:51.848][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-19 09:58:51.977][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-19 09:58:52.003][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-19 09:58:52.197][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-19 09:58:52.368][INFO ][main]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=0155d798-1499-3a9b-ae68-a72381f4f0ad
[2017-12-19 09:58:52.387][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 09:58:52.451][INFO ][main]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-19 09:58:52.451][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 09:58:52.452][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 09:58:52.516][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 09:58:52.551][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d37d0b5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 09:58:52.661][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ef970e5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 09:58:52.963][INFO ][main]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-19 09:58:53.085][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1693 ms
[2017-12-19 09:58:53.392][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-19 09:58:53.397][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-19 09:58:53.397][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-19 09:58:53.397][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-19 09:58:53.397][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-19 09:58:53.398][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-19 09:58:53.398][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-19 09:58:53.398][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-19 09:58:54.195][INFO ][main]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f59185e: startup date [Tue Dec 19 09:58:51 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 09:58:54.262][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.example.demo.UserController.listAll()
[2017-12-19 09:58:54.269][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-19 09:58:54.272][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-19 09:58:54.332][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 09:58:54.332][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 09:58:54.394][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 09:58:55.375][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-19 09:58:55.376][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 09:58:55.377][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-19 09:58:55.377][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-19 09:58:55.378][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-19 09:58:55.379][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-19 09:58:55.381][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-19 09:58:55.381][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-19 09:58:55.381][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 09:58:55.382][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 09:58:55.382][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 09:58:55.383][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-19 09:58:55.384][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-19 09:58:55.385][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 09:58:55.386][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 09:58:55.386][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 09:58:55.387][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-19 09:58:55.387][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 09:58:55.388][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 09:58:55.389][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 09:58:55.390][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-19 09:58:55.390][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 09:58:55.392][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-19 09:58:55.613][WARN ][main]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-19 09:58:55.811][INFO ][main]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-19 09:58:55.812][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-19 09:58:55.820][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-19 09:58:55.823][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-19 09:58:55.824][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-19 09:58:55.825][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-19 09:58:55.825][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-19 09:58:55.829][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-19 09:58:55.841][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-19 09:58:55.848][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-19 09:58:55.861][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5f59185e,type=ConfigurationPropertiesRebinder]
[2017-12-19 09:58:55.866][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-19 09:58:55.868][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-19 09:58:55.873][INFO ][main]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-19 09:58:56.065][INFO ][main]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-19 09:58:56.072][INFO ][main]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-19 09:58:56.107][INFO ][main]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-19 09:58:56.299][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-19 09:58:56.299][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-19 09:58:56.380][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-19 09:58:56.381][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-19 09:58:56.596][INFO ][main]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 09:58:56.633][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-19 09:58:56.634][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-19 09:58:56.634][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-19 09:58:56.634][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-19 09:58:56.634][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-19 09:58:56.635][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-19 09:58:56.635][INFO ][main]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-19 09:58:56.846][INFO ][main]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-19 09:58:56.847][INFO ][main]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-19 09:58:56.849][INFO ][main]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-19 09:58:56.853][INFO ][main]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513648736853 with initial instances count: 0
[2017-12-19 09:58:56.866][INFO ][main]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-19 09:58:56.867][INFO ][main]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513648736867, current=UP, previous=STARTING]
[2017-12-19 09:58:56.869][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-19 09:58:56.874][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-19 09:58:56.891][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-19 09:58:56.922][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-19 09:58:56.924][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-19 09:58:56.927][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-19 09:58:56.929][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-19 09:58:56.932][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-19 09:58:56.935][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-19 09:58:56.941][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-19 09:58:56.943][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-19 09:58:56.945][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-19 09:58:56.947][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-19 09:58:56.949][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-19 09:58:56.992][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-19 09:58:57.041][INFO ][main]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-19 09:58:57.042][INFO ][main]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-19 09:58:57.046][INFO ][main]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 6.497 seconds (JVM running for 7.146)
[2017-12-19 09:59:26.849][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-19 09:59:26.850][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-19 09:59:26.850][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-19 09:59:26.851][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-19 09:59:26.851][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-19 09:59:26.851][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: false
[2017-12-19 09:59:26.851][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-19 09:59:26.881][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-19 10:03:19.490][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-19 10:03:19.542][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 51 ms
[2017-12-19 10:03:19.800][INFO ][http-nio-8888-exec-1]com.alibaba.druid.pool.DruidDataSource:init[922] - {dataSource-1} inited
[2017-12-19 10:03:19.845][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-19 10:03:19.868][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-19 10:03:19.892][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-19 10:03:19.895][INFO ][http-nio-8888-exec-1]com.example.demo.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-19 10:03:19.895][INFO ][http-nio-8888-exec-1]com.example.demo.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-19 10:03:19.915][INFO ][http-nio-8888-exec-1]com.crady.demo.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[339],请求参数, url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null
[2017-12-19 10:03:33.645][DEBUG][http-nio-8888-exec-4]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-19 10:03:33.645][DEBUG][http-nio-8888-exec-4]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-19 10:03:33.647][DEBUG][http-nio-8888-exec-4]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-19 10:03:33.649][INFO ][http-nio-8888-exec-4]com.example.demo.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-19 10:03:33.649][INFO ][http-nio-8888-exec-4]com.example.demo.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-19 10:03:33.651][INFO ][http-nio-8888-exec-4]com.crady.demo.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[8],请求参数, url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null
[2017-12-19 10:03:56.636][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 10:04:46.873][DEBUG][http-nio-8888-exec-8]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-19 10:04:46.873][DEBUG][http-nio-8888-exec-8]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-19 10:04:46.876][DEBUG][http-nio-8888-exec-8]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-19 10:04:46.879][INFO ][http-nio-8888-exec-8]com.example.demo.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-19 10:04:46.880][INFO ][http-nio-8888-exec-8]com.example.demo.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-19 10:04:46.882][INFO ][http-nio-8888-exec-8]com.crady.demo.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[15ms],请求参数, url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null
[2017-12-19 10:05:36.140][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-19 10:05:36.141][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-19 10:05:36.144][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-19 10:05:36.146][INFO ][http-nio-8888-exec-1]com.example.demo.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-19 10:05:36.146][INFO ][http-nio-8888-exec-1]com.example.demo.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-19 10:05:36.148][INFO ][http-nio-8888-exec-1]com.crady.demo.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[10ms],请求参数=[url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null]
[2017-12-19 10:05:50.668][DEBUG][http-nio-8888-exec-4]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-19 10:05:50.669][DEBUG][http-nio-8888-exec-4]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-19 10:05:50.671][DEBUG][http-nio-8888-exec-4]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-19 10:05:50.673][INFO ][http-nio-8888-exec-4]com.example.demo.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-19 10:05:50.673][INFO ][http-nio-8888-exec-4]com.example.demo.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-19 10:05:50.675][INFO ][http-nio-8888-exec-4]com.crady.demo.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[9ms],请求参数:[url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null]
[2017-12-19 10:06:09.052][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-19 10:06:09.053][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-19 10:06:09.055][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-19 10:06:09.056][INFO ][http-nio-8888-exec-7]com.example.demo.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-19 10:06:09.057][INFO ][http-nio-8888-exec-7]com.example.demo.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-19 10:06:09.058][INFO ][http-nio-8888-exec-7]com.crady.demo.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[7ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-19 10:08:56.638][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 10:13:56.640][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 10:18:56.641][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 10:23:56.642][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 10:28:56.645][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 10:33:56.646][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 10:38:56.649][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 10:43:56.650][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 10:48:56.652][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 10:53:56.653][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 10:56:49.052][INFO ][main]org.springframework.test.context.support.AbstractTestContextBootstrapper:buildDefaultMergedContextConfiguration[319] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.demo.SpringCloudMybatisApplicationTests], using SpringBootContextLoader
[2017-12-19 10:56:49.070][INFO ][main]org.springframework.test.context.support.AbstractContextLoader:generateDefaultLocations[264] - Could not detect default resource locations for test class [com.example.demo.SpringCloudMybatisApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
[2017-12-19 10:56:49.072][INFO ][main]org.springframework.test.context.support.AnnotationConfigContextLoaderUtils:detectDefaultConfigurationClasses[81] - Could not detect default configuration classes for test class [com.example.demo.SpringCloudMybatisApplicationTests]: SpringCloudMybatisApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[2017-12-19 10:56:49.256][INFO ][main]org.springframework.boot.test.context.SpringBootTestContextBootstrapper:getOrFindConfigurationClasses[206] - Found @SpringBootConfiguration com.example.demo.SpringCloudMybatisApplication for test class com.example.demo.SpringCloudMybatisApplicationTests
[2017-12-19 10:56:49.267][INFO ][main]org.springframework.test.context.support.AbstractTestContextBootstrapper:getDefaultTestExecutionListenerClassNames[260] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[2017-12-19 10:56:49.297][INFO ][main]org.springframework.test.context.support.AbstractTestContextBootstrapper:getTestExecutionListeners[187] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2aa5fe93, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5c1a8622, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5ad851c9, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6156496, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3c153a1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@b62fe6d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@13acb0d1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3e3047e6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@37e547da, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2b6856dd, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5db45159, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6107227e]
[2017-12-19 10:56:49.305][INFO ][main]org.springframework.test.context.support.AbstractTestContextBootstrapper:buildDefaultMergedContextConfiguration[319] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.demo.SpringCloudMybatisApplicationTests], using SpringBootContextLoader
[2017-12-19 10:56:49.306][INFO ][main]org.springframework.test.context.support.AbstractContextLoader:generateDefaultLocations[264] - Could not detect default resource locations for test class [com.example.demo.SpringCloudMybatisApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
[2017-12-19 10:56:49.307][INFO ][main]org.springframework.test.context.support.AnnotationConfigContextLoaderUtils:detectDefaultConfigurationClasses[81] - Could not detect default configuration classes for test class [com.example.demo.SpringCloudMybatisApplicationTests]: SpringCloudMybatisApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[2017-12-19 10:56:49.315][INFO ][main]org.springframework.boot.test.context.SpringBootTestContextBootstrapper:getOrFindConfigurationClasses[206] - Found @SpringBootConfiguration com.example.demo.SpringCloudMybatisApplication for test class com.example.demo.SpringCloudMybatisApplicationTests
[2017-12-19 10:56:49.326][INFO ][main]org.springframework.test.context.support.AbstractTestContextBootstrapper:getDefaultTestExecutionListenerClassNames[260] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
[2017-12-19 10:56:49.333][INFO ][main]org.springframework.test.context.support.AbstractTestContextBootstrapper:getTestExecutionListeners[187] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@43301423, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2f112965, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1a04f701, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e91d63f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@d4342c2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2bbf180e, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@163e4e87, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@56de5251, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@419c5f1a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@12b0404f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@769e7ee8, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5276e6b0]
[2017-12-19 10:56:49.903][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@2cf3d63b: startup date [Tue Dec 19 10:56:49 CST 2017]; root of context hierarchy
[2017-12-19 10:56:50.229][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 10:56:50.281][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e6ca21d1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 10:56:50.516][INFO ][main]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-19 10:56:50.524][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@61a88b8c: startup date [Tue Dec 19 10:56:50 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2cf3d63b
[2017-12-19 10:56:51.192][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-19 10:56:51.394][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-19 10:56:51.477][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-19 10:56:51.810][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-19 10:56:52.148][INFO ][main]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=f67c1864-511c-382c-8c35-f9951b124644
[2017-12-19 10:56:52.293][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 10:56:52.395][INFO ][main]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-19 10:56:52.396][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 10:56:52.398][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 10:56:52.527][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 10:56:52.557][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cab01ed4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 10:56:52.747][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e6ca21d1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 10:56:54.443][INFO ][main]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@61a88b8c: startup date [Tue Dec 19 10:56:50 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2cf3d63b
[2017-12-19 10:56:54.542][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.example.demo.UserController.listAll()
[2017-12-19 10:56:54.555][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-19 10:56:54.556][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-19 10:56:54.636][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 10:56:54.636][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 10:56:54.694][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 10:56:55.703][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 10:56:55.707][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 10:56:55.709][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 10:56:55.711][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 10:56:55.712][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 10:56:55.719][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-19 10:56:55.721][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 10:56:55.723][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 10:56:55.724][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-19 10:56:55.731][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 10:56:55.732][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-19 10:56:55.732][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-19 10:56:55.734][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-19 10:56:55.736][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-19 10:56:55.743][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-19 10:56:55.744][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-19 10:56:55.760][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 10:56:55.765][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-19 10:56:55.768][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-19 10:56:55.769][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-19 10:56:55.770][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 10:56:55.773][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-19 10:56:55.775][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 10:56:56.134][WARN ][main]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-19 10:56:56.428][INFO ][main]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-19 10:56:56.452][INFO ][main]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplicationTests in 7.009 seconds (JVM running for 7.91)
[2017-12-19 10:56:56.536][INFO ][Thread-5]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.web.context.support.GenericWebApplicationContext@61a88b8c: startup date [Tue Dec 19 10:56:50 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2cf3d63b
[2017-12-19 10:56:56.547][INFO ][Thread-5]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-19 10:56:56.552][INFO ][Thread-5]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-19 10:56:56.555][INFO ][Thread-5]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-19 10:56:56.648][INFO ][Thread-5]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-19 10:56:56.990][INFO ][Thread-5]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-19 10:56:56.990][INFO ][Thread-5]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-19 10:56:57.156][INFO ][Thread-5]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-19 10:56:57.157][INFO ][Thread-5]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-19 10:56:57.410][INFO ][Thread-5]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 10:56:57.481][INFO ][Thread-5]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-19 10:56:57.481][INFO ][Thread-5]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-19 10:56:57.482][INFO ][Thread-5]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-19 10:56:57.482][INFO ][Thread-5]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-19 10:56:57.483][INFO ][Thread-5]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-19 10:56:57.484][INFO ][Thread-5]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-19 10:56:57.484][INFO ][Thread-5]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-19 10:56:57.737][INFO ][Thread-5]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-19 10:56:57.741][INFO ][Thread-5]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-19 10:56:57.743][INFO ][Thread-5]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-19 10:56:57.747][INFO ][Thread-5]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513652217747 with initial instances count: 1
[2017-12-19 10:56:57.760][INFO ][Thread-5]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-19 10:56:57.761][INFO ][Thread-5]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-19 10:56:57.783][INFO ][Thread-5]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:-1 - deregister  status: 404
[2017-12-19 10:56:57.795][INFO ][Thread-5]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-19 10:56:57.797][INFO ][Thread-5]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-19 10:58:56.655][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 11:00:33.739][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:shutdown[125] - Application shutdown requested.
[2017-12-19 11:00:33.740][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f59185e: startup date [Tue Dec 19 09:58:51 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 11:00:33.742][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-19 11:00:33.743][WARN ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513652433743, current=DOWN, previous=UP]
[2017-12-19 11:00:33.744][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-19 11:00:33.752][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-19 11:00:33.755][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-19 11:00:33.756][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-19 11:00:33.756][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-19 11:00:33.757][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-19 11:00:33.757][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-19 11:00:33.758][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-19 11:00:33.759][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-19 11:00:33.766][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - deregister  status: 200
[2017-12-19 11:00:33.778][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-19 11:00:33.784][INFO ][RMI TCP Connection(2)-127.0.0.1]com.alibaba.druid.pool.DruidDataSource:close[1817] - {dataSource-1} closed
[2017-12-19 11:00:33.785][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-19 11:27:28.286][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af: startup date [Tue Dec 19 11:27:28 CST 2017]; root of context hierarchy
[2017-12-19 11:27:28.516][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 11:27:28.553][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ef970e5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 11:27:28.744][INFO ][main]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-19 11:27:28.761][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f59185e: startup date [Tue Dec 19 11:27:28 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 11:27:29.216][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-19 11:27:29.348][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-19 11:27:29.375][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-19 11:27:29.565][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-19 11:27:29.728][INFO ][main]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=0155d798-1499-3a9b-ae68-a72381f4f0ad
[2017-12-19 11:27:29.748][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 11:27:29.815][INFO ][main]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-19 11:27:29.816][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 11:27:29.816][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 11:27:29.884][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 11:27:29.921][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d37d0b5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 11:27:30.036][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ef970e5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 11:27:30.348][INFO ][main]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-19 11:27:30.471][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1710 ms
[2017-12-19 11:27:30.776][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-19 11:27:30.783][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-19 11:27:30.783][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-19 11:27:30.784][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-19 11:27:30.784][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-19 11:27:30.784][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-19 11:27:30.784][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-19 11:27:30.784][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-19 11:27:31.596][INFO ][main]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f59185e: startup date [Tue Dec 19 11:27:28 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 11:27:31.662][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.example.demo.UserController.listAll()
[2017-12-19 11:27:31.666][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-19 11:27:31.667][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-19 11:27:31.722][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 11:27:31.722][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 11:27:31.780][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 11:27:32.744][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-19 11:27:32.744][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 11:27:32.745][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 11:27:32.745][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 11:27:32.746][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 11:27:32.746][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 11:27:32.749][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-19 11:27:32.750][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-19 11:27:32.750][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 11:27:32.752][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-19 11:27:32.752][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 11:27:32.753][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-19 11:27:32.754][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 11:27:32.755][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-19 11:27:32.755][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-19 11:27:32.756][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 11:27:32.757][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 11:27:32.757][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-19 11:27:32.757][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-19 11:27:32.758][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-19 11:27:32.758][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-19 11:27:32.759][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 11:27:32.760][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-19 11:27:32.985][WARN ][main]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-19 11:27:33.179][INFO ][main]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-19 11:27:33.180][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-19 11:27:33.189][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-19 11:27:33.191][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-19 11:27:33.192][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-19 11:27:33.192][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-19 11:27:33.193][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-19 11:27:33.195][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-19 11:27:33.208][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-19 11:27:33.215][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-19 11:27:33.228][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5f59185e,type=ConfigurationPropertiesRebinder]
[2017-12-19 11:27:33.234][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-19 11:27:33.237][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-19 11:27:33.240][INFO ][main]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-19 11:27:33.436][INFO ][main]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-19 11:27:33.443][INFO ][main]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-19 11:27:33.477][INFO ][main]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-19 11:27:33.667][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-19 11:27:33.668][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-19 11:27:33.746][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-19 11:27:33.746][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-19 11:27:33.966][INFO ][main]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 11:27:34.006][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-19 11:27:34.006][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-19 11:27:34.007][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-19 11:27:34.007][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-19 11:27:34.007][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-19 11:27:34.007][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-19 11:27:34.007][INFO ][main]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-19 11:27:34.106][INFO ][main]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-19 11:27:34.108][INFO ][main]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-19 11:27:34.111][INFO ][main]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-19 11:27:34.115][INFO ][main]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513654054115 with initial instances count: 0
[2017-12-19 11:27:34.126][INFO ][main]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-19 11:27:34.127][INFO ][main]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513654054127, current=UP, previous=STARTING]
[2017-12-19 11:27:34.129][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-19 11:27:34.133][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-19 11:27:34.142][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-19 11:27:34.152][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-19 11:27:34.156][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-19 11:27:34.158][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-19 11:27:34.162][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-19 11:27:34.164][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-19 11:27:34.167][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-19 11:27:34.173][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-19 11:27:34.175][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-19 11:27:34.193][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-19 11:27:34.195][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-19 11:27:34.197][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-19 11:27:34.203][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-19 11:27:34.269][INFO ][main]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-19 11:27:34.270][INFO ][main]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-19 11:27:34.273][INFO ][main]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 6.294 seconds (JVM running for 6.965)
[2017-12-19 11:28:04.110][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-19 11:28:04.111][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-19 11:28:04.115][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-19 11:28:04.116][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-19 11:28:04.116][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-19 11:28:04.117][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: false
[2017-12-19 11:28:04.117][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-19 11:28:04.147][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-19 11:28:06.618][INFO ][http-nio-8888-exec-2]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-19 11:28:06.643][INFO ][http-nio-8888-exec-2]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
[2017-12-19 11:28:06.864][INFO ][http-nio-8888-exec-2]com.alibaba.druid.pool.DruidDataSource:init[922] - {dataSource-1} inited
[2017-12-19 11:28:06.896][DEBUG][http-nio-8888-exec-2]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-19 11:28:06.914][DEBUG][http-nio-8888-exec-2]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-19 11:28:06.935][DEBUG][http-nio-8888-exec-2]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-19 11:28:06.938][INFO ][http-nio-8888-exec-2]com.example.demo.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-19 11:28:06.938][INFO ][http-nio-8888-exec-2]com.example.demo.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-19 11:28:06.954][INFO ][http-nio-8888-exec-2]com.crady.demo.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[289ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-19 11:29:47.949][DEBUG][http-nio-8888-exec-3]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-19 11:29:47.949][DEBUG][http-nio-8888-exec-3]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-19 11:29:47.952][DEBUG][http-nio-8888-exec-3]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-19 11:29:47.954][INFO ][http-nio-8888-exec-3]com.example.demo.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-19 11:29:47.954][INFO ][http-nio-8888-exec-3]com.example.demo.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-19 11:29:47.956][INFO ][http-nio-8888-exec-3]com.crady.demo.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[11ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-19 11:29:48.517][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-19 11:29:48.517][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-19 11:29:48.519][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-19 11:29:48.521][INFO ][http-nio-8888-exec-7]com.example.demo.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-19 11:29:48.521][INFO ][http-nio-8888-exec-7]com.example.demo.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-19 11:29:48.522][INFO ][http-nio-8888-exec-7]com.crady.demo.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[6ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-19 11:29:57.173][DEBUG][http-nio-8888-exec-10]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-19 11:29:57.173][DEBUG][http-nio-8888-exec-10]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-19 11:29:57.177][DEBUG][http-nio-8888-exec-10]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-19 11:29:57.179][INFO ][http-nio-8888-exec-10]com.example.demo.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-19 11:29:57.179][INFO ][http-nio-8888-exec-10]com.example.demo.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-19 11:29:57.181][INFO ][http-nio-8888-exec-10]com.crady.demo.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[9ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-19 11:32:34.010][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 11:37:34.012][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 11:42:34.013][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 11:47:34.015][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 11:48:58.159][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:shutdown[125] - Application shutdown requested.
[2017-12-19 11:48:58.160][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f59185e: startup date [Tue Dec 19 11:27:28 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 11:48:58.160][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-19 11:48:58.161][WARN ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513655338161, current=DOWN, previous=UP]
[2017-12-19 11:48:58.161][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-19 11:48:58.162][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-19 11:48:58.164][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-19 11:48:58.165][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-19 11:48:58.165][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-19 11:48:58.166][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-19 11:48:58.167][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-19 11:48:58.167][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-19 11:48:58.168][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-19 11:48:58.173][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - deregister  status: 200
[2017-12-19 11:48:58.181][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-19 11:48:58.185][INFO ][RMI TCP Connection(2)-127.0.0.1]com.alibaba.druid.pool.DruidDataSource:close[1817] - {dataSource-1} closed
[2017-12-19 11:48:58.186][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-19 16:44:23.937][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af: startup date [Tue Dec 19 16:44:23 CST 2017]; root of context hierarchy
[2017-12-19 16:44:24.195][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 16:44:24.233][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ef51eb05] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:44:24.458][INFO ][main]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-19 16:44:24.482][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c22d4f: startup date [Tue Dec 19 16:44:24 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 16:44:25.095][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-19 16:44:25.264][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-19 16:44:25.290][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-19 16:44:25.544][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-19 16:44:25.728][INFO ][main]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=0155d798-1499-3a9b-ae68-a72381f4f0ad
[2017-12-19 16:44:25.747][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 16:44:25.815][INFO ][main]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-19 16:44:25.816][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:44:25.816][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:44:25.900][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:44:25.938][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d337e808] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:44:26.068][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ef51eb05] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:44:26.391][INFO ][main]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-19 16:44:26.513][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 2031 ms
[2017-12-19 16:44:26.820][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-19 16:44:26.824][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-19 16:44:26.825][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-19 16:44:26.825][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-19 16:44:26.826][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-19 16:44:26.826][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-19 16:44:26.826][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-19 16:44:26.826][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-19 16:44:27.732][INFO ][main]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c22d4f: startup date [Tue Dec 19 16:44:24 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 16:44:27.826][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.example.demo.UserController.listAll()
[2017-12-19 16:44:27.829][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-19 16:44:27.830][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-19 16:44:27.886][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 16:44:27.886][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 16:44:27.944][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 16:44:28.917][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-19 16:44:28.918][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 16:44:28.920][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-19 16:44:28.920][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-19 16:44:28.921][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 16:44:28.921][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-19 16:44:28.921][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-19 16:44:28.922][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 16:44:28.923][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 16:44:28.925][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 16:44:28.925][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 16:44:28.927][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-19 16:44:28.927][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-19 16:44:28.928][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-19 16:44:28.929][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 16:44:28.930][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-19 16:44:28.930][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 16:44:28.932][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-19 16:44:28.933][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 16:44:28.934][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-19 16:44:28.934][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 16:44:28.935][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-19 16:44:28.936][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 16:44:29.181][WARN ][main]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-19 16:44:29.387][INFO ][main]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-19 16:44:29.389][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-19 16:44:29.398][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-19 16:44:29.400][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-19 16:44:29.401][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-19 16:44:29.402][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-19 16:44:29.403][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-19 16:44:29.405][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-19 16:44:29.416][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-19 16:44:29.423][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-19 16:44:29.435][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7c22d4f,type=ConfigurationPropertiesRebinder]
[2017-12-19 16:44:29.440][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-19 16:44:29.443][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-19 16:44:29.446][INFO ][main]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-19 16:44:29.655][INFO ][main]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-19 16:44:29.662][INFO ][main]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-19 16:44:29.696][INFO ][main]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-19 16:44:29.914][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-19 16:44:29.914][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-19 16:44:29.997][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-19 16:44:29.997][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-19 16:44:30.221][INFO ][main]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 16:44:30.261][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-19 16:44:30.262][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-19 16:44:30.262][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-19 16:44:30.262][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-19 16:44:30.262][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-19 16:44:30.263][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-19 16:44:30.263][INFO ][main]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-19 16:44:30.518][INFO ][main]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-19 16:44:30.519][INFO ][main]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-19 16:44:30.521][INFO ][main]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-19 16:44:30.524][INFO ][main]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513673070524 with initial instances count: 0
[2017-12-19 16:44:30.536][INFO ][main]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-19 16:44:30.537][INFO ][main]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513673070536, current=UP, previous=STARTING]
[2017-12-19 16:44:30.538][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-19 16:44:30.542][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-19 16:44:30.550][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-19 16:44:30.560][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-19 16:44:30.563][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-19 16:44:30.567][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-19 16:44:30.570][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-19 16:44:30.575][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-19 16:44:30.578][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-19 16:44:30.584][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-19 16:44:30.586][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-19 16:44:30.588][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-19 16:44:30.591][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-19 16:44:30.595][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-19 16:44:30.656][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-19 16:44:30.658][INFO ][main]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-19 16:44:30.659][INFO ][main]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-19 16:44:30.662][INFO ][main]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 7.188 seconds (JVM running for 8.057)
[2017-12-19 16:45:00.523][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-19 16:45:00.524][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-19 16:45:00.524][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-19 16:45:00.524][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-19 16:45:00.524][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-19 16:45:00.524][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: false
[2017-12-19 16:45:00.524][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-19 16:45:00.553][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-19 16:45:11.232][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-19 16:45:11.260][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
[2017-12-19 16:47:06.743][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:shutdown[125] - Application shutdown requested.
[2017-12-19 16:47:06.744][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c22d4f: startup date [Tue Dec 19 16:44:24 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 16:47:06.745][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-19 16:47:06.745][WARN ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513673226745, current=DOWN, previous=UP]
[2017-12-19 16:47:06.747][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-19 16:47:06.749][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-19 16:47:06.752][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-19 16:47:06.754][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-19 16:47:06.754][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-19 16:47:06.755][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-19 16:47:06.755][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-19 16:47:06.792][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - deregister  status: 200
[2017-12-19 16:47:06.818][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-19 16:47:06.819][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-19 16:49:09.473][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af: startup date [Tue Dec 19 16:49:09 CST 2017]; root of context hierarchy
[2017-12-19 16:49:09.699][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 16:49:09.739][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ef970e5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:49:09.951][INFO ][main]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-19 16:49:09.970][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f59185e: startup date [Tue Dec 19 16:49:09 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 16:49:10.466][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-19 16:49:10.609][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-19 16:49:10.636][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-19 16:49:10.656][WARN ][main]org.mybatis.spring.mapper.ClassPathMapperScanner:doScan[166] - No MyBatis mapper was found in '[com.crady.dao]' package. Please check your configuration.
[2017-12-19 16:49:10.752][WARN ][main]org.mybatis.spring.mapper.ClassPathMapperScanner:doScan[166] - No MyBatis mapper was found in '[com.example.demo]' package. Please check your configuration.
[2017-12-19 16:49:10.830][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-19 16:49:10.994][INFO ][main]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=ca08a4cc-1ad3-36c0-9cc8-11bd4dea2a96
[2017-12-19 16:49:11.015][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 16:49:11.080][INFO ][main]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-19 16:49:11.081][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:49:11.081][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:49:11.146][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:49:11.181][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d37d0b5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:49:11.291][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ef970e5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:49:11.623][INFO ][main]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-19 16:49:11.747][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1777 ms
[2017-12-19 16:49:12.055][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-19 16:49:12.060][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-19 16:49:12.061][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-19 16:49:12.061][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-19 16:49:12.061][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-19 16:49:12.061][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-19 16:49:12.062][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-19 16:49:12.062][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-19 16:49:12.110][WARN ][main]org.springframework.context.support.AbstractApplicationContext:refresh[551] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServiceImpl': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.crady.demo.dao.UserMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
[2017-12-19 16:49:12.111][INFO ][main]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-19 16:49:12.137][INFO ][main]org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer:logAutoConfigurationReport[101] - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
[2017-12-19 16:49:12.350][ERROR][main]org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter:report[42] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field userMapper in com.crady.demo.service.impl.UserServiceImpl required a bean of type 'com.crady.demo.dao.UserMapper' that could not be found.


Action:

Consider defining a bean of type 'com.crady.demo.dao.UserMapper' in your configuration.

[2017-12-19 16:49:43.953][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af: startup date [Tue Dec 19 16:49:43 CST 2017]; root of context hierarchy
[2017-12-19 16:49:44.154][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 16:49:44.189][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cc997987] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:49:44.378][INFO ][main]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-19 16:49:44.395][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@76a36b71: startup date [Tue Dec 19 16:49:44 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 16:49:44.842][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-19 16:49:44.980][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-19 16:49:45.019][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-19 16:49:45.217][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-19 16:49:45.380][INFO ][main]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=c8f41479-da6e-3c0b-8968-45e61ea829da
[2017-12-19 16:49:45.399][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 16:49:45.464][INFO ][main]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-19 16:49:45.465][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:49:45.465][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:49:45.531][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:49:45.571][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b07f768a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:49:45.678][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cc997987] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:49:46.026][INFO ][main]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-19 16:49:46.154][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1759 ms
[2017-12-19 16:49:46.447][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-19 16:49:46.452][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-19 16:49:46.453][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-19 16:49:46.453][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-19 16:49:46.453][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-19 16:49:46.454][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-19 16:49:46.454][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-19 16:49:46.454][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-19 16:49:46.716][WARN ][main]org.springframework.context.support.AbstractApplicationContext:refresh[551] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServiceImpl': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [F:\eclipse-workspace\spring_cloud_mybatis2\target\classes\com\crady\demo\dao\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [F:\eclipse-workspace\spring_cloud_mybatis2\target\classes\mapper\UserMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.crady.dao.bean.User'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.crady.dao.bean.User
[2017-12-19 16:49:46.717][INFO ][main]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-19 16:49:46.742][INFO ][main]org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer:logAutoConfigurationReport[101] - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
[2017-12-19 16:49:46.751][ERROR][main]org.springframework.boot.SpringApplication:reportFailure[771] - Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServiceImpl': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [F:\eclipse-workspace\spring_cloud_mybatis2\target\classes\com\crady\demo\dao\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [F:\eclipse-workspace\spring_cloud_mybatis2\target\classes\mapper\UserMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.crady.dao.bean.User'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.crady.dao.bean.User
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.example.demo.SpringCloudMybatisApplication.main(SpringCloudMybatisApplication.java:20)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServiceImpl': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [F:\eclipse-workspace\spring_cloud_mybatis2\target\classes\com\crady\demo\dao\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [F:\eclipse-workspace\spring_cloud_mybatis2\target\classes\mapper\UserMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.crady.dao.bean.User'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.crady.dao.bean.User
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 19 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [F:\eclipse-workspace\spring_cloud_mybatis2\target\classes\com\crady\demo\dao\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [F:\eclipse-workspace\spring_cloud_mybatis2\target\classes\mapper\UserMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.crady.dao.bean.User'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.crady.dao.bean.User
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1357)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1249)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 32 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [F:\eclipse-workspace\spring_cloud_mybatis2\target\classes\mapper\UserMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.crady.dao.bean.User'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.crady.dao.bean.User
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1342)
	... 43 more
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [F:\eclipse-workspace\spring_cloud_mybatis2\target\classes\mapper\UserMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.crady.dao.bean.User'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.crady.dao.bean.User
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:523)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:380)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	... 53 more
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.crady.dao.bean.User'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.crady.dao.bean.User
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:521)
	... 56 more
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.crady.dao.bean.User'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.crady.dao.bean.User
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:265)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:252)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:244)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:116)
	... 58 more
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.crady.dao.bean.User'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.crady.dao.bean.User
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 62 more
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.crady.dao.bean.User
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:200)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 64 more
[2017-12-19 16:51:44.553][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af: startup date [Tue Dec 19 16:51:44 CST 2017]; root of context hierarchy
[2017-12-19 16:51:44.755][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 16:51:44.790][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$93dc7598] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:51:44.975][INFO ][main]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-19 16:51:44.993][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2289aca5: startup date [Tue Dec 19 16:51:44 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 16:51:45.447][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-19 16:51:45.578][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-19 16:51:45.609][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-19 16:51:45.800][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-19 16:51:45.958][INFO ][main]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=c8f41479-da6e-3c0b-8968-45e61ea829da
[2017-12-19 16:51:45.978][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 16:51:46.043][INFO ][main]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-19 16:51:46.044][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:51:46.045][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:51:46.109][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:51:46.143][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$77c2729b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:51:46.257][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$93dc7598] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:51:46.557][INFO ][main]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-19 16:51:46.679][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1686 ms
[2017-12-19 16:51:46.975][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-19 16:51:46.979][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-19 16:51:46.980][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-19 16:51:46.980][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-19 16:51:46.980][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-19 16:51:46.980][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-19 16:51:46.981][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-19 16:51:46.982][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-19 16:51:47.254][WARN ][main]org.springframework.context.support.AbstractApplicationContext:refresh[551] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServiceImpl': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [F:\eclipse-workspace\spring_cloud_mybatis2\target\classes\com\crady\demo\dao\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [F:\eclipse-workspace\spring_cloud_mybatis2\target\classes\mapper\UserMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.crady.dao.bean.User'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.crady.dao.bean.User
[2017-12-19 16:51:47.255][INFO ][main]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-19 16:51:47.281][INFO ][main]org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer:logAutoConfigurationReport[101] - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
[2017-12-19 16:51:47.288][ERROR][main]org.springframework.boot.SpringApplication:reportFailure[771] - Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController': Unsatisfied dependency expressed through field 'userService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServiceImpl': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [F:\eclipse-workspace\spring_cloud_mybatis2\target\classes\com\crady\demo\dao\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [F:\eclipse-workspace\spring_cloud_mybatis2\target\classes\mapper\UserMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.crady.dao.bean.User'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.crady.dao.bean.User
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.example.demo.SpringCloudMybatisApplication.main(SpringCloudMybatisApplication.java:20)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServiceImpl': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [F:\eclipse-workspace\spring_cloud_mybatis2\target\classes\com\crady\demo\dao\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [F:\eclipse-workspace\spring_cloud_mybatis2\target\classes\mapper\UserMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.crady.dao.bean.User'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.crady.dao.bean.User
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 19 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userMapper' defined in file [F:\eclipse-workspace\spring_cloud_mybatis2\target\classes\com\crady\demo\dao\UserMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [F:\eclipse-workspace\spring_cloud_mybatis2\target\classes\mapper\UserMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.crady.dao.bean.User'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.crady.dao.bean.User
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1357)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1249)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 32 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]: Invocation of init method failed; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [F:\eclipse-workspace\spring_cloud_mybatis2\target\classes\mapper\UserMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.crady.dao.bean.User'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.crady.dao.bean.User
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1342)
	... 43 more
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [F:\eclipse-workspace\spring_cloud_mybatis2\target\classes\mapper\UserMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.crady.dao.bean.User'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.crady.dao.bean.User
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:523)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:380)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	... 53 more
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.crady.dao.bean.User'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.crady.dao.bean.User
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:521)
	... 56 more
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.crady.dao.bean.User'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.crady.dao.bean.User
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:265)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElement(XMLMapperBuilder.java:252)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.resultMapElements(XMLMapperBuilder.java:244)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:116)
	... 58 more
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.crady.dao.bean.User'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.crady.dao.bean.User
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 62 more
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.crady.dao.bean.User
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:200)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 64 more
[2017-12-19 16:53:11.881][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af: startup date [Tue Dec 19 16:53:11 CST 2017]; root of context hierarchy
[2017-12-19 16:53:12.115][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 16:53:12.158][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e4186329] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:53:12.355][INFO ][main]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-19 16:53:12.374][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a7471ce: startup date [Tue Dec 19 16:53:12 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 16:53:12.834][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-19 16:53:12.969][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-19 16:53:12.998][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-19 16:53:13.192][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-19 16:53:13.356][INFO ][main]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=c8f41479-da6e-3c0b-8968-45e61ea829da
[2017-12-19 16:53:13.377][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 16:53:13.442][INFO ][main]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-19 16:53:13.443][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:53:13.443][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:53:13.511][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:53:13.548][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c7fe602c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:53:13.658][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e4186329] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:53:13.964][INFO ][main]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-19 16:53:14.089][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1715 ms
[2017-12-19 16:53:14.405][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-19 16:53:14.410][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-19 16:53:14.411][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-19 16:53:14.411][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-19 16:53:14.411][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-19 16:53:14.412][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-19 16:53:14.412][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-19 16:53:14.412][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-19 16:53:15.316][INFO ][main]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a7471ce: startup date [Tue Dec 19 16:53:12 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 16:53:15.388][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.demo.bean.User> com.example.demo.UserController.listAll()
[2017-12-19 16:53:15.392][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-19 16:53:15.393][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-19 16:53:15.464][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 16:53:15.465][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 16:53:15.523][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 16:53:16.493][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-19 16:53:16.494][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 16:53:16.495][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 16:53:16.496][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-19 16:53:16.497][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-19 16:53:16.498][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 16:53:16.499][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 16:53:16.499][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 16:53:16.500][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-19 16:53:16.500][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-19 16:53:16.502][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 16:53:16.502][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-19 16:53:16.503][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-19 16:53:16.504][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 16:53:16.505][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-19 16:53:16.505][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 16:53:16.506][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-19 16:53:16.506][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 16:53:16.507][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-19 16:53:16.508][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-19 16:53:16.508][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 16:53:16.509][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 16:53:16.509][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-19 16:53:16.731][WARN ][main]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-19 16:53:16.930][INFO ][main]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-19 16:53:16.931][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-19 16:53:16.942][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-19 16:53:16.945][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-19 16:53:16.946][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-19 16:53:16.946][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-19 16:53:16.947][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-19 16:53:16.950][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-19 16:53:16.963][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-19 16:53:16.971][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-19 16:53:16.984][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7a7471ce,type=ConfigurationPropertiesRebinder]
[2017-12-19 16:53:16.990][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-19 16:53:16.993][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-19 16:53:16.997][INFO ][main]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-19 16:53:17.200][INFO ][main]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-19 16:53:17.210][INFO ][main]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-19 16:53:17.250][INFO ][main]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-19 16:53:17.445][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-19 16:53:17.445][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-19 16:53:17.527][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-19 16:53:17.528][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-19 16:53:17.744][INFO ][main]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 16:53:17.786][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-19 16:53:17.786][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-19 16:53:17.786][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-19 16:53:17.787][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-19 16:53:17.787][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-19 16:53:17.787][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-19 16:53:17.787][INFO ][main]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-19 16:53:17.996][INFO ][main]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-19 16:53:17.998][INFO ][main]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-19 16:53:18.000][INFO ][main]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-19 16:53:18.004][INFO ][main]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513673598003 with initial instances count: 0
[2017-12-19 16:53:18.020][INFO ][main]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-19 16:53:18.021][INFO ][main]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513673598021, current=UP, previous=STARTING]
[2017-12-19 16:53:18.023][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-19 16:53:18.028][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-19 16:53:18.036][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-19 16:53:18.048][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-19 16:53:18.052][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-19 16:53:18.064][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-19 16:53:18.066][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-19 16:53:18.069][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-19 16:53:18.072][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-19 16:53:18.079][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-19 16:53:18.081][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-19 16:53:18.083][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-19 16:53:18.086][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-19 16:53:18.088][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-19 16:53:18.157][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-19 16:53:18.174][INFO ][main]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-19 16:53:18.175][INFO ][main]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-19 16:53:18.179][INFO ][main]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 6.623 seconds (JVM running for 7.284)
[2017-12-19 16:53:30.280][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-19 16:53:30.303][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
[2017-12-19 16:53:47.998][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-19 16:53:47.999][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-19 16:53:47.999][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-19 16:53:48.000][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-19 16:53:48.001][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-19 16:53:48.002][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: false
[2017-12-19 16:53:48.003][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-19 16:53:48.041][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-19 16:56:14.319][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:shutdown[125] - Application shutdown requested.
[2017-12-19 16:56:14.320][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a7471ce: startup date [Tue Dec 19 16:53:12 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 16:56:14.321][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-19 16:56:14.321][WARN ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513673774321, current=DOWN, previous=UP]
[2017-12-19 16:56:14.323][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-19 16:56:14.324][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-19 16:56:14.350][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-19 16:56:14.351][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-19 16:56:14.351][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-19 16:56:14.352][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-19 16:56:14.353][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-19 16:56:14.383][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - deregister  status: 200
[2017-12-19 16:56:14.562][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-19 16:56:14.564][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-19 16:58:10.496][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af: startup date [Tue Dec 19 16:58:10 CST 2017]; root of context hierarchy
[2017-12-19 16:58:10.704][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 16:58:10.739][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ef970e5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:58:10.926][INFO ][main]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-19 16:58:10.943][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f59185e: startup date [Tue Dec 19 16:58:10 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 16:58:11.630][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-19 16:58:11.758][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-19 16:58:11.783][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-19 16:58:11.803][WARN ][main]org.mybatis.spring.mapper.ClassPathMapperScanner:doScan[166] - No MyBatis mapper was found in '[com.crady.demo.dao]' package. Please check your configuration.
[2017-12-19 16:58:11.902][WARN ][main]org.mybatis.spring.mapper.ClassPathMapperScanner:doScan[166] - No MyBatis mapper was found in '[com.crady]' package. Please check your configuration.
[2017-12-19 16:58:11.984][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-19 16:58:12.141][INFO ][main]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=56090985-638d-336c-adca-3413abb1777e
[2017-12-19 16:58:12.160][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 16:58:12.225][INFO ][main]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-19 16:58:12.225][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:58:12.226][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:58:12.297][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:58:12.332][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d37d0b5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:58:12.440][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ef970e5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 16:58:12.750][INFO ][main]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-19 16:58:12.868][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1925 ms
[2017-12-19 16:58:13.181][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-19 16:58:13.187][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-19 16:58:13.188][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-19 16:58:13.188][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-19 16:58:13.188][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-19 16:58:13.188][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-19 16:58:13.189][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-19 16:58:13.189][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-19 16:58:13.254][WARN ][main]org.springframework.context.support.AbstractApplicationContext:refresh[551] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userServiceImpl': Unsatisfied dependency expressed through field 'userMapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.crady.dao.UserMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
[2017-12-19 16:58:13.255][INFO ][main]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-19 16:58:13.281][INFO ][main]org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer:logAutoConfigurationReport[101] - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
[2017-12-19 16:58:13.433][ERROR][main]org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter:report[42] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field userMapper in com.crady.service.impl.UserServiceImpl required a bean of type 'com.crady.dao.UserMapper' that could not be found.


Action:

Consider defining a bean of type 'com.crady.dao.UserMapper' in your configuration.

[2017-12-19 17:16:11.060][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af: startup date [Tue Dec 19 17:16:11 CST 2017]; root of context hierarchy
[2017-12-19 17:16:11.283][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 17:16:11.323][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ef970e5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 17:16:11.510][INFO ][main]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-19 17:16:11.528][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f59185e: startup date [Tue Dec 19 17:16:11 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 17:16:11.992][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-19 17:16:12.128][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-19 17:16:12.154][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-19 17:16:12.349][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-19 17:16:12.520][INFO ][main]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=0d462b55-15e4-35a2-9472-5cf14aae23bb
[2017-12-19 17:16:12.539][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 17:16:12.607][INFO ][main]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-19 17:16:12.608][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 17:16:12.608][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 17:16:12.681][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 17:16:12.719][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d37d0b5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 17:16:12.831][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ef970e5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 17:16:13.148][INFO ][main]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-19 17:16:13.286][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1758 ms
[2017-12-19 17:16:13.608][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-19 17:16:13.614][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-19 17:16:13.614][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-19 17:16:13.614][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-19 17:16:13.615][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-19 17:16:13.615][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-19 17:16:13.615][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-19 17:16:13.615][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-19 17:16:14.495][INFO ][main]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f59185e: startup date [Tue Dec 19 17:16:11 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 17:16:14.567][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-19 17:16:14.571][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-19 17:16:14.573][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-19 17:16:14.631][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 17:16:14.631][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 17:16:14.693][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 17:16:15.662][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-19 17:16:15.663][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-19 17:16:15.663][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:16:15.664][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-19 17:16:15.664][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-19 17:16:15.665][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:16:15.665][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:16:15.667][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-19 17:16:15.667][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:16:15.669][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:16:15.670][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:16:15.671][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-19 17:16:15.673][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:16:15.673][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:16:15.674][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-19 17:16:15.676][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-19 17:16:15.677][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-19 17:16:15.677][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:16:15.678][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:16:15.678][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:16:15.679][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-19 17:16:15.679][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-19 17:16:15.680][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-19 17:16:15.899][WARN ][main]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-19 17:16:16.105][INFO ][main]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-19 17:16:16.106][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-19 17:16:16.115][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-19 17:16:16.118][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-19 17:16:16.118][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-19 17:16:16.119][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-19 17:16:16.120][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-19 17:16:16.123][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-19 17:16:16.135][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-19 17:16:16.142][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-19 17:16:16.155][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5f59185e,type=ConfigurationPropertiesRebinder]
[2017-12-19 17:16:16.161][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-19 17:16:16.164][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-19 17:16:16.169][INFO ][main]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-19 17:16:16.379][INFO ][main]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-19 17:16:16.386][INFO ][main]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-19 17:16:16.423][INFO ][main]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-19 17:16:16.618][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-19 17:16:16.618][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-19 17:16:16.696][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-19 17:16:16.697][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-19 17:16:16.922][INFO ][main]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 17:16:16.960][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-19 17:16:16.961][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-19 17:16:16.962][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-19 17:16:16.962][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-19 17:16:16.962][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-19 17:16:16.962][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-19 17:16:16.963][INFO ][main]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-19 17:16:17.069][INFO ][main]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-19 17:16:17.070][INFO ][main]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-19 17:16:17.072][INFO ][main]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-19 17:16:17.077][INFO ][main]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513674977077 with initial instances count: 0
[2017-12-19 17:16:17.088][INFO ][main]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-19 17:16:17.090][INFO ][main]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513674977090, current=UP, previous=STARTING]
[2017-12-19 17:16:17.091][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-19 17:16:17.096][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-19 17:16:17.103][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-19 17:16:17.117][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-19 17:16:17.119][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-19 17:16:17.123][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-19 17:16:17.126][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-19 17:16:17.130][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-19 17:16:17.132][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-19 17:16:17.138][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-19 17:16:17.141][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-19 17:16:17.143][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-19 17:16:17.146][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-19 17:16:17.148][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-19 17:16:17.156][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-19 17:16:17.241][INFO ][main]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-19 17:16:17.242][INFO ][main]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-19 17:16:17.247][INFO ][main]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 6.509 seconds (JVM running for 7.15)
[2017-12-19 17:16:17.355][INFO ][http-nio-8888-exec-2]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-19 17:16:17.381][INFO ][http-nio-8888-exec-2]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
[2017-12-19 17:16:32.028][INFO ][http-nio-8888-exec-7]com.alibaba.druid.pool.DruidDataSource:init[922] - {dataSource-1} inited
[2017-12-19 17:16:32.033][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-19 17:16:32.052][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-19 17:16:32.071][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-19 17:16:32.073][INFO ][http-nio-8888-exec-7]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-19 17:16:32.074][INFO ][http-nio-8888-exec-7]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-19 17:16:32.081][INFO ][http-nio-8888-exec-7]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[348ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-19 17:16:47.079][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-19 17:16:47.080][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-19 17:16:47.080][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-19 17:16:47.084][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-19 17:16:47.084][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-19 17:16:47.084][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: false
[2017-12-19 17:16:47.084][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-19 17:16:47.119][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-19 17:21:16.965][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 17:24:06.282][INFO ][http-nio-8888-exec-9]org.springframework.boot.actuate.endpoint.mvc.MvcEndpointSecurityInterceptor:logUnauthorizedAttempt[122] - Full authentication is required to access actuator endpoints. Consider adding Spring Security or set 'management.security.enabled' to false.
[2017-12-19 17:26:16.967][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 17:31:16.970][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 17:31:37.443][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:shutdown[125] - Application shutdown requested.
[2017-12-19 17:31:37.444][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f59185e: startup date [Tue Dec 19 17:16:11 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 17:31:37.444][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-19 17:31:37.445][WARN ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513675897445, current=DOWN, previous=UP]
[2017-12-19 17:31:37.445][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-19 17:31:37.447][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-19 17:31:37.449][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-19 17:31:37.453][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-19 17:31:37.454][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-19 17:31:37.454][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-19 17:31:37.455][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-19 17:31:37.456][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-19 17:31:37.468][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-19 17:31:37.472][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - deregister  status: 200
[2017-12-19 17:31:37.482][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-19 17:31:37.487][INFO ][RMI TCP Connection(2)-127.0.0.1]com.alibaba.druid.pool.DruidDataSource:close[1817] - {dataSource-1} closed
[2017-12-19 17:31:37.489][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-19 17:31:42.495][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af: startup date [Tue Dec 19 17:31:42 CST 2017]; root of context hierarchy
[2017-12-19 17:31:42.724][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 17:31:42.799][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ef970e5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 17:31:43.044][INFO ][main]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-19 17:31:43.062][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@60bdf15d: startup date [Tue Dec 19 17:31:43 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 17:31:43.602][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-19 17:31:43.744][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-19 17:31:43.775][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-19 17:31:44.014][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-19 17:31:44.222][INFO ][main]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=0d462b55-15e4-35a2-9472-5cf14aae23bb
[2017-12-19 17:31:44.255][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 17:31:44.328][INFO ][main]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-19 17:31:44.329][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 17:31:44.329][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 17:31:44.399][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 17:31:44.440][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d37d0b5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 17:31:44.560][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ef970e5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 17:31:44.884][INFO ][main]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-19 17:31:45.021][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1959 ms
[2017-12-19 17:31:45.340][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-19 17:31:45.345][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-19 17:31:45.345][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-19 17:31:45.346][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-19 17:31:45.346][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-19 17:31:45.346][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-19 17:31:45.346][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-19 17:31:45.347][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-19 17:31:46.195][INFO ][main]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@60bdf15d: startup date [Tue Dec 19 17:31:43 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 17:31:46.269][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-19 17:31:46.277][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-19 17:31:46.278][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-19 17:31:46.344][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 17:31:46.344][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 17:31:46.421][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 17:31:47.433][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:31:47.435][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-19 17:31:47.436][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-19 17:31:47.436][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:31:47.437][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-19 17:31:47.438][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:31:47.439][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-19 17:31:47.440][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:31:47.441][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-19 17:31:47.443][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-19 17:31:47.444][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:31:47.445][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-19 17:31:47.445][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:31:47.446][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-19 17:31:47.447][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-19 17:31:47.447][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-19 17:31:47.447][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-19 17:31:47.448][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-19 17:31:47.448][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:31:47.449][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:31:47.449][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:31:47.451][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:31:47.452][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:31:47.686][WARN ][main]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-19 17:31:47.893][INFO ][main]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-19 17:31:47.894][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-19 17:31:47.903][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-19 17:31:47.906][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-19 17:31:47.907][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-19 17:31:47.909][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-19 17:31:47.910][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-19 17:31:47.912][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-19 17:31:47.924][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-19 17:31:47.931][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-19 17:31:47.945][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=60bdf15d,type=ConfigurationPropertiesRebinder]
[2017-12-19 17:31:47.953][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-19 17:31:47.955][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-19 17:31:47.959][INFO ][main]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-19 17:31:48.178][INFO ][main]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-19 17:31:48.186][INFO ][main]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-19 17:31:48.224][INFO ][main]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-19 17:31:48.422][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-19 17:31:48.422][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-19 17:31:48.501][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-19 17:31:48.501][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-19 17:31:48.719][INFO ][main]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 17:31:48.759][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-19 17:31:48.759][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-19 17:31:48.759][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-19 17:31:48.759][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-19 17:31:48.760][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-19 17:31:48.760][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-19 17:31:48.760][INFO ][main]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-19 17:31:48.937][INFO ][main]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-19 17:31:48.940][INFO ][main]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-19 17:31:48.943][INFO ][main]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-19 17:31:48.948][INFO ][main]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513675908948 with initial instances count: 1
[2017-12-19 17:31:48.962][INFO ][main]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-19 17:31:48.962][INFO ][main]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513675908962, current=UP, previous=STARTING]
[2017-12-19 17:31:48.964][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-19 17:31:48.970][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-19 17:31:48.977][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-19 17:31:48.988][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-19 17:31:48.991][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-19 17:31:48.993][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-19 17:31:48.996][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-19 17:31:48.998][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-19 17:31:48.999][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-19 17:31:49.003][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-19 17:31:49.009][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-19 17:31:49.012][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-19 17:31:49.014][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-19 17:31:49.015][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-19 17:31:49.018][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-19 17:31:49.099][INFO ][main]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-19 17:31:49.100][INFO ][main]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-19 17:31:49.103][INFO ][main]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 6.928 seconds (JVM running for 7.689)
[2017-12-19 17:31:50.476][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-19 17:31:50.497][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
[2017-12-19 17:31:57.539][INFO ][http-nio-8888-exec-2]com.alibaba.druid.pool.DruidDataSource:init[922] - {dataSource-1} inited
[2017-12-19 17:32:13.190][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:shutdown[125] - Application shutdown requested.
[2017-12-19 17:32:13.190][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@60bdf15d: startup date [Tue Dec 19 17:31:43 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 17:32:13.191][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-19 17:32:13.191][WARN ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513675933191, current=DOWN, previous=UP]
[2017-12-19 17:32:13.191][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-19 17:32:13.192][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-19 17:32:13.193][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-19 17:32:13.194][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-19 17:32:13.195][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-19 17:32:13.195][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-19 17:32:13.196][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-19 17:32:13.196][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-19 17:32:13.197][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-19 17:32:13.203][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - deregister  status: 200
[2017-12-19 17:32:13.211][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-19 17:32:13.217][INFO ][RMI TCP Connection(2)-127.0.0.1]com.alibaba.druid.pool.DruidDataSource:close[1817] - {dataSource-1} closed
[2017-12-19 17:32:13.219][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-19 17:32:20.845][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af: startup date [Tue Dec 19 17:32:20 CST 2017]; root of context hierarchy
[2017-12-19 17:32:21.054][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 17:32:21.092][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$57d667b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 17:32:21.284][INFO ][main]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-19 17:32:21.304][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4215838f: startup date [Tue Dec 19 17:32:21 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 17:32:21.908][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-19 17:32:22.049][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-19 17:32:22.076][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-19 17:32:22.274][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-19 17:32:22.437][INFO ][main]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=0d462b55-15e4-35a2-9472-5cf14aae23bb
[2017-12-19 17:32:22.457][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 17:32:22.526][INFO ][main]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-19 17:32:22.527][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 17:32:22.527][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 17:32:22.598][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 17:32:22.638][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3bbc64bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 17:32:22.764][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$57d667b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 17:32:23.107][INFO ][main]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-19 17:32:23.245][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1942 ms
[2017-12-19 17:32:23.591][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-19 17:32:23.596][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-19 17:32:23.596][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-19 17:32:23.596][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-19 17:32:23.597][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-19 17:32:23.598][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-19 17:32:23.598][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-19 17:32:23.598][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-19 17:32:24.477][INFO ][main]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4215838f: startup date [Tue Dec 19 17:32:21 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 17:32:24.542][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-19 17:32:24.547][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-19 17:32:24.547][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-19 17:32:24.609][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 17:32:24.609][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 17:32:24.670][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 17:32:25.674][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:32:25.676][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-19 17:32:25.678][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-19 17:32:25.680][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:32:25.682][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:32:25.684][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-19 17:32:25.685][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-19 17:32:25.686][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:32:25.686][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-19 17:32:25.688][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:32:25.690][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-19 17:32:25.690][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-19 17:32:25.690][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:32:25.691][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-19 17:32:25.692][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:32:25.693][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:32:25.693][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:32:25.693][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:32:25.694][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-19 17:32:25.694][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-19 17:32:25.695][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-19 17:32:25.695][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-19 17:32:25.696][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 17:32:25.933][WARN ][main]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-19 17:32:26.136][INFO ][main]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-19 17:32:26.137][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-19 17:32:26.145][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-19 17:32:26.149][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-19 17:32:26.149][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-19 17:32:26.150][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-19 17:32:26.151][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-19 17:32:26.154][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-19 17:32:26.167][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-19 17:32:26.175][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-19 17:32:26.190][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4215838f,type=ConfigurationPropertiesRebinder]
[2017-12-19 17:32:26.196][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-19 17:32:26.199][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-19 17:32:26.203][INFO ][main]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-19 17:32:26.427][INFO ][main]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-19 17:32:26.437][INFO ][main]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-19 17:32:26.518][INFO ][main]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-19 17:32:26.756][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-19 17:32:26.756][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-19 17:32:26.834][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-19 17:32:26.834][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-19 17:32:27.059][INFO ][main]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 17:32:27.097][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-19 17:32:27.097][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-19 17:32:27.098][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-19 17:32:27.098][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-19 17:32:27.098][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-19 17:32:27.098][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-19 17:32:27.098][INFO ][main]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-19 17:32:27.249][INFO ][main]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-19 17:32:27.251][INFO ][main]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-19 17:32:27.254][INFO ][main]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-19 17:32:27.258][INFO ][main]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513675947258 with initial instances count: 1
[2017-12-19 17:32:27.270][INFO ][main]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-19 17:32:27.270][INFO ][main]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513675947270, current=UP, previous=STARTING]
[2017-12-19 17:32:27.272][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-19 17:32:27.275][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-19 17:32:27.282][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-19 17:32:27.307][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-19 17:32:27.310][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-19 17:32:27.312][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-19 17:32:27.315][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-19 17:32:27.317][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-19 17:32:27.319][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-19 17:32:27.321][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-19 17:32:27.327][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-19 17:32:27.330][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-19 17:32:27.332][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-19 17:32:27.334][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-19 17:32:27.335][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-19 17:32:27.395][INFO ][main]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-19 17:32:27.396][INFO ][main]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-19 17:32:27.399][INFO ][main]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 6.873 seconds (JVM running for 7.517)
[2017-12-19 17:32:30.516][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-19 17:32:30.539][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
[2017-12-19 17:32:30.769][INFO ][http-nio-8888-exec-1]com.alibaba.druid.pool.DruidDataSource:init[922] - {dataSource-1} inited
[2017-12-19 17:37:27.101][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 17:42:27.103][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 17:43:06.410][INFO ][http-nio-8888-exec-4]org.springframework.boot.actuate.endpoint.mvc.MvcEndpointSecurityInterceptor:logUnauthorizedAttempt[122] - Full authentication is required to access actuator endpoints. Consider adding Spring Security or set 'management.security.enabled' to false.
[2017-12-19 17:47:27.103][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 17:52:27.105][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 17:57:27.110][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 18:02:27.111][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 18:07:27.113][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 18:12:27.114][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 18:17:27.115][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 18:22:27.118][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 18:27:27.120][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 18:32:27.122][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 18:37:27.125][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 18:37:51.702][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:shutdown[125] - Application shutdown requested.
[2017-12-19 18:37:51.702][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4215838f: startup date [Tue Dec 19 17:32:21 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 18:37:51.708][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-19 18:37:51.709][WARN ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513679871709, current=DOWN, previous=UP]
[2017-12-19 18:37:51.709][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-19 18:37:51.718][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-19 18:37:51.726][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-19 18:37:51.729][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-19 18:37:51.731][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-19 18:37:51.732][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-19 18:37:51.732][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-19 18:37:51.734][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-19 18:37:51.735][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-19 18:37:51.741][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - deregister  status: 200
[2017-12-19 18:37:51.752][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-19 18:37:51.763][INFO ][RMI TCP Connection(2)-127.0.0.1]com.alibaba.druid.pool.DruidDataSource:close[1817] - {dataSource-1} closed
[2017-12-19 18:37:51.764][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-19 18:38:05.994][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af: startup date [Tue Dec 19 18:38:05 CST 2017]; root of context hierarchy
[2017-12-19 18:38:06.204][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 18:38:06.245][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3510cef0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 18:38:06.437][INFO ][main]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-19 18:38:06.454][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36b0fcd5: startup date [Tue Dec 19 18:38:06 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 18:38:06.940][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-19 18:38:07.080][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-19 18:38:07.107][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-19 18:38:07.294][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-19 18:38:07.453][INFO ][main]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=0d462b55-15e4-35a2-9472-5cf14aae23bb
[2017-12-19 18:38:07.472][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-19 18:38:07.538][INFO ][main]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-19 18:38:07.539][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 18:38:07.539][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 18:38:07.605][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 18:38:07.641][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$18f6cbf3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 18:38:07.751][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3510cef0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-19 18:38:08.065][INFO ][main]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-19 18:38:08.189][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1735 ms
[2017-12-19 18:38:08.486][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-19 18:38:08.491][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-19 18:38:08.492][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-19 18:38:08.492][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-19 18:38:08.492][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-19 18:38:08.492][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-19 18:38:08.492][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-19 18:38:08.493][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-19 18:38:09.300][INFO ][main]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36b0fcd5: startup date [Tue Dec 19 18:38:06 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 18:38:09.365][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-19 18:38:09.368][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-19 18:38:09.369][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-19 18:38:09.427][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 18:38:09.427][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 18:38:09.484][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-19 18:38:10.459][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 18:38:10.461][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-19 18:38:10.461][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 18:38:10.462][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 18:38:10.462][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 18:38:10.463][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-19 18:38:10.463][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-19 18:38:10.464][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 18:38:10.466][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-19 18:38:10.468][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 18:38:10.469][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-19 18:38:10.469][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 18:38:10.470][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 18:38:10.470][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-19 18:38:10.471][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-19 18:38:10.471][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-19 18:38:10.473][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-19 18:38:10.473][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-19 18:38:10.473][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 18:38:10.474][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-19 18:38:10.475][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 18:38:10.475][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-19 18:38:10.476][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-19 18:38:10.698][WARN ][main]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-19 18:38:10.897][INFO ][main]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-19 18:38:10.898][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-19 18:38:10.907][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-19 18:38:10.909][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-19 18:38:10.910][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-19 18:38:10.911][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-19 18:38:10.911][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-19 18:38:10.914][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-19 18:38:10.925][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-19 18:38:10.932][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-19 18:38:10.944][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=36b0fcd5,type=ConfigurationPropertiesRebinder]
[2017-12-19 18:38:10.950][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-19 18:38:10.954][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-19 18:38:10.958][INFO ][main]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-19 18:38:11.166][INFO ][main]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-19 18:38:11.173][INFO ][main]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-19 18:38:11.208][INFO ][main]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-19 18:38:11.405][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-19 18:38:11.405][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-19 18:38:11.486][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-19 18:38:11.486][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-19 18:38:11.702][INFO ][main]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 18:38:11.739][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-19 18:38:11.739][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-19 18:38:11.740][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-19 18:38:11.740][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-19 18:38:11.740][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-19 18:38:11.740][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-19 18:38:11.740][INFO ][main]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-19 18:38:11.845][INFO ][main]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-19 18:38:11.846][INFO ][main]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-19 18:38:11.848][INFO ][main]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-19 18:38:11.854][INFO ][main]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513679891853 with initial instances count: 0
[2017-12-19 18:38:11.865][INFO ][main]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-19 18:38:11.866][INFO ][main]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513679891866, current=UP, previous=STARTING]
[2017-12-19 18:38:11.867][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-19 18:38:11.872][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-19 18:38:11.893][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-19 18:38:11.907][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-19 18:38:11.911][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-19 18:38:11.916][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-19 18:38:11.919][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-19 18:38:11.922][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-19 18:38:11.926][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-19 18:38:11.937][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-19 18:38:11.939][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-19 18:38:11.942][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-19 18:38:11.944][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-19 18:38:11.951][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-19 18:38:11.957][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-19 18:38:12.013][INFO ][main]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-19 18:38:12.014][INFO ][main]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-19 18:38:12.017][INFO ][main]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 6.336 seconds (JVM running for 6.974)
[2017-12-19 18:38:21.404][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-19 18:38:21.427][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
[2017-12-19 18:38:26.988][INFO ][http-nio-8888-exec-7]com.alibaba.druid.pool.DruidDataSource:init[922] - {dataSource-1} inited
[2017-12-19 18:38:41.847][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-19 18:38:41.848][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-19 18:38:41.849][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-19 18:38:41.851][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-19 18:38:41.851][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-19 18:38:41.852][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: false
[2017-12-19 18:38:41.852][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-19 18:38:41.892][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-19 18:43:11.744][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 18:48:11.746][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-19 18:49:22.348][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:shutdown[125] - Application shutdown requested.
[2017-12-19 18:49:22.348][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36b0fcd5: startup date [Tue Dec 19 18:38:06 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ef782af
[2017-12-19 18:49:22.349][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-19 18:49:22.350][WARN ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513680562350, current=DOWN, previous=UP]
[2017-12-19 18:49:22.350][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-19 18:49:22.351][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-19 18:49:22.353][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-19 18:49:22.353][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-19 18:49:22.354][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-19 18:49:22.354][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-19 18:49:22.355][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-19 18:49:22.356][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-19 18:49:22.359][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-19 18:49:22.361][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - deregister  status: 200
[2017-12-19 18:49:22.369][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-19 18:49:22.374][INFO ][RMI TCP Connection(2)-127.0.0.1]com.alibaba.druid.pool.DruidDataSource:close[1817] - {dataSource-1} closed
[2017-12-19 18:49:22.375][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
