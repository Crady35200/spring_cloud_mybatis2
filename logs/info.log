[2017-12-21 09:31:49.665][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@42a15bdc: startup date [Thu Dec 21 09:31:49 CST 2017]; root of context hierarchy
[2017-12-21 09:31:49.898][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 09:31:49.938][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c5aba513] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:31:50.138][INFO ][main]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-21 09:31:50.164][INFO ][main]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ce5a68e: startup date [Thu Dec 21 09:31:50 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@42a15bdc
[2017-12-21 09:31:50.665][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-21 09:31:50.845][INFO ][main]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-21 09:31:50.875][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-21 09:31:51.105][INFO ][main]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-21 09:31:51.308][INFO ][main]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=44ff76fd-64e8-33f6-80b1-0e5030034192
[2017-12-21 09:31:51.328][INFO ][main]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 09:31:51.388][INFO ][main]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-21 09:31:51.388][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:31:51.388][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:31:51.468][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:31:51.528][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a991a216] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:31:51.655][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$dbbe4857] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:31:51.665][INFO ][main]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c5aba513] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:31:51.975][INFO ][main]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-21 09:31:52.084][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1920 ms
[2017-12-21 09:31:52.366][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-21 09:31:52.376][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-21 09:31:52.376][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-21 09:31:52.376][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-21 09:31:52.376][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-21 09:31:52.376][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-21 09:31:52.376][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-21 09:31:52.376][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-21 09:31:52.976][WARN ][main]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 09:31:52.976][INFO ][main]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 09:31:52.987][WARN ][main]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 09:31:52.987][INFO ][main]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 09:31:53.310][INFO ][main]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ce5a68e: startup date [Thu Dec 21 09:31:50 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@42a15bdc
[2017-12-21 09:31:53.479][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-21 09:31:53.479][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-21 09:31:53.479][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-21 09:31:53.539][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:31:53.539][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:31:53.599][INFO ][main]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:31:54.528][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:31:54.529][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:31:54.529][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-21 09:31:54.530][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-21 09:31:54.530][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:31:54.530][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-21 09:31:54.530][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:31:54.530][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:31:54.530][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-21 09:31:54.530][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:31:54.530][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-21 09:31:54.530][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-21 09:31:54.530][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:31:54.530][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-21 09:31:54.540][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-21 09:31:54.540][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:31:54.540][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:31:54.540][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-21 09:31:54.540][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 09:31:54.540][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:31:54.540][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 09:31:54.540][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-21 09:31:54.540][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:31:54.540][INFO ][main]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:31:54.900][WARN ][main]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-21 09:31:55.090][INFO ][main]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 09:31:55.090][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-21 09:31:55.100][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-21 09:31:55.100][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-21 09:31:55.100][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-21 09:31:55.100][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-21 09:31:55.100][INFO ][main]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-21 09:31:55.110][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-21 09:31:55.120][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-21 09:31:55.120][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-21 09:31:55.140][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=ce5a68e,type=ConfigurationPropertiesRebinder]
[2017-12-21 09:31:55.140][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-21 09:31:55.140][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-21 09:31:55.150][INFO ][main]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 09:31:55.357][INFO ][main]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-21 09:31:55.357][INFO ][main]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-21 09:31:55.387][INFO ][main]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-21 09:31:55.597][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-21 09:31:55.597][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-21 09:31:55.661][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-21 09:31:55.661][INFO ][main]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-21 09:31:55.851][INFO ][main]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 09:31:55.891][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 09:31:55.891][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 09:31:55.891][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 09:31:55.891][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 09:31:55.891][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 09:31:55.891][INFO ][main]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-21 09:31:55.891][INFO ][main]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 09:31:56.116][INFO ][main]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 09:31:56.116][INFO ][main]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-21 09:31:56.116][INFO ][main]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-21 09:31:56.116][INFO ][main]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513819916116 with initial instances count: 0
[2017-12-21 09:31:56.136][INFO ][main]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-21 09:31:56.136][INFO ][main]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513819916136, current=UP, previous=STARTING]
[2017-12-21 09:31:56.136][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-21 09:31:56.136][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-21 09:31:56.146][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[2017-12-21 09:31:56.156][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-21 09:31:56.156][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-21 09:31:56.156][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-21 09:31:56.166][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-21 09:31:56.166][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-21 09:31:56.186][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-21 09:31:56.186][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-21 09:31:56.196][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-21 09:31:56.206][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-21 09:31:56.206][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-21 09:31:56.216][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-21 09:31:56.216][INFO ][main]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-21 09:31:56.286][INFO ][main]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-21 09:31:56.286][INFO ][main]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-21 09:31:56.286][INFO ][main]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 6.941 seconds (JVM running for 7.635)
[2017-12-21 09:31:56.296][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-21 09:32:10.213][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-21 09:32:10.241][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
[2017-12-21 09:32:10.604][INFO ][http-nio-8888-exec-1]com.alibaba.druid.pool.DruidDataSource:init[922] - {dataSource-1} inited
[2017-12-21 09:32:10.608][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:32:10.631][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:32:10.655][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:32:10.657][INFO ][http-nio-8888-exec-1]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:32:10.657][INFO ][http-nio-8888-exec-1]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:32:10.682][INFO ][http-nio-8888-exec-1]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[418ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:32:26.125][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 09:32:26.128][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 09:32:26.128][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 09:32:26.128][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 09:32:26.128][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 09:32:26.129][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: false
[2017-12-21 09:32:26.129][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 09:32:26.170][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 09:36:55.899][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 09:39:45.985][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:shutdown[125] - Application shutdown requested.
[2017-12-21 09:39:45.986][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@ce5a68e: startup date [Thu Dec 21 09:31:50 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@42a15bdc
[2017-12-21 09:39:45.988][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-21 09:39:45.988][WARN ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513820385988, current=DOWN, previous=UP]
[2017-12-21 09:39:45.989][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-21 09:39:45.991][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-21 09:39:45.994][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 09:39:45.996][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 09:39:45.997][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 09:39:45.998][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 09:39:45.999][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-21 09:39:45.999][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-21 09:39:46.006][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-21 09:39:46.030][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - deregister  status: 200
[2017-12-21 09:39:46.035][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-21 09:39:46.043][INFO ][RMI TCP Connection(2)-127.0.0.1]com.alibaba.druid.pool.DruidDataSource:close[1817] - {dataSource-1} closed
[2017-12-21 09:39:46.044][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-21 09:39:54.192][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@415b072a: startup date [Thu Dec 21 09:39:54 CST 2017]; root of context hierarchy
[2017-12-21 09:39:54.395][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 09:39:54.439][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fd0a0e72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:39:54.652][INFO ][restartedMain]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-21 09:39:54.678][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@33f1493f: startup date [Thu Dec 21 09:39:54 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@415b072a
[2017-12-21 09:39:55.666][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-21 09:39:55.798][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-21 09:39:55.824][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-21 09:39:56.099][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-21 09:39:56.363][INFO ][restartedMain]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=bf9f1261-c034-3e7b-a89e-0a96f03f8313
[2017-12-21 09:39:56.377][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 09:39:56.422][INFO ][restartedMain]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-21 09:39:56.423][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:39:56.423][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:39:56.482][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:39:56.536][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e0f00b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:39:56.644][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$131cb1b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:39:56.657][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fd0a0e72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:39:57.114][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-21 09:39:57.231][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 2553 ms
[2017-12-21 09:39:57.584][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-21 09:39:57.590][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-21 09:39:57.590][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-21 09:39:57.591][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-21 09:39:57.591][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-21 09:39:57.591][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-21 09:39:57.591][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-21 09:39:57.592][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-21 09:39:58.179][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 09:39:58.179][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 09:39:58.183][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 09:39:58.183][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 09:39:58.600][INFO ][restartedMain]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@33f1493f: startup date [Thu Dec 21 09:39:54 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@415b072a
[2017-12-21 09:39:58.703][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-21 09:39:58.709][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-21 09:39:58.710][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-21 09:39:58.775][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:39:58.775][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:39:58.835][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:39:59.864][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:39:59.865][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-21 09:39:59.866][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:39:59.866][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 09:39:59.867][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-21 09:39:59.868][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-21 09:39:59.869][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:39:59.870][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-21 09:39:59.871][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:39:59.872][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-21 09:39:59.874][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:39:59.874][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/cradyyyy || /cradyyyy.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:39:59.876][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-21 09:39:59.876][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-21 09:39:59.877][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-21 09:39:59.879][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:39:59.879][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:39:59.880][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-21 09:39:59.881][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:39:59.882][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:39:59.882][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:39:59.884][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-21 09:39:59.884][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 09:39:59.884][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:40:00.206][INFO ][restartedMain]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer:startServer[58] - LiveReload server is running on port 35729
[2017-12-21 09:40:00.399][WARN ][restartedMain]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-21 09:40:00.609][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 09:40:00.610][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-21 09:40:00.618][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-21 09:40:00.621][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-21 09:40:00.621][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-21 09:40:00.622][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-21 09:40:00.623][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-21 09:40:00.625][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-21 09:40:00.637][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-21 09:40:00.645][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-21 09:40:00.660][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=33f1493f,type=ConfigurationPropertiesRebinder]
[2017-12-21 09:40:00.665][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-21 09:40:00.669][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-21 09:40:00.674][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 09:40:00.946][INFO ][restartedMain]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-21 09:40:00.954][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-21 09:40:00.984][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-21 09:40:01.147][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-21 09:40:01.147][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-21 09:40:01.227][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-21 09:40:01.228][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-21 09:40:01.433][INFO ][restartedMain]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 09:40:01.473][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 09:40:01.473][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 09:40:01.473][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 09:40:01.473][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 09:40:01.474][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 09:40:01.474][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-21 09:40:01.474][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 09:40:01.570][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 09:40:01.571][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-21 09:40:01.573][INFO ][restartedMain]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-21 09:40:01.575][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513820401575 with initial instances count: 0
[2017-12-21 09:40:01.591][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-21 09:40:01.592][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513820401592, current=UP, previous=STARTING]
[2017-12-21 09:40:01.595][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-21 09:40:01.599][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-21 09:40:01.609][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[2017-12-21 09:40:01.620][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-21 09:40:01.622][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-21 09:40:01.625][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-21 09:40:01.627][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-21 09:40:01.629][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-21 09:40:01.632][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-21 09:40:01.636][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-21 09:40:01.643][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-21 09:40:01.645][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-21 09:40:01.647][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-21 09:40:01.650][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-21 09:40:01.652][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-21 09:40:01.654][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-21 09:40:01.718][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-21 09:40:01.720][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-21 09:40:01.725][INFO ][restartedMain]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 7.876 seconds (JVM running for 8.641)
[2017-12-21 09:40:14.116][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-21 09:40:14.146][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
[2017-12-21 09:40:14.389][INFO ][http-nio-8888-exec-1]com.alibaba.druid.pool.DruidDataSource:init[922] - {dataSource-1} inited
[2017-12-21 09:40:14.394][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:40:14.412][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:40:14.431][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:40:14.432][INFO ][http-nio-8888-exec-1]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:40:14.433][INFO ][http-nio-8888-exec-1]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:40:14.448][INFO ][http-nio-8888-exec-1]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[279ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:40:27.565][DEBUG][http-nio-8888-exec-3]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:40:27.565][DEBUG][http-nio-8888-exec-3]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:40:27.568][DEBUG][http-nio-8888-exec-3]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:40:27.568][INFO ][http-nio-8888-exec-3]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:40:27.569][INFO ][http-nio-8888-exec-3]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:40:27.571][INFO ][http-nio-8888-exec-3]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[6ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:40:28.060][DEBUG][http-nio-8888-exec-6]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:40:28.061][DEBUG][http-nio-8888-exec-6]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:40:28.062][DEBUG][http-nio-8888-exec-6]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:40:28.062][INFO ][http-nio-8888-exec-6]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:40:28.062][INFO ][http-nio-8888-exec-6]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:40:28.063][INFO ][http-nio-8888-exec-6]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[3ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:40:31.573][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 09:40:31.573][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 09:40:31.574][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 09:40:31.576][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 09:40:31.577][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 09:40:31.577][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: false
[2017-12-21 09:40:31.578][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 09:40:31.634][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 09:41:03.745][DEBUG][http-nio-8888-exec-8]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:41:03.745][DEBUG][http-nio-8888-exec-8]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:41:03.748][DEBUG][http-nio-8888-exec-8]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:41:03.748][INFO ][http-nio-8888-exec-8]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:41:03.749][INFO ][http-nio-8888-exec-8]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:41:03.751][INFO ][http-nio-8888-exec-8]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[7ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:41:42.597][DEBUG][http-nio-8888-exec-6]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:41:42.597][DEBUG][http-nio-8888-exec-6]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:41:42.599][DEBUG][http-nio-8888-exec-6]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:41:42.600][INFO ][http-nio-8888-exec-6]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:41:42.600][INFO ][http-nio-8888-exec-6]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:41:42.601][INFO ][http-nio-8888-exec-6]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[5ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:41:58.270][DEBUG][http-nio-8888-exec-8]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:41:58.270][DEBUG][http-nio-8888-exec-8]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:41:58.271][DEBUG][http-nio-8888-exec-8]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:41:58.272][INFO ][http-nio-8888-exec-8]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:41:58.272][INFO ][http-nio-8888-exec-8]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:41:58.273][INFO ][http-nio-8888-exec-8]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[4ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:43:12.382][DEBUG][http-nio-8888-exec-10]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:43:12.382][DEBUG][http-nio-8888-exec-10]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:43:12.384][DEBUG][http-nio-8888-exec-10]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:43:12.385][INFO ][http-nio-8888-exec-10]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:43:12.385][INFO ][http-nio-8888-exec-10]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:43:12.386][INFO ][http-nio-8888-exec-10]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[4ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:43:19.814][DEBUG][http-nio-8888-exec-3]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:43:19.815][DEBUG][http-nio-8888-exec-3]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:43:19.816][DEBUG][http-nio-8888-exec-3]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:43:19.817][INFO ][http-nio-8888-exec-3]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:43:19.817][INFO ][http-nio-8888-exec-3]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:43:19.818][INFO ][http-nio-8888-exec-3]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[5ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:43:56.267][INFO ][Thread-9]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@415b072a: startup date [Thu Dec 21 09:39:54 CST 2017]; root of context hierarchy
[2017-12-21 09:43:56.269][INFO ][Thread-9]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@33f1493f: startup date [Thu Dec 21 09:39:54 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@415b072a
[2017-12-21 09:43:56.270][INFO ][Thread-9]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-21 09:43:56.271][WARN ][Thread-9]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513820636271, current=DOWN, previous=UP]
[2017-12-21 09:43:56.271][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-21 09:43:56.274][INFO ][Thread-9]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-21 09:43:56.277][INFO ][Thread-9]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 09:43:56.278][INFO ][Thread-9]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 09:43:56.281][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-21 09:43:56.281][INFO ][Thread-9]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 09:43:56.281][INFO ][Thread-9]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 09:43:56.290][INFO ][Thread-9]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-21 09:43:56.295][INFO ][Thread-9]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-21 09:43:56.305][INFO ][Thread-9]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - deregister  status: 200
[2017-12-21 09:43:56.305][INFO ][Thread-9]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-21 09:43:56.305][INFO ][Thread-9]com.alibaba.druid.pool.DruidDataSource:close[1817] - {dataSource-1} closed
[2017-12-21 09:43:56.315][INFO ][Thread-9]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-21 09:43:56.725][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5d652a6f: startup date [Thu Dec 21 09:43:56 CST 2017]; root of context hierarchy
[2017-12-21 09:43:56.738][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 09:43:56.744][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fd0a0e72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:43:56.849][INFO ][restartedMain]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-21 09:43:56.853][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4b65774e: startup date [Thu Dec 21 09:43:56 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5d652a6f
[2017-12-21 09:43:57.614][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-21 09:43:57.629][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-21 09:43:57.646][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-21 09:43:57.761][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-21 09:43:57.839][INFO ][restartedMain]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=bf9f1261-c034-3e7b-a89e-0a96f03f8313
[2017-12-21 09:43:57.848][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 09:43:57.851][INFO ][restartedMain]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-21 09:43:57.852][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:43:57.852][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:43:57.857][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:43:57.869][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e0f00b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:43:57.880][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$131cb1b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:43:57.883][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fd0a0e72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:43:58.008][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-21 09:43:58.027][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1174 ms
[2017-12-21 09:43:58.196][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-21 09:43:58.197][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-21 09:43:58.197][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-21 09:43:58.197][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-21 09:43:58.197][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-21 09:43:58.197][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-21 09:43:58.197][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-21 09:43:58.197][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-21 09:43:58.734][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 09:43:58.735][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 09:43:59.098][INFO ][restartedMain]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4b65774e: startup date [Thu Dec 21 09:43:56 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5d652a6f
[2017-12-21 09:43:59.158][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-21 09:43:59.161][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-21 09:43:59.161][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-21 09:43:59.239][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:43:59.240][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:43:59.332][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:44:00.846][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-21 09:44:00.884][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:00.888][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-21 09:44:00.891][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:00.895][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:00.895][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:00.895][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-21 09:44:00.895][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/cradyyyy || /cradyyyy.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:00.895][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:00.905][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 09:44:00.908][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-21 09:44:00.909][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:00.909][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-21 09:44:00.910][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:00.910][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:00.910][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-21 09:44:00.911][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-21 09:44:00.912][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-21 09:44:00.912][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-21 09:44:00.912][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:00.913][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:00.913][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-21 09:44:00.915][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 09:44:00.915][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:01.031][INFO ][restartedMain]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer:startServer[58] - LiveReload server is running on port 35729
[2017-12-21 09:44:01.123][WARN ][restartedMain]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-21 09:44:01.345][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 09:44:01.345][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-21 09:44:01.348][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-21 09:44:01.350][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-21 09:44:01.351][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-21 09:44:01.351][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-21 09:44:01.352][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-21 09:44:01.354][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-21 09:44:01.357][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-21 09:44:01.361][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-21 09:44:01.364][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4b65774e,type=ConfigurationPropertiesRebinder]
[2017-12-21 09:44:01.367][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-21 09:44:01.369][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-21 09:44:01.370][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 09:44:01.638][INFO ][restartedMain]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-21 09:44:01.640][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-21 09:44:01.644][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-21 09:44:01.646][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-21 09:44:01.646][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-21 09:44:01.647][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-21 09:44:01.647][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-21 09:44:01.753][INFO ][restartedMain]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 09:44:01.772][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 09:44:01.772][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 09:44:01.773][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 09:44:01.773][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 09:44:01.773][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 09:44:01.773][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-21 09:44:01.773][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 09:44:01.777][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 09:44:01.778][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-21 09:44:01.778][INFO ][restartedMain]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-21 09:44:01.779][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513820641779 with initial instances count: 0
[2017-12-21 09:44:01.787][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-21 09:44:01.787][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513820641787, current=UP, previous=STARTING]
[2017-12-21 09:44:01.788][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-21 09:44:01.790][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-21 09:44:01.793][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-21 09:44:01.793][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[2017-12-21 09:44:01.795][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-21 09:44:01.796][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-21 09:44:01.798][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-21 09:44:01.800][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-21 09:44:01.802][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-21 09:44:01.803][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-21 09:44:01.805][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-21 09:44:01.808][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-21 09:44:01.810][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-21 09:44:01.811][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-21 09:44:01.813][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-21 09:44:01.815][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-21 09:44:01.833][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-21 09:44:01.834][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-21 09:44:01.837][INFO ][restartedMain]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 5.216 seconds (JVM running for 248.753)
[2017-12-21 09:44:03.653][INFO ][Thread-13]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@5d652a6f: startup date [Thu Dec 21 09:43:56 CST 2017]; root of context hierarchy
[2017-12-21 09:44:03.654][INFO ][Thread-13]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4b65774e: startup date [Thu Dec 21 09:43:56 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5d652a6f
[2017-12-21 09:44:03.654][INFO ][Thread-13]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-21 09:44:03.654][WARN ][Thread-13]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513820643654, current=DOWN, previous=UP]
[2017-12-21 09:44:03.656][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-21 09:44:03.657][INFO ][Thread-13]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-21 09:44:03.659][INFO ][Thread-13]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 09:44:03.659][INFO ][Thread-13]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 09:44:03.661][INFO ][Thread-13]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 09:44:03.661][INFO ][Thread-13]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 09:44:03.661][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-21 09:44:03.662][INFO ][Thread-13]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-21 09:44:03.664][INFO ][Thread-13]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-21 09:44:03.668][INFO ][Thread-13]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - deregister  status: 200
[2017-12-21 09:44:03.670][INFO ][Thread-13]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-21 09:44:03.672][INFO ][Thread-13]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-21 09:44:04.034][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1128cf3d: startup date [Thu Dec 21 09:44:04 CST 2017]; root of context hierarchy
[2017-12-21 09:44:04.053][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 09:44:04.056][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fd0a0e72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:44:04.156][INFO ][restartedMain]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-21 09:44:04.161][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7d93fa80: startup date [Thu Dec 21 09:44:04 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1128cf3d
[2017-12-21 09:44:04.944][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-21 09:44:04.959][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-21 09:44:04.974][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-21 09:44:05.086][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-21 09:44:05.168][INFO ][restartedMain]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=bf9f1261-c034-3e7b-a89e-0a96f03f8313
[2017-12-21 09:44:05.176][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 09:44:05.181][INFO ][restartedMain]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-21 09:44:05.181][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:44:05.181][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:44:05.186][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:44:05.197][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e0f00b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:44:05.210][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$131cb1b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:44:05.213][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fd0a0e72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:44:05.336][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-21 09:44:05.354][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1193 ms
[2017-12-21 09:44:05.467][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-21 09:44:05.467][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-21 09:44:05.467][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-21 09:44:05.467][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-21 09:44:05.467][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-21 09:44:05.468][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-21 09:44:05.468][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-21 09:44:05.468][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-21 09:44:05.695][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 09:44:05.695][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 09:44:05.841][INFO ][restartedMain]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7d93fa80: startup date [Thu Dec 21 09:44:04 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1128cf3d
[2017-12-21 09:44:05.870][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-21 09:44:05.871][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-21 09:44:05.872][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-21 09:44:05.899][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:44:05.900][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:44:05.929][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:44:06.393][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-21 09:44:06.393][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:06.394][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-21 09:44:06.395][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-21 09:44:06.395][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 09:44:06.395][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:06.396][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-21 09:44:06.396][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:06.397][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-21 09:44:06.397][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-21 09:44:06.397][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-21 09:44:06.398][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:06.398][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-21 09:44:06.399][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:06.399][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:06.400][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:06.400][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-21 09:44:06.401][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 09:44:06.401][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-21 09:44:06.401][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:06.402][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:06.402][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:06.403][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/cradyyyy || /cradyyyy.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:06.403][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:06.541][INFO ][restartedMain]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer:startServer[58] - LiveReload server is running on port 35729
[2017-12-21 09:44:06.607][WARN ][restartedMain]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-21 09:44:06.815][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 09:44:06.815][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-21 09:44:06.818][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-21 09:44:06.821][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-21 09:44:06.821][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-21 09:44:06.822][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-21 09:44:06.822][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-21 09:44:06.824][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-21 09:44:06.826][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-21 09:44:06.829][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-21 09:44:06.832][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7d93fa80,type=ConfigurationPropertiesRebinder]
[2017-12-21 09:44:06.834][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-21 09:44:06.836][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-21 09:44:06.836][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 09:44:07.103][INFO ][restartedMain]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-21 09:44:07.105][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-21 09:44:07.110][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-21 09:44:07.112][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-21 09:44:07.113][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-21 09:44:07.113][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-21 09:44:07.113][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-21 09:44:07.222][INFO ][restartedMain]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 09:44:07.224][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 09:44:07.224][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 09:44:07.224][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 09:44:07.224][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 09:44:07.224][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 09:44:07.224][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-21 09:44:07.224][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 09:44:07.228][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 09:44:07.228][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-21 09:44:07.228][INFO ][restartedMain]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-21 09:44:07.229][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513820647229 with initial instances count: 0
[2017-12-21 09:44:07.237][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-21 09:44:07.237][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513820647237, current=UP, previous=STARTING]
[2017-12-21 09:44:07.239][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-21 09:44:07.241][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-21 09:44:07.244][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[2017-12-21 09:44:07.244][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-21 09:44:07.247][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-21 09:44:07.249][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-21 09:44:07.250][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-21 09:44:07.252][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-21 09:44:07.253][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-21 09:44:07.255][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-21 09:44:07.257][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-21 09:44:07.259][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-21 09:44:07.261][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-21 09:44:07.262][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-21 09:44:07.264][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-21 09:44:07.265][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-21 09:44:07.299][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-21 09:44:07.299][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-21 09:44:07.306][INFO ][restartedMain]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 3.373 seconds (JVM running for 254.222)
[2017-12-21 09:44:17.022][INFO ][Thread-22]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1128cf3d: startup date [Thu Dec 21 09:44:04 CST 2017]; root of context hierarchy
[2017-12-21 09:44:17.023][INFO ][Thread-22]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7d93fa80: startup date [Thu Dec 21 09:44:04 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1128cf3d
[2017-12-21 09:44:17.024][INFO ][Thread-22]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-21 09:44:17.024][WARN ][Thread-22]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513820657024, current=DOWN, previous=UP]
[2017-12-21 09:44:17.024][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-21 09:44:17.026][INFO ][Thread-22]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-21 09:44:17.029][INFO ][Thread-22]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 09:44:17.029][INFO ][Thread-22]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 09:44:17.030][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-21 09:44:17.030][INFO ][Thread-22]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 09:44:17.030][INFO ][Thread-22]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 09:44:17.031][INFO ][Thread-22]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-21 09:44:17.031][INFO ][Thread-22]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-21 09:44:17.036][INFO ][Thread-22]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - deregister  status: 200
[2017-12-21 09:44:17.038][INFO ][Thread-22]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-21 09:44:17.038][INFO ][Thread-22]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-21 09:44:17.428][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@520c03f8: startup date [Thu Dec 21 09:44:17 CST 2017]; root of context hierarchy
[2017-12-21 09:44:17.447][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 09:44:17.450][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fd0a0e72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:44:17.556][INFO ][restartedMain]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-21 09:44:17.560][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6422f25b: startup date [Thu Dec 21 09:44:17 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@520c03f8
[2017-12-21 09:44:18.380][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-21 09:44:18.394][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-21 09:44:18.408][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-21 09:44:18.519][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-21 09:44:18.602][INFO ][restartedMain]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=bf9f1261-c034-3e7b-a89e-0a96f03f8313
[2017-12-21 09:44:18.610][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 09:44:18.615][INFO ][restartedMain]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-21 09:44:18.615][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:44:18.615][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:44:18.621][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:44:18.633][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e0f00b75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:44:18.645][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$131cb1b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:44:18.649][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fd0a0e72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:44:18.780][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-21 09:44:18.804][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1244 ms
[2017-12-21 09:44:18.923][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-21 09:44:18.924][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-21 09:44:18.924][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-21 09:44:18.924][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-21 09:44:18.924][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-21 09:44:18.924][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-21 09:44:18.924][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-21 09:44:18.924][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-21 09:44:19.194][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 09:44:19.195][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 09:44:19.352][INFO ][restartedMain]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6422f25b: startup date [Thu Dec 21 09:44:17 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@520c03f8
[2017-12-21 09:44:19.382][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-21 09:44:19.383][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-21 09:44:19.384][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-21 09:44:19.415][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:44:19.415][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:44:19.448][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:44:19.941][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:19.941][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:19.941][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/cradyyyy || /cradyyyy.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:19.942][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-21 09:44:19.942][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:19.942][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 09:44:19.943][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-21 09:44:19.943][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:19.944][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-21 09:44:19.944][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:19.944][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-21 09:44:19.944][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-21 09:44:19.945][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:19.945][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-21 09:44:19.946][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-21 09:44:19.947][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 09:44:19.947][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:19.948][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-21 09:44:19.948][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-21 09:44:19.948][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:19.949][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:19.949][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:19.950][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-21 09:44:19.950][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:44:20.070][INFO ][restartedMain]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer:startServer[58] - LiveReload server is running on port 35729
[2017-12-21 09:44:20.140][WARN ][restartedMain]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-21 09:44:20.343][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 09:44:20.343][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-21 09:44:20.346][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-21 09:44:20.349][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-21 09:44:20.349][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-21 09:44:20.349][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-21 09:44:20.350][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-21 09:44:20.351][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-21 09:44:20.354][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-21 09:44:20.356][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-21 09:44:20.360][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6422f25b,type=ConfigurationPropertiesRebinder]
[2017-12-21 09:44:20.362][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-21 09:44:20.364][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-21 09:44:20.365][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 09:44:20.631][INFO ][restartedMain]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-21 09:44:20.632][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-21 09:44:20.636][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-21 09:44:20.638][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-21 09:44:20.639][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-21 09:44:20.639][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-21 09:44:20.639][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-21 09:44:20.746][INFO ][restartedMain]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 09:44:20.747][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 09:44:20.747][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 09:44:20.748][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 09:44:20.748][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 09:44:20.748][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 09:44:20.748][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-21 09:44:20.748][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 09:44:20.753][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 09:44:20.754][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-21 09:44:20.754][INFO ][restartedMain]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-21 09:44:20.755][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513820660755 with initial instances count: 0
[2017-12-21 09:44:20.764][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-21 09:44:20.764][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513820660764, current=UP, previous=STARTING]
[2017-12-21 09:44:20.764][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-21 09:44:20.768][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-21 09:44:20.770][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-21 09:44:20.772][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[2017-12-21 09:44:20.774][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-21 09:44:20.776][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-21 09:44:20.777][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-21 09:44:20.779][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-21 09:44:20.781][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-21 09:44:20.783][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-21 09:44:20.784][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-21 09:44:20.787][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-21 09:44:20.789][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-21 09:44:20.791][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-21 09:44:20.793][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-21 09:44:20.794][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-21 09:44:20.814][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-21 09:44:20.816][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-21 09:44:20.820][INFO ][restartedMain]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 3.497 seconds (JVM running for 267.736)
[2017-12-21 09:44:22.803][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-21 09:44:22.813][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 10 ms
[2017-12-21 09:44:22.831][INFO ][http-nio-8888-exec-1]com.alibaba.druid.pool.DruidDataSource:init[922] - {dataSource-2} inited
[2017-12-21 09:44:22.832][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:44:22.832][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:44:22.835][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:44:22.836][INFO ][http-nio-8888-exec-1]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:44:22.836][INFO ][http-nio-8888-exec-1]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:44:22.839][INFO ][http-nio-8888-exec-1]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[21ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:44:50.753][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 09:44:50.753][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 09:44:50.753][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 09:44:50.754][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 09:44:50.754][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 09:44:50.754][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: false
[2017-12-21 09:44:50.754][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 09:44:50.757][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 09:46:56.295][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:46:56.295][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:46:56.297][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:46:56.299][INFO ][http-nio-8888-exec-7]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:46:56.299][INFO ][http-nio-8888-exec-7]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:46:56.300][INFO ][http-nio-8888-exec-7]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[14ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:46:56.876][DEBUG][http-nio-8888-exec-9]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:46:56.876][DEBUG][http-nio-8888-exec-9]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:46:56.878][DEBUG][http-nio-8888-exec-9]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:46:56.878][INFO ][http-nio-8888-exec-9]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:46:56.878][INFO ][http-nio-8888-exec-9]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:46:56.879][INFO ][http-nio-8888-exec-9]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[4ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:46:57.300][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:46:57.301][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:46:57.303][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:46:57.304][INFO ][http-nio-8888-exec-1]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:46:57.304][INFO ][http-nio-8888-exec-1]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:46:57.305][INFO ][http-nio-8888-exec-1]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[5ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:46:57.539][DEBUG][http-nio-8888-exec-3]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:46:57.539][DEBUG][http-nio-8888-exec-3]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:46:57.540][DEBUG][http-nio-8888-exec-3]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:46:57.541][INFO ][http-nio-8888-exec-3]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:46:57.541][INFO ][http-nio-8888-exec-3]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:46:57.542][INFO ][http-nio-8888-exec-3]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[4ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:46:57.755][DEBUG][http-nio-8888-exec-5]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:46:57.756][DEBUG][http-nio-8888-exec-5]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:46:57.757][DEBUG][http-nio-8888-exec-5]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:46:57.757][INFO ][http-nio-8888-exec-5]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:46:57.757][INFO ][http-nio-8888-exec-5]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:46:57.758][INFO ][http-nio-8888-exec-5]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[3ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:46:57.979][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:46:57.979][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:46:57.981][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:46:57.982][INFO ][http-nio-8888-exec-7]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:46:57.982][INFO ][http-nio-8888-exec-7]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:46:57.983][INFO ][http-nio-8888-exec-7]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[4ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:46:58.188][DEBUG][http-nio-8888-exec-9]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:46:58.189][DEBUG][http-nio-8888-exec-9]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:46:58.190][DEBUG][http-nio-8888-exec-9]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:46:58.191][INFO ][http-nio-8888-exec-9]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:46:58.192][INFO ][http-nio-8888-exec-9]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:46:58.192][INFO ][http-nio-8888-exec-9]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[5ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:46:58.396][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:46:58.397][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:46:58.399][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:46:58.400][INFO ][http-nio-8888-exec-1]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:46:58.400][INFO ][http-nio-8888-exec-1]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:46:58.403][INFO ][http-nio-8888-exec-1]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[8ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:46:58.595][DEBUG][http-nio-8888-exec-3]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:46:58.596][DEBUG][http-nio-8888-exec-3]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:46:58.597][DEBUG][http-nio-8888-exec-3]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:46:58.598][INFO ][http-nio-8888-exec-3]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:46:58.598][INFO ][http-nio-8888-exec-3]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:46:58.599][INFO ][http-nio-8888-exec-3]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[4ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:46:58.811][DEBUG][http-nio-8888-exec-5]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:46:58.811][DEBUG][http-nio-8888-exec-5]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:46:58.812][DEBUG][http-nio-8888-exec-5]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:46:58.813][INFO ][http-nio-8888-exec-5]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:46:58.814][INFO ][http-nio-8888-exec-5]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:46:58.815][INFO ][http-nio-8888-exec-5]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[5ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:46:59.011][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:46:59.011][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:46:59.012][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:46:59.012][INFO ][http-nio-8888-exec-7]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:46:59.012][INFO ][http-nio-8888-exec-7]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:46:59.013][INFO ][http-nio-8888-exec-7]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[3ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:46:59.227][DEBUG][http-nio-8888-exec-9]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:46:59.228][DEBUG][http-nio-8888-exec-9]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:46:59.229][DEBUG][http-nio-8888-exec-9]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:46:59.229][INFO ][http-nio-8888-exec-9]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:46:59.229][INFO ][http-nio-8888-exec-9]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:46:59.230][INFO ][http-nio-8888-exec-9]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[3ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:47:00.301][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:47:00.302][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:47:00.303][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:47:00.303][INFO ][http-nio-8888-exec-1]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:47:00.303][INFO ][http-nio-8888-exec-1]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:47:00.304][INFO ][http-nio-8888-exec-1]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[3ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:47:01.942][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:shutdown[125] - Application shutdown requested.
[2017-12-21 09:47:01.942][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6422f25b: startup date [Thu Dec 21 09:44:17 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@520c03f8
[2017-12-21 09:47:01.943][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-21 09:47:01.943][WARN ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513820821943, current=DOWN, previous=UP]
[2017-12-21 09:47:01.944][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-21 09:47:01.945][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-21 09:47:01.945][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 09:47:01.946][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 09:47:01.946][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 09:47:01.947][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 09:47:01.947][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-21 09:47:01.947][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-21 09:47:01.951][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-21 09:47:01.953][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - deregister  status: 200
[2017-12-21 09:47:01.955][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-21 09:47:01.956][INFO ][RMI TCP Connection(2)-127.0.0.1]com.alibaba.druid.pool.DruidDataSource:close[1817] - {dataSource-2} closed
[2017-12-21 09:47:01.957][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-21 09:47:11.973][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3610fa8: startup date [Thu Dec 21 09:47:11 CST 2017]; root of context hierarchy
[2017-12-21 09:47:12.188][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 09:47:12.230][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1b33a83a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:47:12.433][INFO ][restartedMain]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-21 09:47:12.454][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@22af62e9: startup date [Thu Dec 21 09:47:12 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3610fa8
[2017-12-21 09:47:13.420][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-21 09:47:13.550][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-21 09:47:13.577][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-21 09:47:13.844][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-21 09:47:14.118][INFO ][restartedMain]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=bf9f1261-c034-3e7b-a89e-0a96f03f8313
[2017-12-21 09:47:14.131][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 09:47:14.176][INFO ][restartedMain]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-21 09:47:14.176][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:47:14.176][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:47:14.234][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:47:14.290][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ff19a53d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:47:14.400][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$31464b7e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:47:14.414][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1b33a83a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:47:14.872][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-21 09:47:14.988][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 2534 ms
[2017-12-21 09:47:15.334][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-21 09:47:15.338][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-21 09:47:15.339][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-21 09:47:15.339][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-21 09:47:15.339][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-21 09:47:15.339][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-21 09:47:15.340][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-21 09:47:15.340][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-21 09:47:15.927][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 09:47:15.927][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 09:47:15.931][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 09:47:15.931][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 09:47:16.343][INFO ][restartedMain]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@22af62e9: startup date [Thu Dec 21 09:47:12 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3610fa8
[2017-12-21 09:47:16.453][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-21 09:47:16.458][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-21 09:47:16.458][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-21 09:47:16.521][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:47:16.521][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:47:16.582][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:47:17.620][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:47:17.621][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-21 09:47:17.621][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:47:17.622][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/cradyyyy || /cradyyyy.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:47:17.623][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:47:17.623][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:47:17.624][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-21 09:47:17.626][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-21 09:47:17.626][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:47:17.627][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:47:17.627][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:47:17.628][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-21 09:47:17.630][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-21 09:47:17.630][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:47:17.631][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 09:47:17.631][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-21 09:47:17.631][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-21 09:47:17.632][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-21 09:47:17.633][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-21 09:47:17.634][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 09:47:17.634][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:47:17.635][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:47:17.635][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-21 09:47:17.636][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:47:17.923][INFO ][restartedMain]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer:startServer[58] - LiveReload server is running on port 35729
[2017-12-21 09:47:18.119][WARN ][restartedMain]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-21 09:47:18.423][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 09:47:18.424][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-21 09:47:18.433][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-21 09:47:18.436][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-21 09:47:18.437][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-21 09:47:18.437][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-21 09:47:18.439][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-21 09:47:18.441][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-21 09:47:18.454][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-21 09:47:18.463][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-21 09:47:18.476][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=22af62e9,type=ConfigurationPropertiesRebinder]
[2017-12-21 09:47:18.482][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-21 09:47:18.484][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-21 09:47:18.488][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 09:47:18.784][INFO ][restartedMain]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-21 09:47:18.790][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-21 09:47:18.825][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-21 09:47:19.030][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-21 09:47:19.030][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-21 09:47:19.111][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-21 09:47:19.111][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-21 09:47:19.321][INFO ][restartedMain]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 09:47:19.358][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 09:47:19.358][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 09:47:19.359][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 09:47:19.359][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 09:47:19.359][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 09:47:19.359][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-21 09:47:19.359][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 09:47:19.499][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 09:47:19.502][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-21 09:47:19.504][INFO ][restartedMain]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-21 09:47:19.506][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513820839506 with initial instances count: 1
[2017-12-21 09:47:19.522][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-21 09:47:19.522][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513820839522, current=UP, previous=STARTING]
[2017-12-21 09:47:19.524][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-21 09:47:19.530][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-21 09:47:19.539][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[2017-12-21 09:47:19.549][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-21 09:47:19.552][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-21 09:47:19.554][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-21 09:47:19.558][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-21 09:47:19.558][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-21 09:47:19.560][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-21 09:47:19.562][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-21 09:47:19.568][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-21 09:47:19.574][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-21 09:47:19.575][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-21 09:47:19.577][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-21 09:47:19.580][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-21 09:47:19.582][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-21 09:47:19.640][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-21 09:47:19.641][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-21 09:47:19.647][INFO ][restartedMain]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 8.002 seconds (JVM running for 8.694)
[2017-12-21 09:47:45.745][INFO ][http-nio-8888-exec-2]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-21 09:47:45.776][INFO ][http-nio-8888-exec-2]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
[2017-12-21 09:47:46.027][INFO ][http-nio-8888-exec-2]com.alibaba.druid.pool.DruidDataSource:init[922] - {dataSource-1} inited
[2017-12-21 09:47:46.033][DEBUG][http-nio-8888-exec-2]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 09:47:46.053][DEBUG][http-nio-8888-exec-2]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 09:47:46.075][DEBUG][http-nio-8888-exec-2]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 09:47:46.077][INFO ][http-nio-8888-exec-2]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 09:47:46.078][INFO ][http-nio-8888-exec-2]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 09:47:46.100][INFO ][http-nio-8888-exec-2]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[300ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 09:48:01.852][INFO ][http-nio-8888-exec-9]org.springframework.boot.actuate.endpoint.mvc.MvcEndpointSecurityInterceptor:logUnauthorizedAttempt[122] - Full authentication is required to access actuator endpoints. Consider adding Spring Security or set 'management.security.enabled' to false.
[2017-12-21 09:52:19.362][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 09:52:34.639][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:shutdown[125] - Application shutdown requested.
[2017-12-21 09:52:34.639][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@22af62e9: startup date [Thu Dec 21 09:47:12 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3610fa8
[2017-12-21 09:52:34.640][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-21 09:52:34.641][WARN ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513821154641, current=DOWN, previous=UP]
[2017-12-21 09:52:34.642][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-21 09:52:34.643][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-21 09:52:34.645][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 09:52:34.646][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 09:52:34.647][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 09:52:34.647][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 09:52:34.648][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-21 09:52:34.648][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-21 09:52:34.649][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-21 09:52:34.654][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - deregister  status: 200
[2017-12-21 09:52:34.657][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-21 09:52:34.662][INFO ][RMI TCP Connection(2)-127.0.0.1]com.alibaba.druid.pool.DruidDataSource:close[1817] - {dataSource-1} closed
[2017-12-21 09:52:34.663][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-21 09:52:42.780][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@13aa6ad: startup date [Thu Dec 21 09:52:42 CST 2017]; root of context hierarchy
[2017-12-21 09:52:43.006][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 09:52:43.054][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fb1bdfdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:52:43.286][INFO ][restartedMain]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-21 09:52:43.305][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6ad7fe91: startup date [Thu Dec 21 09:52:43 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@13aa6ad
[2017-12-21 09:52:44.324][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-21 09:52:44.460][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-21 09:52:44.487][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-21 09:52:44.806][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-21 09:52:45.083][INFO ][restartedMain]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=bf9f1261-c034-3e7b-a89e-0a96f03f8313
[2017-12-21 09:52:45.097][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 09:52:45.143][INFO ][restartedMain]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-21 09:52:45.144][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:52:45.144][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:52:45.208][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:52:45.263][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$df01dce2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:52:45.375][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$112e8323] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:52:45.388][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fb1bdfdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:52:45.879][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-21 09:52:46.008][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 2702 ms
[2017-12-21 09:52:46.396][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-21 09:52:46.402][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-21 09:52:46.403][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-21 09:52:46.403][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-21 09:52:46.403][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-21 09:52:46.403][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-21 09:52:46.404][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-21 09:52:46.404][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-21 09:52:47.064][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 09:52:47.065][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 09:52:47.068][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 09:52:47.069][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 09:52:47.539][INFO ][restartedMain]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6ad7fe91: startup date [Thu Dec 21 09:52:43 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@13aa6ad
[2017-12-21 09:52:47.651][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-21 09:52:47.656][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-21 09:52:47.656][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-21 09:52:47.725][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:52:47.726][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:52:47.810][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:52:49.004][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-21 09:52:49.004][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-21 09:52:49.005][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:52:49.006][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-21 09:52:49.006][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:52:49.007][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:52:49.008][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/cradyyyy || /cradyyyy.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:52:49.008][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:52:49.009][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-21 09:52:49.009][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-21 09:52:49.011][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-21 09:52:49.013][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:52:49.014][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:52:49.016][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-21 09:52:49.017][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:52:49.018][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:52:49.020][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-21 09:52:49.020][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 09:52:49.021][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:52:49.022][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 09:52:49.022][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-21 09:52:49.024][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-21 09:52:49.024][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:52:49.025][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:52:49.367][INFO ][restartedMain]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer:startServer[58] - LiveReload server is running on port 35729
[2017-12-21 09:52:49.594][WARN ][restartedMain]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-21 09:52:49.836][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 09:52:49.837][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-21 09:52:49.847][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-21 09:52:49.850][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-21 09:52:49.850][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-21 09:52:49.851][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-21 09:52:49.852][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-21 09:52:49.854][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-21 09:52:49.869][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-21 09:52:49.876][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-21 09:52:49.892][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6ad7fe91,type=ConfigurationPropertiesRebinder]
[2017-12-21 09:52:49.901][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-21 09:52:49.904][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-21 09:52:49.911][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 09:52:50.210][INFO ][restartedMain]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-21 09:52:50.217][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-21 09:52:50.247][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-21 09:52:50.415][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-21 09:52:50.416][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-21 09:52:50.496][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-21 09:52:50.496][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-21 09:52:50.730][INFO ][restartedMain]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 09:52:50.770][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 09:52:50.770][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 09:52:50.771][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 09:52:50.771][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 09:52:50.771][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 09:52:50.771][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-21 09:52:50.771][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 09:52:50.918][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 09:52:50.919][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-21 09:52:50.923][INFO ][restartedMain]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-21 09:52:50.925][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513821170925 with initial instances count: 1
[2017-12-21 09:52:50.938][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-21 09:52:50.938][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513821170938, current=UP, previous=STARTING]
[2017-12-21 09:52:50.940][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-21 09:52:50.947][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-21 09:52:50.958][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[2017-12-21 09:52:50.970][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-21 09:52:50.973][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-21 09:52:50.976][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-21 09:52:50.979][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-21 09:52:50.981][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-21 09:52:50.983][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-21 09:52:50.986][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-21 09:52:50.988][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-21 09:52:50.994][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-21 09:52:50.997][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-21 09:52:50.999][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-21 09:52:51.001][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-21 09:52:51.003][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-21 09:52:51.082][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-21 09:52:51.083][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-21 09:52:51.089][INFO ][restartedMain]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 8.654 seconds (JVM running for 9.453)
[2017-12-21 09:52:53.293][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-21 09:52:53.321][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
[2017-12-21 09:52:58.347][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:shutdown[125] - Application shutdown requested.
[2017-12-21 09:52:58.347][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6ad7fe91: startup date [Thu Dec 21 09:52:43 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@13aa6ad
[2017-12-21 09:52:58.348][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-21 09:52:58.348][WARN ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513821178348, current=DOWN, previous=UP]
[2017-12-21 09:52:58.349][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-21 09:52:58.350][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-21 09:52:58.353][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 09:52:58.353][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 09:52:58.354][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 09:52:58.354][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 09:52:58.355][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-21 09:52:58.355][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-21 09:52:58.356][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-21 09:52:58.361][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - deregister  status: 200
[2017-12-21 09:52:58.365][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-21 09:52:58.368][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-21 09:53:36.295][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@11486116: startup date [Thu Dec 21 09:53:36 CST 2017]; root of context hierarchy
[2017-12-21 09:53:36.517][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 09:53:36.560][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2803ba3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:53:36.786][INFO ][restartedMain]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-21 09:53:36.805][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7f0d4438: startup date [Thu Dec 21 09:53:36 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@11486116
[2017-12-21 09:53:37.882][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-21 09:53:38.020][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-21 09:53:38.048][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-21 09:53:38.333][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-21 09:53:38.617][INFO ][restartedMain]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=bf9f1261-c034-3e7b-a89e-0a96f03f8313
[2017-12-21 09:53:38.630][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 09:53:38.675][INFO ][restartedMain]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-21 09:53:38.676][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:53:38.676][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:53:38.734][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:53:38.790][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$be9b73e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:53:38.897][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$3e165d7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:53:38.911][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2803ba3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:53:39.387][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-21 09:53:39.504][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 2699 ms
[2017-12-21 09:53:39.872][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-21 09:53:39.877][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-21 09:53:39.878][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-21 09:53:39.878][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-21 09:53:39.878][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-21 09:53:39.879][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-21 09:53:39.879][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-21 09:53:39.879][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-21 09:53:40.474][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 09:53:40.474][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 09:53:40.478][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 09:53:40.478][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 09:53:40.909][INFO ][restartedMain]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7f0d4438: startup date [Thu Dec 21 09:53:36 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@11486116
[2017-12-21 09:53:41.009][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-21 09:53:41.015][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-21 09:53:41.015][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-21 09:53:41.081][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:53:41.081][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:53:41.141][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:53:42.183][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:53:42.184][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-21 09:53:42.185][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/cradyyyy || /cradyyyy.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:53:42.185][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:53:42.186][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:53:42.187][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:53:42.188][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:53:42.190][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-21 09:53:42.190][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 09:53:42.191][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:53:42.191][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-21 09:53:42.192][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:53:42.193][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:53:42.193][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:53:42.196][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-21 09:53:42.197][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 09:53:42.197][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-21 09:53:42.198][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-21 09:53:42.200][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-21 09:53:42.200][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:53:42.201][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-21 09:53:42.201][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:53:42.202][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-21 09:53:42.202][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-21 09:53:42.485][INFO ][restartedMain]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer:startServer[58] - LiveReload server is running on port 35729
[2017-12-21 09:53:42.686][WARN ][restartedMain]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-21 09:53:42.900][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 09:53:42.901][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-21 09:53:42.911][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-21 09:53:42.915][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-21 09:53:42.916][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-21 09:53:42.917][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-21 09:53:42.918][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-21 09:53:42.920][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-21 09:53:42.932][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-21 09:53:42.940][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-21 09:53:42.955][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7f0d4438,type=ConfigurationPropertiesRebinder]
[2017-12-21 09:53:42.962][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-21 09:53:42.965][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-21 09:53:42.969][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 09:53:43.262][INFO ][restartedMain]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-21 09:53:43.270][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-21 09:53:43.298][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-21 09:53:43.461][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-21 09:53:43.461][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-21 09:53:43.537][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-21 09:53:43.538][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-21 09:53:43.750][INFO ][restartedMain]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 09:53:43.791][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 09:53:43.791][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 09:53:43.791][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 09:53:43.791][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 09:53:43.792][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 09:53:43.792][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-21 09:53:43.792][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 09:53:43.924][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 09:53:43.925][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-21 09:53:43.927][INFO ][restartedMain]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-21 09:53:43.930][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513821223929 with initial instances count: 0
[2017-12-21 09:53:43.943][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-21 09:53:43.944][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513821223944, current=UP, previous=STARTING]
[2017-12-21 09:53:43.946][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-21 09:53:43.951][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-21 09:53:43.960][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[2017-12-21 09:53:43.974][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-21 09:53:43.977][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-21 09:53:43.980][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-21 09:53:43.984][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-21 09:53:43.987][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-21 09:53:43.991][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-21 09:53:43.993][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-21 09:53:44.000][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-21 09:53:44.003][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-21 09:53:44.005][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-21 09:53:44.008][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-21 09:53:44.011][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-21 09:53:44.059][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-21 09:53:44.079][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-21 09:53:44.080][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-21 09:53:44.085][INFO ][restartedMain]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 8.136 seconds (JVM running for 8.952)
[2017-12-21 09:53:50.743][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-21 09:53:50.774][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
[2017-12-21 09:54:13.925][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 09:54:13.925][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 09:54:13.926][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 09:54:13.926][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 09:54:13.926][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 09:54:13.926][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: false
[2017-12-21 09:54:13.927][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 09:54:13.954][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 09:56:00.682][INFO ][Thread-9]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@11486116: startup date [Thu Dec 21 09:53:36 CST 2017]; root of context hierarchy
[2017-12-21 09:56:00.683][INFO ][Thread-9]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7f0d4438: startup date [Thu Dec 21 09:53:36 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@11486116
[2017-12-21 09:56:00.684][INFO ][Thread-9]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-21 09:56:00.685][WARN ][Thread-9]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513821360684, current=DOWN, previous=UP]
[2017-12-21 09:56:00.685][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-21 09:56:00.688][INFO ][Thread-9]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-21 09:56:00.692][INFO ][Thread-9]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 09:56:00.694][INFO ][Thread-9]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 09:56:00.695][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-21 09:56:00.696][INFO ][Thread-9]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 09:56:00.697][INFO ][Thread-9]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 09:56:00.698][INFO ][Thread-9]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-21 09:56:00.700][INFO ][Thread-9]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-21 09:56:00.712][INFO ][Thread-9]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - deregister  status: 200
[2017-12-21 09:56:00.715][INFO ][Thread-9]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-21 09:56:00.718][INFO ][Thread-9]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-21 09:56:01.105][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@33428938: startup date [Thu Dec 21 09:56:01 CST 2017]; root of context hierarchy
[2017-12-21 09:56:01.124][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 09:56:01.127][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2803ba3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:56:01.242][INFO ][restartedMain]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-21 09:56:01.246][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6bc88b70: startup date [Thu Dec 21 09:56:01 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@33428938
[2017-12-21 09:56:02.121][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-21 09:56:02.138][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-21 09:56:02.161][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-21 09:56:02.293][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-21 09:56:02.382][INFO ][restartedMain]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=bf9f1261-c034-3e7b-a89e-0a96f03f8313
[2017-12-21 09:56:02.392][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 09:56:02.396][INFO ][restartedMain]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-21 09:56:02.396][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:56:02.396][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:56:02.404][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:56:02.416][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$be9b73e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:56:02.427][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$3e165d7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:56:02.431][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2803ba3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 09:56:02.569][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-21 09:56:02.592][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1347 ms
[2017-12-21 09:56:02.723][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-21 09:56:02.724][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-21 09:56:02.724][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-21 09:56:02.724][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-21 09:56:02.725][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-21 09:56:02.725][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-21 09:56:02.725][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-21 09:56:02.725][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-21 09:56:02.994][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 09:56:02.994][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 09:56:03.171][INFO ][restartedMain]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6bc88b70: startup date [Thu Dec 21 09:56:01 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@33428938
[2017-12-21 09:56:03.205][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-21 09:56:03.208][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-21 09:56:03.208][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-21 09:56:03.244][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:56:03.244][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:56:03.280][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 09:56:03.819][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:56:03.820][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:56:03.820][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-21 09:56:03.821][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-21 09:56:03.822][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 09:56:03.822][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:56:03.823][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-21 09:56:03.824][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:56:03.824][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-21 09:56:03.824][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:56:03.825][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:56:03.826][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-21 09:56:03.828][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-21 09:56:03.829][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-21 09:56:03.830][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:56:03.830][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:56:03.831][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-21 09:56:03.831][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-21 09:56:03.831][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:56:03.832][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 09:56:03.832][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-21 09:56:03.832][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/cradyyyy || /cradyyyy.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:56:03.832][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:56:03.833][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 09:56:03.955][INFO ][restartedMain]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer:startServer[58] - LiveReload server is running on port 35729
[2017-12-21 09:56:04.032][WARN ][restartedMain]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-21 09:56:04.275][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 09:56:04.276][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-21 09:56:04.279][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-21 09:56:04.282][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-21 09:56:04.282][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-21 09:56:04.283][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-21 09:56:04.284][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-21 09:56:04.285][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-21 09:56:04.290][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-21 09:56:04.292][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-21 09:56:04.295][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6bc88b70,type=ConfigurationPropertiesRebinder]
[2017-12-21 09:56:04.297][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-21 09:56:04.299][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-21 09:56:04.300][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 09:56:04.607][INFO ][restartedMain]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-21 09:56:04.610][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-21 09:56:04.614][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-21 09:56:04.617][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-21 09:56:04.617][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-21 09:56:04.617][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-21 09:56:04.617][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-21 09:56:04.729][INFO ][restartedMain]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 09:56:04.736][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 09:56:04.736][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 09:56:04.736][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 09:56:04.736][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 09:56:04.737][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 09:56:04.737][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-21 09:56:04.737][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 09:56:04.741][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 09:56:04.742][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-21 09:56:04.742][INFO ][restartedMain]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-21 09:56:04.743][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513821364743 with initial instances count: 1
[2017-12-21 09:56:04.751][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-21 09:56:04.752][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513821364752, current=UP, previous=STARTING]
[2017-12-21 09:56:04.753][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-21 09:56:04.756][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-21 09:56:04.760][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[2017-12-21 09:56:04.762][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-21 09:56:04.762][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-21 09:56:04.764][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-21 09:56:04.767][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-21 09:56:04.770][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-21 09:56:04.772][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-21 09:56:04.774][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-21 09:56:04.776][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-21 09:56:04.779][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-21 09:56:04.782][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-21 09:56:04.784][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-21 09:56:04.787][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-21 09:56:04.789][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-21 09:56:04.808][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-21 09:56:04.808][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-21 09:56:04.813][INFO ][restartedMain]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 3.819 seconds (JVM running for 149.68)
[2017-12-21 09:56:09.205][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-21 09:56:09.213][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 8 ms
[2017-12-21 09:56:09.394][INFO ][http-nio-8888-exec-1]com.alibaba.druid.pool.DruidDataSource:init[922] - {dataSource-1} inited
[2017-12-21 10:01:04.740][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 10:06:04.744][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 10:11:04.745][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 10:16:04.747][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 10:21:04.749][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 10:23:52.327][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 10:23:52.343][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 10:23:52.354][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 10:23:52.355][INFO ][http-nio-8888-exec-7]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 10:23:52.355][INFO ][http-nio-8888-exec-7]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 10:23:52.363][INFO ][http-nio-8888-exec-7]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[72ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 10:23:52.705][DEBUG][http-nio-8888-exec-8]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 10:23:52.706][DEBUG][http-nio-8888-exec-8]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 10:23:52.710][DEBUG][http-nio-8888-exec-8]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 10:23:52.711][INFO ][http-nio-8888-exec-8]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 10:23:52.711][INFO ][http-nio-8888-exec-8]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 10:23:52.713][INFO ][http-nio-8888-exec-8]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[9ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 10:25:08.588][INFO ][http-nio-8888-exec-5]org.springframework.boot.actuate.endpoint.mvc.MvcEndpointSecurityInterceptor:logUnauthorizedAttempt[122] - Full authentication is required to access actuator endpoints. Consider adding Spring Security or set 'management.security.enabled' to false.
[2017-12-21 10:26:04.751][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 10:27:37.026][INFO ][Thread-13]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@33428938: startup date [Thu Dec 21 09:56:01 CST 2017]; root of context hierarchy
[2017-12-21 10:27:37.028][INFO ][Thread-13]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6bc88b70: startup date [Thu Dec 21 09:56:01 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@33428938
[2017-12-21 10:27:37.030][INFO ][Thread-13]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-21 10:27:37.031][WARN ][Thread-13]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513823257031, current=DOWN, previous=UP]
[2017-12-21 10:27:37.033][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888: registering service...
[2017-12-21 10:27:37.038][INFO ][Thread-13]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-21 10:27:37.039][INFO ][Thread-13]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 10:27:37.040][INFO ][Thread-13]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 10:27:37.041][INFO ][Thread-13]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 10:27:37.041][INFO ][Thread-13]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 10:27:37.042][INFO ][Thread-13]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-21 10:27:37.043][INFO ][Thread-13]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-21 10:27:37.049][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - registration status: 204
[2017-12-21 10:27:37.052][INFO ][Thread-13]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/windows10.microdone.cn:cloudMybatis:8888 - deregister  status: 200
[2017-12-21 10:27:37.056][INFO ][Thread-13]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-21 10:27:37.061][INFO ][Thread-13]com.alibaba.druid.pool.DruidDataSource:close[1817] - {dataSource-1} closed
[2017-12-21 10:27:37.062][INFO ][Thread-13]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-21 10:27:38.464][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:27:38.495][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@111bc786: startup date [Thu Dec 21 10:27:38 CST 2017]; root of context hierarchy
[2017-12-21 10:27:38.513][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 10:27:38.515][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2803ba3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:27:39.591][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:27:39.677][INFO ][restartedMain]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-21 10:27:39.682][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@55fbe1e0: startup date [Thu Dec 21 10:27:39 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@111bc786
[2017-12-21 10:27:40.465][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-21 10:27:40.479][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-21 10:27:40.493][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-21 10:27:40.604][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-21 10:27:40.683][INFO ][restartedMain]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=bf9f1261-c034-3e7b-a89e-0a96f03f8313
[2017-12-21 10:27:40.691][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 10:27:40.695][INFO ][restartedMain]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-21 10:27:40.695][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:27:40.696][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:27:40.701][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:27:40.712][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$be9b73e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:27:40.723][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$3e165d7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:27:40.726][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2803ba3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:27:40.849][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-21 10:27:40.869][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1187 ms
[2017-12-21 10:27:40.984][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-21 10:27:40.985][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-21 10:27:40.985][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-21 10:27:40.985][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-21 10:27:40.985][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-21 10:27:40.986][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-21 10:27:40.986][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-21 10:27:40.986][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-21 10:27:41.234][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 10:27:41.234][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 10:27:41.385][INFO ][restartedMain]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@55fbe1e0: startup date [Thu Dec 21 10:27:39 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@111bc786
[2017-12-21 10:27:41.415][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-21 10:27:41.417][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-21 10:27:41.417][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-21 10:27:41.449][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:27:41.449][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:27:41.481][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:27:42.580][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:27:43.744][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:27:44.010][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 10:27:44.010][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-21 10:27:44.011][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:27:44.011][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/cradyyyy || /cradyyyy.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:27:44.011][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:27:44.012][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-21 10:27:44.012][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:27:44.013][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-21 10:27:44.014][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-21 10:27:44.014][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-21 10:27:44.016][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-21 10:27:44.016][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-21 10:27:44.017][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:27:44.017][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:27:44.018][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-21 10:27:44.018][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:27:44.019][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:27:44.019][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:27:44.020][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-21 10:27:44.020][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 10:27:44.020][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:27:44.021][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-21 10:27:44.021][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:27:44.021][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:27:44.139][INFO ][restartedMain]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer:startServer[58] - LiveReload server is running on port 35729
[2017-12-21 10:27:44.206][WARN ][restartedMain]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-21 10:27:44.429][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 10:27:44.430][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-21 10:27:44.432][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-21 10:27:44.435][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-21 10:27:44.435][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-21 10:27:44.436][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-21 10:27:44.436][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-21 10:27:44.438][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-21 10:27:44.440][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-21 10:27:44.443][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-21 10:27:44.445][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=55fbe1e0,type=ConfigurationPropertiesRebinder]
[2017-12-21 10:27:44.448][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-21 10:27:44.449][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-21 10:27:44.450][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 10:27:44.729][INFO ][restartedMain]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-21 10:27:44.730][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-21 10:27:44.734][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-21 10:27:44.737][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-21 10:27:44.737][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-21 10:27:44.737][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-21 10:27:44.738][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-21 10:27:44.885][INFO ][restartedMain]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 10:27:44.887][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 10:27:44.887][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 10:27:44.887][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 10:27:44.888][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 10:27:44.888][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 10:27:44.888][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-21 10:27:44.888][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 10:27:44.892][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 10:27:44.893][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-21 10:27:44.893][INFO ][restartedMain]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-21 10:27:44.894][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513823264894 with initial instances count: 1
[2017-12-21 10:27:44.903][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-21 10:27:44.903][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513823264903, current=UP, previous=STARTING]
[2017-12-21 10:27:44.903][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888: registering service...
[2017-12-21 10:27:44.906][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-21 10:27:44.910][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[2017-12-21 10:27:44.910][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - registration status: 204
[2017-12-21 10:27:44.911][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-21 10:27:44.913][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-21 10:27:44.915][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-21 10:27:44.916][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-21 10:27:44.917][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-21 10:27:44.919][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-21 10:27:44.921][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-21 10:27:44.924][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-21 10:27:44.925][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-21 10:27:44.927][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-21 10:27:44.928][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-21 10:27:44.929][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-21 10:27:44.947][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-21 10:27:44.948][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-21 10:27:44.950][INFO ][restartedMain]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 7.562 seconds (JVM running for 2049.817)
[2017-12-21 10:27:49.636][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-21 10:27:49.643][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 7 ms
[2017-12-21 10:30:28.472][INFO ][Thread-22]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@111bc786: startup date [Thu Dec 21 10:27:38 CST 2017]; root of context hierarchy
[2017-12-21 10:30:28.473][INFO ][Thread-22]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@55fbe1e0: startup date [Thu Dec 21 10:27:39 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@111bc786
[2017-12-21 10:30:28.473][INFO ][Thread-22]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-21 10:30:28.474][WARN ][Thread-22]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513823428474, current=DOWN, previous=UP]
[2017-12-21 10:30:28.474][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888: registering service...
[2017-12-21 10:30:28.475][INFO ][Thread-22]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-21 10:30:28.476][INFO ][Thread-22]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 10:30:28.477][INFO ][Thread-22]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 10:30:28.477][INFO ][Thread-22]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 10:30:28.477][INFO ][Thread-22]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 10:30:28.478][INFO ][Thread-22]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-21 10:30:28.478][INFO ][Thread-22]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-21 10:30:28.481][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - registration status: 204
[2017-12-21 10:30:28.483][INFO ][Thread-22]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - deregister  status: 200
[2017-12-21 10:30:28.486][INFO ][Thread-22]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-21 10:30:28.486][INFO ][Thread-22]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-21 10:30:29.896][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:30:29.969][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6cd97a9e: startup date [Thu Dec 21 10:30:29 CST 2017]; root of context hierarchy
[2017-12-21 10:30:29.994][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 10:30:29.996][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2803ba3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:30:31.072][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:30:31.124][INFO ][restartedMain]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-21 10:30:31.137][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@26cdbdfb: startup date [Thu Dec 21 10:30:31 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6cd97a9e
[2017-12-21 10:30:32.084][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-21 10:30:32.098][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-21 10:30:32.112][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-21 10:30:32.231][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-21 10:30:32.310][INFO ][restartedMain]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=bf9f1261-c034-3e7b-a89e-0a96f03f8313
[2017-12-21 10:30:32.319][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 10:30:32.323][INFO ][restartedMain]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-21 10:30:32.323][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:30:32.323][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:30:32.329][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:30:32.339][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$be9b73e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:30:32.349][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$3e165d7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:30:32.353][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2803ba3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:30:32.492][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-21 10:30:32.517][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1380 ms
[2017-12-21 10:30:32.633][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-21 10:30:32.633][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-21 10:30:32.634][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-21 10:30:32.634][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-21 10:30:32.634][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-21 10:30:32.634][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-21 10:30:32.634][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-21 10:30:32.634][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-21 10:30:32.921][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 10:30:32.921][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 10:30:33.075][INFO ][restartedMain]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@26cdbdfb: startup date [Thu Dec 21 10:30:31 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6cd97a9e
[2017-12-21 10:30:33.106][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-21 10:30:33.107][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-21 10:30:33.107][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-21 10:30:33.136][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:30:33.136][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:30:33.169][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:30:34.269][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:30:35.426][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:30:35.656][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 10:30:35.659][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-21 10:30:35.666][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-21 10:30:35.666][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:30:35.668][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-21 10:30:35.670][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-21 10:30:35.670][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:30:35.670][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/cradyyyy || /cradyyyy.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:30:35.671][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:30:35.671][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-21 10:30:35.671][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-21 10:30:35.672][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:30:35.673][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:30:35.674][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-21 10:30:35.675][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:30:35.675][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:30:35.675][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-21 10:30:35.676][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-21 10:30:35.677][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:30:35.677][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:30:35.679][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-21 10:30:35.679][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 10:30:35.679][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:30:35.680][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:30:35.801][INFO ][restartedMain]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer:startServer[58] - LiveReload server is running on port 35729
[2017-12-21 10:30:35.867][WARN ][restartedMain]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-21 10:30:36.091][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 10:30:36.092][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-21 10:30:36.096][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-21 10:30:36.099][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-21 10:30:36.099][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-21 10:30:36.100][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-21 10:30:36.100][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-21 10:30:36.101][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-21 10:30:36.104][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-21 10:30:36.106][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-21 10:30:36.108][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=26cdbdfb,type=ConfigurationPropertiesRebinder]
[2017-12-21 10:30:36.111][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-21 10:30:36.113][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-21 10:30:36.114][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 10:30:36.401][INFO ][restartedMain]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-21 10:30:36.402][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-21 10:30:36.406][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-21 10:30:36.407][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-21 10:30:36.408][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-21 10:30:36.408][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-21 10:30:36.408][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-21 10:30:36.525][INFO ][restartedMain]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 10:30:36.527][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 10:30:36.527][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 10:30:36.527][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 10:30:36.527][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 10:30:36.527][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 10:30:36.527][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-21 10:30:36.528][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 10:30:36.531][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 10:30:36.531][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-21 10:30:36.532][INFO ][restartedMain]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-21 10:30:36.535][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513823436535 with initial instances count: 0
[2017-12-21 10:30:36.543][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-21 10:30:36.543][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513823436543, current=UP, previous=STARTING]
[2017-12-21 10:30:36.544][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888: registering service...
[2017-12-21 10:30:36.546][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-21 10:30:36.550][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[2017-12-21 10:30:36.551][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - registration status: 204
[2017-12-21 10:30:36.552][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-21 10:30:36.554][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-21 10:30:36.556][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-21 10:30:36.558][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-21 10:30:36.560][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-21 10:30:36.563][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-21 10:30:36.564][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-21 10:30:36.567][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-21 10:30:36.569][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-21 10:30:36.570][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-21 10:30:36.572][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-21 10:30:36.573][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-21 10:30:36.592][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-21 10:30:36.593][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-21 10:30:36.596][INFO ][restartedMain]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 7.771 seconds (JVM running for 2221.464)
[2017-12-21 10:30:43.270][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-21 10:30:43.277][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 7 ms
[2017-12-21 10:31:06.532][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 10:31:06.532][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 10:31:06.532][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 10:31:06.532][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 10:31:06.533][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 10:31:06.533][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: false
[2017-12-21 10:31:06.533][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 10:31:06.537][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 10:31:08.859][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:shutdown[125] - Application shutdown requested.
[2017-12-21 10:31:08.859][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@26cdbdfb: startup date [Thu Dec 21 10:30:31 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6cd97a9e
[2017-12-21 10:31:08.860][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-21 10:31:08.860][WARN ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513823468860, current=DOWN, previous=UP]
[2017-12-21 10:31:08.860][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888: registering service...
[2017-12-21 10:31:08.861][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-21 10:31:08.862][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 10:31:08.862][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 10:31:08.862][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 10:31:08.863][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 10:31:08.863][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-21 10:31:08.863][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-21 10:31:08.865][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - registration status: 204
[2017-12-21 10:31:08.867][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - deregister  status: 200
[2017-12-21 10:31:08.868][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-21 10:31:08.869][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-21 10:31:18.324][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:31:18.537][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@52224ca7: startup date [Thu Dec 21 10:31:18 CST 2017]; root of context hierarchy
[2017-12-21 10:31:18.787][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 10:31:18.833][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8f96ef3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:31:20.014][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:31:20.067][INFO ][restartedMain]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-21 10:31:20.089][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@130fabf5: startup date [Thu Dec 21 10:31:20 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@52224ca7
[2017-12-21 10:31:21.107][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-21 10:31:21.242][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-21 10:31:21.268][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-21 10:31:21.550][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-21 10:31:21.829][INFO ][restartedMain]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=bf9f1261-c034-3e7b-a89e-0a96f03f8313
[2017-12-21 10:31:21.843][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 10:31:21.895][INFO ][restartedMain]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-21 10:31:21.896][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:31:21.896][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:31:21.961][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:31:22.018][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$737cec42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:31:22.132][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$a5a99283] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:31:22.148][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8f96ef3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:31:22.614][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-21 10:31:22.761][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 2672 ms
[2017-12-21 10:31:23.126][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-21 10:31:23.132][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-21 10:31:23.132][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-21 10:31:23.132][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-21 10:31:23.133][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-21 10:31:23.133][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-21 10:31:23.133][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-21 10:31:23.133][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-21 10:31:23.739][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 10:31:23.739][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 10:31:23.744][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 10:31:23.745][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 10:31:24.170][INFO ][restartedMain]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@130fabf5: startup date [Thu Dec 21 10:31:20 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@52224ca7
[2017-12-21 10:31:24.272][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-21 10:31:24.276][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-21 10:31:24.277][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-21 10:31:24.343][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:31:24.343][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:31:24.404][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:31:25.592][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:31:26.915][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:31:27.550][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-21 10:31:27.550][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 10:31:27.550][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:31:27.551][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:31:27.551][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:31:27.552][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:31:27.554][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-21 10:31:27.554][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:31:27.554][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-21 10:31:27.555][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-21 10:31:27.556][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:31:27.557][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-21 10:31:27.557][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-21 10:31:27.558][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/cradyyyy || /cradyyyy.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:31:27.559][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:31:27.560][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-21 10:31:27.560][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:31:27.561][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-21 10:31:27.561][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:31:27.562][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:31:27.562][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:31:27.564][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-21 10:31:27.564][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 10:31:27.565][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-21 10:31:27.862][INFO ][restartedMain]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer:startServer[58] - LiveReload server is running on port 35729
[2017-12-21 10:31:28.082][WARN ][restartedMain]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-21 10:31:28.298][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 10:31:28.299][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-21 10:31:28.307][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-21 10:31:28.310][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-21 10:31:28.311][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-21 10:31:28.311][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-21 10:31:28.312][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-21 10:31:28.315][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-21 10:31:28.326][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-21 10:31:28.334][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-21 10:31:28.348][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=130fabf5,type=ConfigurationPropertiesRebinder]
[2017-12-21 10:31:28.355][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-21 10:31:28.358][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-21 10:31:28.363][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 10:31:28.647][INFO ][restartedMain]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-21 10:31:28.653][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-21 10:31:28.682][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-21 10:31:28.837][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-21 10:31:28.837][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-21 10:31:28.914][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-21 10:31:28.914][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-21 10:31:29.118][INFO ][restartedMain]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 10:31:29.159][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 10:31:29.159][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 10:31:29.160][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 10:31:29.160][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 10:31:29.160][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 10:31:29.160][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-21 10:31:29.161][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 10:31:29.358][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 10:31:29.359][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-21 10:31:29.361][INFO ][restartedMain]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-21 10:31:29.364][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513823489364 with initial instances count: 0
[2017-12-21 10:31:29.376][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-21 10:31:29.377][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513823489377, current=UP, previous=STARTING]
[2017-12-21 10:31:29.379][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888: registering service...
[2017-12-21 10:31:29.383][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-21 10:31:29.390][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[2017-12-21 10:31:29.401][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-21 10:31:29.403][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-21 10:31:29.406][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-21 10:31:29.409][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-21 10:31:29.412][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-21 10:31:29.415][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-21 10:31:29.418][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-21 10:31:29.427][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-21 10:31:29.429][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-21 10:31:29.431][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-21 10:31:29.434][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-21 10:31:29.436][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-21 10:31:29.493][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - registration status: 204
[2017-12-21 10:31:29.508][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-21 10:31:29.509][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-21 10:31:29.513][INFO ][restartedMain]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 12.368 seconds (JVM running for 13.091)
[2017-12-21 10:31:59.360][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 10:31:59.362][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 10:31:59.363][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 10:31:59.364][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 10:31:59.365][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 10:31:59.365][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: false
[2017-12-21 10:31:59.366][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 10:31:59.404][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 10:32:28.045][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-21 10:32:28.071][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
[2017-12-21 10:33:24.319][INFO ][http-nio-8888-exec-5]com.alibaba.druid.pool.DruidDataSource:init[922] - {dataSource-1} inited
[2017-12-21 10:33:24.323][DEBUG][http-nio-8888-exec-5]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 10:33:24.341][DEBUG][http-nio-8888-exec-5]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 10:33:24.359][DEBUG][http-nio-8888-exec-5]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 10:33:24.361][INFO ][http-nio-8888-exec-5]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 10:33:24.361][INFO ][http-nio-8888-exec-5]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 10:33:24.369][INFO ][http-nio-8888-exec-5]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[257ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 10:34:01.370][INFO ][http-nio-8888-exec-10]org.springframework.boot.actuate.endpoint.mvc.MvcEndpointSecurityInterceptor:logUnauthorizedAttempt[122] - Full authentication is required to access actuator endpoints. Consider adding Spring Security or set 'management.security.enabled' to false.
[2017-12-21 10:34:21.280][INFO ][Thread-9]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@52224ca7: startup date [Thu Dec 21 10:31:18 CST 2017]; root of context hierarchy
[2017-12-21 10:34:21.282][INFO ][Thread-9]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@130fabf5: startup date [Thu Dec 21 10:31:20 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@52224ca7
[2017-12-21 10:34:21.284][INFO ][Thread-9]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-21 10:34:21.285][WARN ][Thread-9]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513823661285, current=DOWN, previous=UP]
[2017-12-21 10:34:21.286][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888: registering service...
[2017-12-21 10:34:21.290][INFO ][Thread-9]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-21 10:34:21.295][INFO ][Thread-9]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 10:34:21.297][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - registration status: 204
[2017-12-21 10:34:21.297][INFO ][Thread-9]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 10:34:21.299][INFO ][Thread-9]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 10:34:21.300][INFO ][Thread-9]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 10:34:21.302][INFO ][Thread-9]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-21 10:34:21.303][INFO ][Thread-9]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-21 10:34:21.313][INFO ][Thread-9]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - deregister  status: 200
[2017-12-21 10:34:21.318][INFO ][Thread-9]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-21 10:34:21.323][INFO ][Thread-9]com.alibaba.druid.pool.DruidDataSource:close[1817] - {dataSource-1} closed
[2017-12-21 10:34:21.324][INFO ][Thread-9]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-21 10:34:22.666][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:34:22.739][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@4ed0f610: startup date [Thu Dec 21 10:34:22 CST 2017]; root of context hierarchy
[2017-12-21 10:34:22.770][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 10:34:22.775][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8f96ef3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:34:23.854][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:34:23.932][INFO ][restartedMain]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-21 10:34:23.937][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@62016b74: startup date [Thu Dec 21 10:34:23 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ed0f610
[2017-12-21 10:34:24.750][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-21 10:34:24.765][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-21 10:34:24.783][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-21 10:34:24.895][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-21 10:34:24.974][INFO ][restartedMain]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=bf9f1261-c034-3e7b-a89e-0a96f03f8313
[2017-12-21 10:34:24.982][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 10:34:24.988][INFO ][restartedMain]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-21 10:34:24.988][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:34:24.988][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:34:24.995][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:34:25.005][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$737cec42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:34:25.014][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$a5a99283] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:34:25.017][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8f96ef3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:34:25.139][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-21 10:34:25.160][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1223 ms
[2017-12-21 10:34:25.273][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-21 10:34:25.274][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-21 10:34:25.274][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-21 10:34:25.274][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-21 10:34:25.274][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-21 10:34:25.274][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-21 10:34:25.274][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-21 10:34:25.274][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-21 10:34:25.507][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 10:34:25.508][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 10:34:25.661][INFO ][restartedMain]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@62016b74: startup date [Thu Dec 21 10:34:23 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ed0f610
[2017-12-21 10:34:25.689][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-21 10:34:25.691][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-21 10:34:25.692][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-21 10:34:25.725][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:34:25.725][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:34:25.755][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:34:26.855][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:34:28.086][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:34:28.317][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:34:28.319][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-21 10:34:28.319][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-21 10:34:28.320][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:34:28.320][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:34:28.321][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-21 10:34:28.321][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-21 10:34:28.322][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:34:28.322][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-21 10:34:28.323][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 10:34:28.323][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:34:28.323][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:34:28.324][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:34:28.324][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:34:28.324][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:34:28.325][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-21 10:34:28.325][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:34:28.326][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-21 10:34:28.327][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 10:34:28.327][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-21 10:34:28.327][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/cradyyyy || /cradyyyy.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:34:28.327][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:34:28.329][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-21 10:34:28.330][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-21 10:34:28.464][INFO ][restartedMain]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer:startServer[58] - LiveReload server is running on port 35729
[2017-12-21 10:34:28.527][WARN ][restartedMain]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-21 10:34:28.737][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 10:34:28.738][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-21 10:34:28.740][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-21 10:34:28.742][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-21 10:34:28.743][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-21 10:34:28.743][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-21 10:34:28.744][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-21 10:34:28.745][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-21 10:34:28.747][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-21 10:34:28.749][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-21 10:34:28.752][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=62016b74,type=ConfigurationPropertiesRebinder]
[2017-12-21 10:34:28.754][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-21 10:34:28.756][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-21 10:34:28.757][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 10:34:29.028][INFO ][restartedMain]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-21 10:34:29.029][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-21 10:34:29.033][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-21 10:34:29.036][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-21 10:34:29.036][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-21 10:34:29.036][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-21 10:34:29.036][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-21 10:34:29.140][INFO ][restartedMain]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 10:34:29.147][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 10:34:29.147][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 10:34:29.148][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 10:34:29.148][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 10:34:29.148][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 10:34:29.148][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-21 10:34:29.148][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 10:34:29.153][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 10:34:29.153][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-21 10:34:29.154][INFO ][restartedMain]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-21 10:34:29.154][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513823669154 with initial instances count: 1
[2017-12-21 10:34:29.163][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-21 10:34:29.164][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513823669164, current=UP, previous=STARTING]
[2017-12-21 10:34:29.164][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888: registering service...
[2017-12-21 10:34:29.167][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-21 10:34:29.169][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[2017-12-21 10:34:29.171][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - registration status: 204
[2017-12-21 10:34:29.172][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-21 10:34:29.174][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-21 10:34:29.176][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-21 10:34:29.178][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-21 10:34:29.179][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-21 10:34:29.181][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-21 10:34:29.182][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-21 10:34:29.185][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-21 10:34:29.186][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-21 10:34:29.188][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-21 10:34:29.189][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-21 10:34:29.191][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-21 10:34:29.207][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-21 10:34:29.208][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-21 10:34:29.211][INFO ][restartedMain]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 7.614 seconds (JVM running for 192.788)
[2017-12-21 10:35:04.075][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-21 10:35:04.083][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 8 ms
[2017-12-21 10:35:34.207][INFO ][Thread-13]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@4ed0f610: startup date [Thu Dec 21 10:34:22 CST 2017]; root of context hierarchy
[2017-12-21 10:35:34.208][INFO ][Thread-13]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@62016b74: startup date [Thu Dec 21 10:34:23 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4ed0f610
[2017-12-21 10:35:34.209][INFO ][Thread-13]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-21 10:35:34.209][WARN ][Thread-13]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513823734209, current=DOWN, previous=UP]
[2017-12-21 10:35:34.211][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888: registering service...
[2017-12-21 10:35:34.212][INFO ][Thread-13]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-21 10:35:34.214][INFO ][Thread-13]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 10:35:34.215][INFO ][Thread-13]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 10:35:34.216][INFO ][Thread-13]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 10:35:34.216][INFO ][Thread-13]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 10:35:34.217][INFO ][Thread-13]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-21 10:35:34.217][INFO ][Thread-13]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-21 10:35:34.219][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - registration status: 204
[2017-12-21 10:35:34.224][INFO ][Thread-13]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - deregister  status: 200
[2017-12-21 10:35:34.226][INFO ][Thread-13]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-21 10:35:34.227][INFO ][Thread-13]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-21 10:35:35.615][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:35:35.664][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3f5ac5c9: startup date [Thu Dec 21 10:35:35 CST 2017]; root of context hierarchy
[2017-12-21 10:35:35.680][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 10:35:35.682][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8f96ef3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:35:36.759][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:35:36.788][INFO ][restartedMain]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-21 10:35:36.791][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@22c4cfc7: startup date [Thu Dec 21 10:35:36 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f5ac5c9
[2017-12-21 10:35:37.643][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-21 10:35:37.658][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-21 10:35:37.673][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-21 10:35:37.785][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-21 10:35:37.863][INFO ][restartedMain]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=bf9f1261-c034-3e7b-a89e-0a96f03f8313
[2017-12-21 10:35:37.870][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 10:35:37.874][INFO ][restartedMain]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-21 10:35:37.874][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:35:37.874][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:35:37.881][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:35:37.891][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$737cec42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:35:37.900][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$a5a99283] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:35:37.904][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8f96ef3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:35:38.037][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-21 10:35:38.066][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1275 ms
[2017-12-21 10:35:38.187][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-21 10:35:38.187][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-21 10:35:38.187][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-21 10:35:38.188][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-21 10:35:38.188][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-21 10:35:38.188][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-21 10:35:38.188][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-21 10:35:38.188][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-21 10:35:38.419][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 10:35:38.419][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 10:35:38.570][INFO ][restartedMain]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@22c4cfc7: startup date [Thu Dec 21 10:35:36 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f5ac5c9
[2017-12-21 10:35:38.599][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-21 10:35:38.600][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-21 10:35:38.601][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-21 10:35:38.633][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:35:38.633][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:35:38.662][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:35:39.764][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:35:40.924][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:35:41.203][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:35:41.204][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:35:41.205][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:35:41.205][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:35:41.206][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:35:41.206][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 10:35:41.206][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-21 10:35:41.207][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:35:41.208][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-21 10:35:41.208][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 10:35:41.208][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:35:41.209][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:35:41.209][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:35:41.210][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-21 10:35:41.211][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-21 10:35:41.212][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-21 10:35:41.212][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-21 10:35:41.214][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-21 10:35:41.214][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-21 10:35:41.214][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:35:41.215][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/cradyyyy || /cradyyyy.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:35:41.216][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-21 10:35:41.216][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:35:41.216][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-21 10:35:41.333][INFO ][restartedMain]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer:startServer[58] - LiveReload server is running on port 35729
[2017-12-21 10:35:41.396][WARN ][restartedMain]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-21 10:35:41.619][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 10:35:41.620][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-21 10:35:41.622][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-21 10:35:41.624][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-21 10:35:41.625][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-21 10:35:41.626][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-21 10:35:41.627][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-21 10:35:41.629][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-21 10:35:41.631][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-21 10:35:41.633][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-21 10:35:41.636][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=22c4cfc7,type=ConfigurationPropertiesRebinder]
[2017-12-21 10:35:41.638][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-21 10:35:41.639][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-21 10:35:41.640][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 10:35:41.939][INFO ][restartedMain]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-21 10:35:41.941][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-21 10:35:41.945][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-21 10:35:41.947][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-21 10:35:41.947][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-21 10:35:41.947][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-21 10:35:41.948][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-21 10:35:42.058][INFO ][restartedMain]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 10:35:42.060][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 10:35:42.060][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 10:35:42.060][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 10:35:42.060][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 10:35:42.060][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 10:35:42.061][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-21 10:35:42.061][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 10:35:42.065][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 10:35:42.066][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-21 10:35:42.066][INFO ][restartedMain]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-21 10:35:42.067][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513823742067 with initial instances count: 1
[2017-12-21 10:35:42.075][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-21 10:35:42.076][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513823742075, current=UP, previous=STARTING]
[2017-12-21 10:35:42.076][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888: registering service...
[2017-12-21 10:35:42.080][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-21 10:35:42.081][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - registration status: 204
[2017-12-21 10:35:42.083][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[2017-12-21 10:35:42.085][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-21 10:35:42.087][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-21 10:35:42.089][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-21 10:35:42.090][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-21 10:35:42.092][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-21 10:35:42.093][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-21 10:35:42.096][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-21 10:35:42.099][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-21 10:35:42.101][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-21 10:35:42.102][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-21 10:35:42.104][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-21 10:35:42.106][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-21 10:35:42.132][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-21 10:35:42.133][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-21 10:35:42.136][INFO ][restartedMain]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 7.594 seconds (JVM running for 265.714)
[2017-12-21 10:35:44.654][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-21 10:35:44.662][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 8 ms
[2017-12-21 10:35:44.675][INFO ][http-nio-8888-exec-1]com.alibaba.druid.pool.DruidDataSource:init[922] - {dataSource-2} inited
[2017-12-21 10:35:44.675][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 10:35:44.676][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 10:35:44.678][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 10:35:44.679][INFO ][http-nio-8888-exec-1]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 10:35:44.679][INFO ][http-nio-8888-exec-1]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 10:35:44.682][INFO ][http-nio-8888-exec-1]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[17ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 10:35:45.772][DEBUG][http-nio-8888-exec-3]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 10:35:45.773][DEBUG][http-nio-8888-exec-3]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 10:35:45.775][DEBUG][http-nio-8888-exec-3]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 10:35:45.775][INFO ][http-nio-8888-exec-3]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 10:35:45.775][INFO ][http-nio-8888-exec-3]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 10:35:45.777][INFO ][http-nio-8888-exec-3]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[6ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 10:35:46.166][DEBUG][http-nio-8888-exec-5]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 10:35:46.167][DEBUG][http-nio-8888-exec-5]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 10:35:46.168][DEBUG][http-nio-8888-exec-5]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 10:35:46.169][INFO ][http-nio-8888-exec-5]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 10:35:46.169][INFO ][http-nio-8888-exec-5]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 10:35:46.170][INFO ][http-nio-8888-exec-5]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[4ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 10:35:46.338][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 10:35:46.338][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 10:35:46.346][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 10:35:46.347][INFO ][http-nio-8888-exec-7]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 10:35:46.347][INFO ][http-nio-8888-exec-7]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 10:35:46.349][INFO ][http-nio-8888-exec-7]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[12ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 10:35:52.524][DEBUG][http-nio-8888-exec-9]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 10:35:52.524][DEBUG][http-nio-8888-exec-9]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 10:35:52.527][DEBUG][http-nio-8888-exec-9]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 10:35:52.528][INFO ][http-nio-8888-exec-9]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 10:35:52.528][INFO ][http-nio-8888-exec-9]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 10:35:52.529][INFO ][http-nio-8888-exec-9]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[5ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 10:39:03.826][INFO ][Thread-22]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@3f5ac5c9: startup date [Thu Dec 21 10:35:35 CST 2017]; root of context hierarchy
[2017-12-21 10:39:03.827][INFO ][Thread-22]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@22c4cfc7: startup date [Thu Dec 21 10:35:36 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f5ac5c9
[2017-12-21 10:39:03.828][INFO ][Thread-22]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-21 10:39:03.829][WARN ][Thread-22]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513823943829, current=DOWN, previous=UP]
[2017-12-21 10:39:03.829][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888: registering service...
[2017-12-21 10:39:03.832][INFO ][Thread-22]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-21 10:39:03.834][INFO ][Thread-22]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 10:39:03.834][INFO ][Thread-22]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 10:39:03.835][INFO ][Thread-22]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 10:39:03.836][INFO ][Thread-22]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 10:39:03.836][INFO ][Thread-22]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-21 10:39:03.837][INFO ][Thread-22]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-21 10:39:03.839][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - registration status: 204
[2017-12-21 10:39:03.844][INFO ][Thread-22]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - deregister  status: 200
[2017-12-21 10:39:03.847][INFO ][Thread-22]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-21 10:39:03.849][INFO ][Thread-22]com.alibaba.druid.pool.DruidDataSource:close[1817] - {dataSource-2} closed
[2017-12-21 10:39:03.850][INFO ][Thread-22]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-21 10:39:05.177][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:39:05.226][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3204919e: startup date [Thu Dec 21 10:39:05 CST 2017]; root of context hierarchy
[2017-12-21 10:39:05.243][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 10:39:05.246][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8f96ef3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:39:06.322][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:39:06.441][INFO ][restartedMain]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-21 10:39:06.447][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d79fc5c: startup date [Thu Dec 21 10:39:06 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3204919e
[2017-12-21 10:39:07.296][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-21 10:39:07.308][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-21 10:39:07.321][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-21 10:39:07.432][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-21 10:39:07.511][INFO ][restartedMain]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=bf9f1261-c034-3e7b-a89e-0a96f03f8313
[2017-12-21 10:39:07.519][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 10:39:07.523][INFO ][restartedMain]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-21 10:39:07.523][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:39:07.524][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:39:07.529][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:39:07.539][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$737cec42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:39:07.550][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$a5a99283] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:39:07.553][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8f96ef3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:39:07.683][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-21 10:39:07.704][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1257 ms
[2017-12-21 10:39:07.822][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-21 10:39:07.822][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-21 10:39:07.822][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-21 10:39:07.822][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-21 10:39:07.823][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-21 10:39:07.823][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-21 10:39:07.823][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-21 10:39:07.823][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-21 10:39:08.067][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 10:39:08.067][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 10:39:08.224][INFO ][restartedMain]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d79fc5c: startup date [Thu Dec 21 10:39:06 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3204919e
[2017-12-21 10:39:08.254][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-21 10:39:08.256][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-21 10:39:08.256][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-21 10:39:08.287][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:39:08.287][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:39:08.317][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:39:09.418][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:39:10.607][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:39:10.912][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-21 10:39:10.912][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/cradyyyy || /cradyyyy.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:10.912][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-21 10:39:10.913][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-21 10:39:10.914][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:10.914][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:10.915][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-21 10:39:10.915][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:10.916][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-21 10:39:10.916][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-21 10:39:10.918][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-21 10:39:10.919][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-21 10:39:10.919][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 10:39:10.919][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:10.920][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-21 10:39:10.920][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:10.920][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:10.921][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:10.921][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:10.921][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:10.923][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 10:39:10.924][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-21 10:39:10.924][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:10.925][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:11.042][INFO ][restartedMain]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer:startServer[58] - LiveReload server is running on port 35729
[2017-12-21 10:39:11.118][WARN ][restartedMain]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-21 10:39:11.346][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 10:39:11.347][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-21 10:39:11.350][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-21 10:39:11.352][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-21 10:39:11.353][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-21 10:39:11.353][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-21 10:39:11.354][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-21 10:39:11.355][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-21 10:39:11.357][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-21 10:39:11.359][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-21 10:39:11.362][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=5d79fc5c,type=ConfigurationPropertiesRebinder]
[2017-12-21 10:39:11.363][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-21 10:39:11.366][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-21 10:39:11.367][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 10:39:11.660][INFO ][restartedMain]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-21 10:39:11.661][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-21 10:39:11.665][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-21 10:39:11.667][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-21 10:39:11.667][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-21 10:39:11.667][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-21 10:39:11.668][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-21 10:39:11.784][INFO ][restartedMain]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 10:39:11.785][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 10:39:11.786][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 10:39:11.786][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 10:39:11.786][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 10:39:11.786][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 10:39:11.786][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-21 10:39:11.786][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 10:39:11.791][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 10:39:11.791][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-21 10:39:11.792][INFO ][restartedMain]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-21 10:39:11.794][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513823951794 with initial instances count: 1
[2017-12-21 10:39:11.804][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-21 10:39:11.804][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513823951804, current=UP, previous=STARTING]
[2017-12-21 10:39:11.805][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888: registering service...
[2017-12-21 10:39:11.808][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-21 10:39:11.811][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - registration status: 204
[2017-12-21 10:39:11.813][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[2017-12-21 10:39:11.817][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-21 10:39:11.819][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-21 10:39:11.821][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-21 10:39:11.824][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-21 10:39:11.826][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-21 10:39:11.828][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-21 10:39:11.831][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-21 10:39:11.833][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-21 10:39:11.836][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-21 10:39:11.838][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-21 10:39:11.840][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-21 10:39:11.841][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-21 10:39:11.859][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-21 10:39:11.860][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-21 10:39:11.864][INFO ][restartedMain]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 7.757 seconds (JVM running for 475.442)
[2017-12-21 10:39:21.486][INFO ][Thread-31]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@3204919e: startup date [Thu Dec 21 10:39:05 CST 2017]; root of context hierarchy
[2017-12-21 10:39:21.486][INFO ][Thread-31]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d79fc5c: startup date [Thu Dec 21 10:39:06 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3204919e
[2017-12-21 10:39:21.487][INFO ][Thread-31]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-21 10:39:21.487][WARN ][Thread-31]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513823961487, current=DOWN, previous=UP]
[2017-12-21 10:39:21.487][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888: registering service...
[2017-12-21 10:39:21.488][INFO ][Thread-31]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-21 10:39:21.489][INFO ][Thread-31]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 10:39:21.489][INFO ][Thread-31]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 10:39:21.490][INFO ][Thread-31]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 10:39:21.490][INFO ][Thread-31]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 10:39:21.490][INFO ][Thread-31]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-21 10:39:21.490][INFO ][Thread-31]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-21 10:39:21.492][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - registration status: 204
[2017-12-21 10:39:21.497][INFO ][Thread-31]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - deregister  status: 200
[2017-12-21 10:39:21.499][INFO ][Thread-31]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-21 10:39:21.500][INFO ][Thread-31]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-21 10:39:22.828][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:39:22.910][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@18f5e219: startup date [Thu Dec 21 10:39:22 CST 2017]; root of context hierarchy
[2017-12-21 10:39:22.934][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 10:39:22.937][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8f96ef3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:39:24.013][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:39:24.064][INFO ][restartedMain]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-21 10:39:24.071][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@64c032ef: startup date [Thu Dec 21 10:39:24 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@18f5e219
[2017-12-21 10:39:24.848][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-21 10:39:24.859][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-21 10:39:24.873][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-21 10:39:24.984][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-21 10:39:25.061][INFO ][restartedMain]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=bf9f1261-c034-3e7b-a89e-0a96f03f8313
[2017-12-21 10:39:25.069][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 10:39:25.073][INFO ][restartedMain]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-21 10:39:25.073][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:39:25.074][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:39:25.079][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:39:25.089][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$737cec42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:39:25.098][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$a5a99283] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:39:25.102][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8f96ef3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:39:25.232][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-21 10:39:25.252][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1181 ms
[2017-12-21 10:39:25.368][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-21 10:39:25.369][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-21 10:39:25.369][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-21 10:39:25.369][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-21 10:39:25.369][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-21 10:39:25.369][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-21 10:39:25.369][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-21 10:39:25.369][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-21 10:39:25.604][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 10:39:25.605][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 10:39:25.760][INFO ][restartedMain]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@64c032ef: startup date [Thu Dec 21 10:39:24 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@18f5e219
[2017-12-21 10:39:25.791][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-21 10:39:25.793][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-21 10:39:25.793][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-21 10:39:25.823][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:39:25.823][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:39:25.855][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:39:26.955][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:39:28.155][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:39:28.431][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-21 10:39:28.431][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-21 10:39:28.431][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:28.432][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:28.432][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:28.433][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-21 10:39:28.434][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-21 10:39:28.434][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 10:39:28.434][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-21 10:39:28.434][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:28.435][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:28.436][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-21 10:39:28.436][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-21 10:39:28.437][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 10:39:28.437][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:28.437][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:28.438][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-21 10:39:28.438][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-21 10:39:28.439][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:28.439][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-21 10:39:28.439][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:28.440][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:28.441][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:28.441][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:39:28.556][INFO ][restartedMain]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer:startServer[58] - LiveReload server is running on port 35729
[2017-12-21 10:39:28.619][WARN ][restartedMain]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-21 10:39:28.838][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 10:39:28.839][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-21 10:39:28.841][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-21 10:39:28.843][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-21 10:39:28.844][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-21 10:39:28.845][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-21 10:39:28.845][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-21 10:39:28.846][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-21 10:39:28.848][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-21 10:39:28.851][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-21 10:39:28.854][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=64c032ef,type=ConfigurationPropertiesRebinder]
[2017-12-21 10:39:28.856][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-21 10:39:28.858][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-21 10:39:28.858][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 10:39:29.130][INFO ][restartedMain]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-21 10:39:29.131][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-21 10:39:29.135][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-21 10:39:29.136][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-21 10:39:29.137][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-21 10:39:29.137][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-21 10:39:29.137][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-21 10:39:29.244][INFO ][restartedMain]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 10:39:29.245][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 10:39:29.245][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 10:39:29.245][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 10:39:29.245][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 10:39:29.245][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 10:39:29.245][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-21 10:39:29.246][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 10:39:29.249][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 10:39:29.250][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-21 10:39:29.250][INFO ][restartedMain]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-21 10:39:29.252][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513823969252 with initial instances count: 1
[2017-12-21 10:39:29.260][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-21 10:39:29.260][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513823969260, current=UP, previous=STARTING]
[2017-12-21 10:39:29.261][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888: registering service...
[2017-12-21 10:39:29.264][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-21 10:39:29.267][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - registration status: 204
[2017-12-21 10:39:29.268][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[2017-12-21 10:39:29.269][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-21 10:39:29.271][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-21 10:39:29.273][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-21 10:39:29.275][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-21 10:39:29.276][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-21 10:39:29.279][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-21 10:39:29.280][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-21 10:39:29.283][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-21 10:39:29.285][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-21 10:39:29.287][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-21 10:39:29.289][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-21 10:39:29.291][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-21 10:39:29.311][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-21 10:39:29.312][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-21 10:39:29.315][INFO ][restartedMain]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 7.556 seconds (JVM running for 492.892)
[2017-12-21 10:40:04.740][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-21 10:40:04.749][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 9 ms
[2017-12-21 10:40:04.751][INFO ][http-nio-8888-exec-1]org.springframework.boot.actuate.endpoint.mvc.MvcEndpointSecurityInterceptor:logUnauthorizedAttempt[122] - Full authentication is required to access actuator endpoints. Consider adding Spring Security or set 'management.security.enabled' to false.
[2017-12-21 10:41:25.716][INFO ][Thread-40]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@18f5e219: startup date [Thu Dec 21 10:39:22 CST 2017]; root of context hierarchy
[2017-12-21 10:41:25.716][INFO ][Thread-40]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@64c032ef: startup date [Thu Dec 21 10:39:24 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@18f5e219
[2017-12-21 10:41:25.717][INFO ][Thread-40]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-21 10:41:25.717][WARN ][Thread-40]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513824085717, current=DOWN, previous=UP]
[2017-12-21 10:41:25.719][INFO ][Thread-40]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-21 10:41:25.720][INFO ][Thread-40]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 10:41:25.720][INFO ][Thread-40]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 10:41:25.721][INFO ][Thread-40]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 10:41:25.721][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888: registering service...
[2017-12-21 10:41:25.722][INFO ][Thread-40]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 10:41:25.723][INFO ][Thread-40]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-21 10:41:25.723][INFO ][Thread-40]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-21 10:41:25.754][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - registration status: 204
[2017-12-21 10:41:25.763][INFO ][Thread-40]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - deregister  status: 200
[2017-12-21 10:41:25.764][INFO ][Thread-40]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-21 10:41:25.765][INFO ][Thread-40]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-21 10:41:28.670][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:41:28.710][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@54ac0b50: startup date [Thu Dec 21 10:41:28 CST 2017]; root of context hierarchy
[2017-12-21 10:41:28.731][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 10:41:28.735][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8f96ef3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:41:29.813][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:41:29.841][INFO ][restartedMain]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-21 10:41:29.849][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@473424d8: startup date [Thu Dec 21 10:41:29 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@54ac0b50
[2017-12-21 10:41:30.673][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-21 10:41:30.688][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-21 10:41:30.701][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-21 10:41:30.822][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-21 10:41:30.909][INFO ][restartedMain]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=bf9f1261-c034-3e7b-a89e-0a96f03f8313
[2017-12-21 10:41:30.916][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 10:41:30.921][INFO ][restartedMain]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-21 10:41:30.921][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:41:30.921][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:41:30.927][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:41:30.939][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$737cec42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:41:30.950][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$a5a99283] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:41:30.954][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8f96ef3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:41:31.085][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-21 10:41:31.105][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1256 ms
[2017-12-21 10:41:31.230][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-21 10:41:31.230][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-21 10:41:31.230][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-21 10:41:31.230][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-21 10:41:31.230][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-21 10:41:31.231][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-21 10:41:31.231][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-21 10:41:31.231][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-21 10:41:31.476][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 10:41:31.476][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 10:41:31.632][INFO ][restartedMain]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@473424d8: startup date [Thu Dec 21 10:41:29 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@54ac0b50
[2017-12-21 10:41:31.663][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-21 10:41:31.664][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-21 10:41:31.665][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-21 10:41:31.694][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:41:31.694][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:41:31.725][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:41:32.825][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:41:34.009][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:41:34.249][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-21 10:41:34.249][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:41:34.249][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:41:34.250][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:41:34.251][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-21 10:41:34.251][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:41:34.252][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-21 10:41:34.253][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:41:34.254][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-21 10:41:34.254][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 10:41:34.255][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:41:34.255][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-21 10:41:34.255][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-21 10:41:34.256][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-21 10:41:34.256][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-21 10:41:34.257][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 10:41:34.257][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-21 10:41:34.257][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:41:34.258][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:41:34.258][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:41:34.258][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:41:34.260][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:41:34.260][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:41:34.262][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-21 10:41:34.385][INFO ][restartedMain]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer:startServer[58] - LiveReload server is running on port 35729
[2017-12-21 10:41:34.451][WARN ][restartedMain]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-21 10:41:34.672][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 10:41:34.673][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-21 10:41:34.676][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-21 10:41:34.679][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-21 10:41:34.679][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-21 10:41:34.680][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-21 10:41:34.680][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-21 10:41:34.681][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-21 10:41:34.684][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-21 10:41:34.686][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-21 10:41:34.690][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=473424d8,type=ConfigurationPropertiesRebinder]
[2017-12-21 10:41:34.692][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-21 10:41:34.694][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-21 10:41:34.694][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 10:41:34.973][INFO ][restartedMain]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-21 10:41:34.975][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-21 10:41:34.979][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-21 10:41:34.981][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-21 10:41:34.982][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-21 10:41:34.982][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-21 10:41:34.982][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-21 10:41:35.089][INFO ][restartedMain]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 10:41:35.090][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 10:41:35.090][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 10:41:35.090][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 10:41:35.090][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 10:41:35.091][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 10:41:35.091][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-21 10:41:35.091][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 10:41:35.097][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 10:41:35.098][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-21 10:41:35.098][INFO ][restartedMain]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-21 10:41:35.099][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513824095099 with initial instances count: 0
[2017-12-21 10:41:35.106][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-21 10:41:35.107][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513824095106, current=UP, previous=STARTING]
[2017-12-21 10:41:35.107][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888: registering service...
[2017-12-21 10:41:35.110][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-21 10:41:35.115][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - registration status: 204
[2017-12-21 10:41:35.118][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[2017-12-21 10:41:35.120][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-21 10:41:35.122][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-21 10:41:35.125][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-21 10:41:35.129][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-21 10:41:35.131][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-21 10:41:35.134][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-21 10:41:35.136][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-21 10:41:35.141][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-21 10:41:35.149][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-21 10:41:35.151][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-21 10:41:35.155][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-21 10:41:35.158][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-21 10:41:35.189][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-21 10:41:35.191][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-21 10:41:35.194][INFO ][restartedMain]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 8.959 seconds (JVM running for 618.772)
[2017-12-21 10:42:05.101][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 10:42:05.102][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 10:42:05.102][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 10:42:05.102][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 10:42:05.103][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 10:42:05.103][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: false
[2017-12-21 10:42:05.103][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 10:42:05.115][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 10:42:17.076][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-21 10:42:17.084][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 8 ms
[2017-12-21 10:42:17.089][INFO ][http-nio-8888-exec-1]org.springframework.boot.actuate.endpoint.mvc.MvcEndpointSecurityInterceptor:logUnauthorizedAttempt[122] - Full authentication is required to access actuator endpoints. Consider adding Spring Security or set 'management.security.enabled' to false.
[2017-12-21 10:42:36.443][INFO ][http-nio-8888-exec-6]com.alibaba.druid.pool.DruidDataSource:init[922] - {dataSource-3} inited
[2017-12-21 10:42:36.444][DEBUG][http-nio-8888-exec-6]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 10:42:36.444][DEBUG][http-nio-8888-exec-6]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 10:42:36.446][DEBUG][http-nio-8888-exec-6]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 10:42:36.447][INFO ][http-nio-8888-exec-6]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 10:42:36.447][INFO ][http-nio-8888-exec-6]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 10:42:36.450][INFO ][http-nio-8888-exec-6]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[20ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 10:45:10.043][INFO ][Thread-49]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@54ac0b50: startup date [Thu Dec 21 10:41:28 CST 2017]; root of context hierarchy
[2017-12-21 10:45:10.044][INFO ][Thread-49]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@473424d8: startup date [Thu Dec 21 10:41:29 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@54ac0b50
[2017-12-21 10:45:10.044][INFO ][Thread-49]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-21 10:45:10.045][WARN ][Thread-49]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513824310045, current=DOWN, previous=UP]
[2017-12-21 10:45:10.046][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888: registering service...
[2017-12-21 10:45:10.051][INFO ][Thread-49]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-21 10:45:10.052][INFO ][Thread-49]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 10:45:10.054][INFO ][Thread-49]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 10:45:10.054][INFO ][Thread-49]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 10:45:10.055][INFO ][Thread-49]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 10:45:10.055][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - registration status: 204
[2017-12-21 10:45:10.055][INFO ][Thread-49]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-21 10:45:10.056][INFO ][Thread-49]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-21 10:45:10.060][INFO ][Thread-49]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - deregister  status: 200
[2017-12-21 10:45:10.063][INFO ][Thread-49]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-21 10:45:10.066][INFO ][Thread-49]com.alibaba.druid.pool.DruidDataSource:close[1817] - {dataSource-3} closed
[2017-12-21 10:45:10.066][INFO ][Thread-49]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-21 10:45:11.483][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:45:11.515][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@40abf2d9: startup date [Thu Dec 21 10:45:11 CST 2017]; root of context hierarchy
[2017-12-21 10:45:11.530][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 10:45:11.533][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8f96ef3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:45:12.613][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:45:12.640][INFO ][restartedMain]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-21 10:45:12.644][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6ba25f52: startup date [Thu Dec 21 10:45:12 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@40abf2d9
[2017-12-21 10:45:13.468][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-21 10:45:13.478][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-21 10:45:13.490][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-21 10:45:13.601][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-21 10:45:13.676][INFO ][restartedMain]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=bf9f1261-c034-3e7b-a89e-0a96f03f8313
[2017-12-21 10:45:13.683][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 10:45:13.687][INFO ][restartedMain]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-21 10:45:13.687][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:45:13.687][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:45:13.693][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:45:13.702][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$737cec42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:45:13.714][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$a5a99283] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:45:13.718][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8f96ef3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:45:13.838][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-21 10:45:13.856][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1212 ms
[2017-12-21 10:45:13.965][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-21 10:45:13.965][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-21 10:45:13.965][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-21 10:45:13.965][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-21 10:45:13.966][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-21 10:45:13.966][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-21 10:45:13.966][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-21 10:45:13.966][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-21 10:45:14.207][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 10:45:14.208][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 10:45:14.376][INFO ][restartedMain]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6ba25f52: startup date [Thu Dec 21 10:45:12 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@40abf2d9
[2017-12-21 10:45:14.405][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-21 10:45:14.407][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-21 10:45:14.407][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-21 10:45:14.437][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:45:14.438][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:45:14.467][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:45:15.564][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:45:16.752][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:45:16.998][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-21 10:45:16.998][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:45:16.999][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:45:16.999][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:45:16.999][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:45:17.000][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:45:17.001][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-21 10:45:17.002][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-21 10:45:17.003][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-21 10:45:17.003][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:45:17.004][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-21 10:45:17.005][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 10:45:17.005][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:45:17.005][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 10:45:17.006][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-21 10:45:17.006][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:45:17.006][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:45:17.007][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-21 10:45:17.007][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:45:17.007][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-21 10:45:17.008][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-21 10:45:17.008][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:45:17.009][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-21 10:45:17.009][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:45:17.121][INFO ][restartedMain]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer:startServer[58] - LiveReload server is running on port 35729
[2017-12-21 10:45:17.188][WARN ][restartedMain]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-21 10:45:17.400][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 10:45:17.401][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-21 10:45:17.403][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-21 10:45:17.405][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-21 10:45:17.405][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-21 10:45:17.406][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-21 10:45:17.406][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-21 10:45:17.408][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-21 10:45:17.410][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-21 10:45:17.413][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-21 10:45:17.415][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6ba25f52,type=ConfigurationPropertiesRebinder]
[2017-12-21 10:45:17.417][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-21 10:45:17.419][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-21 10:45:17.419][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 10:45:17.683][INFO ][restartedMain]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-21 10:45:17.685][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-21 10:45:17.688][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-21 10:45:17.690][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-21 10:45:17.690][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-21 10:45:17.691][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-21 10:45:17.691][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-21 10:45:17.791][INFO ][restartedMain]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 10:45:17.792][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 10:45:17.792][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 10:45:17.793][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 10:45:17.793][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 10:45:17.793][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 10:45:17.793][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-21 10:45:17.793][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 10:45:17.797][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 10:45:17.798][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-21 10:45:17.798][INFO ][restartedMain]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-21 10:45:17.799][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513824317799 with initial instances count: 1
[2017-12-21 10:45:17.807][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-21 10:45:17.807][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513824317807, current=UP, previous=STARTING]
[2017-12-21 10:45:17.808][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888: registering service...
[2017-12-21 10:45:17.810][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-21 10:45:17.815][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[2017-12-21 10:45:17.815][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - registration status: 204
[2017-12-21 10:45:17.817][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-21 10:45:17.818][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-21 10:45:17.820][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-21 10:45:17.822][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-21 10:45:17.823][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-21 10:45:17.825][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-21 10:45:17.826][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-21 10:45:17.828][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-21 10:45:17.830][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-21 10:45:17.832][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-21 10:45:17.834][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-21 10:45:17.835][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-21 10:45:17.854][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-21 10:45:17.855][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-21 10:45:17.857][INFO ][restartedMain]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 7.447 seconds (JVM running for 841.435)
[2017-12-21 10:45:22.940][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-21 10:45:22.947][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 7 ms
[2017-12-21 10:45:22.950][INFO ][http-nio-8888-exec-1]org.springframework.boot.actuate.endpoint.mvc.MvcEndpointSecurityInterceptor:logUnauthorizedAttempt[122] - Full authentication is required to access actuator endpoints. Consider adding Spring Security or set 'management.security.enabled' to false.
[2017-12-21 10:45:30.501][INFO ][http-nio-8888-exec-1]com.alibaba.druid.pool.DruidDataSource:init[922] - {dataSource-4} inited
[2017-12-21 10:45:30.501][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 10:45:30.502][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 10:45:30.504][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 10:45:30.505][INFO ][http-nio-8888-exec-1]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 10:45:30.505][INFO ][http-nio-8888-exec-1]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 10:45:30.507][INFO ][http-nio-8888-exec-1]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[15ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 10:45:31.035][DEBUG][http-nio-8888-exec-2]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 10:45:31.036][DEBUG][http-nio-8888-exec-2]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 10:45:31.037][DEBUG][http-nio-8888-exec-2]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 10:45:31.038][INFO ][http-nio-8888-exec-2]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 10:45:31.038][INFO ][http-nio-8888-exec-2]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 10:45:31.039][INFO ][http-nio-8888-exec-2]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[4ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 10:45:31.226][DEBUG][http-nio-8888-exec-5]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 10:45:31.226][DEBUG][http-nio-8888-exec-5]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 10:45:31.227][DEBUG][http-nio-8888-exec-5]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 10:45:31.228][INFO ][http-nio-8888-exec-5]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 10:45:31.228][INFO ][http-nio-8888-exec-5]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 10:45:31.229][INFO ][http-nio-8888-exec-5]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[4ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 10:45:31.419][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 10:45:31.420][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 10:45:31.422][DEBUG][http-nio-8888-exec-7]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 10:45:31.423][INFO ][http-nio-8888-exec-7]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 10:45:31.423][INFO ][http-nio-8888-exec-7]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 10:45:31.424][INFO ][http-nio-8888-exec-7]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[5ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 10:47:31.398][INFO ][Thread-58]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@40abf2d9: startup date [Thu Dec 21 10:45:11 CST 2017]; root of context hierarchy
[2017-12-21 10:47:31.399][INFO ][Thread-58]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6ba25f52: startup date [Thu Dec 21 10:45:12 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@40abf2d9
[2017-12-21 10:47:31.401][INFO ][Thread-58]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-21 10:47:31.401][WARN ][Thread-58]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513824451401, current=DOWN, previous=UP]
[2017-12-21 10:47:31.402][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888: registering service...
[2017-12-21 10:47:31.405][INFO ][Thread-58]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-21 10:47:31.407][INFO ][Thread-58]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 10:47:31.408][INFO ][Thread-58]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 10:47:31.409][INFO ][Thread-58]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 10:47:31.409][INFO ][Thread-58]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 10:47:31.412][INFO ][Thread-58]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-21 10:47:31.413][INFO ][Thread-58]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-21 10:47:31.415][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - registration status: 204
[2017-12-21 10:47:31.423][INFO ][Thread-58]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - deregister  status: 200
[2017-12-21 10:47:31.426][INFO ][Thread-58]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-21 10:47:31.427][INFO ][Thread-58]com.alibaba.druid.pool.DruidDataSource:close[1817] - {dataSource-4} closed
[2017-12-21 10:47:31.427][INFO ][Thread-58]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-21 10:47:32.795][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:47:32.907][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@76a832d8: startup date [Thu Dec 21 10:47:32 CST 2017]; root of context hierarchy
[2017-12-21 10:47:32.933][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 10:47:32.936][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8f96ef3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:47:34.011][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:47:34.050][INFO ][restartedMain]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-21 10:47:34.055][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24b047bf: startup date [Thu Dec 21 10:47:34 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@76a832d8
[2017-12-21 10:47:34.829][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-21 10:47:34.839][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-21 10:47:34.850][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-21 10:47:34.961][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-21 10:47:35.040][INFO ][restartedMain]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=bf9f1261-c034-3e7b-a89e-0a96f03f8313
[2017-12-21 10:47:35.049][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 10:47:35.054][INFO ][restartedMain]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-21 10:47:35.054][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:47:35.054][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:47:35.060][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:47:35.070][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$737cec42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:47:35.080][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$a5a99283] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:47:35.084][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8f96ef3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:47:35.207][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-21 10:47:35.227][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1172 ms
[2017-12-21 10:47:35.348][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-21 10:47:35.349][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-21 10:47:35.349][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-21 10:47:35.349][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-21 10:47:35.349][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-21 10:47:35.349][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-21 10:47:35.350][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-21 10:47:35.350][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-21 10:47:35.579][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 10:47:35.580][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 10:47:35.634][ERROR][restartedMain]org.springframework.boot.bind.PropertiesConfigurationFactory:checkForBindingErrors[350] - Properties configuration failed validation
[2017-12-21 10:47:35.635][ERROR][restartedMain]org.springframework.boot.bind.PropertiesConfigurationFactory:checkForBindingErrors[352] - Field error in object 'management' on field 'security.enabled': rejected value []; codes [typeMismatch.management.security.enabled,typeMismatch.security.enabled,typeMismatch.enabled,typeMismatch.boolean,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [management.security.enabled,security.enabled]; arguments []; default message [security.enabled]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'boolean' for property 'security.enabled'; nested exception is org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [java.lang.String] to type [boolean]]
[2017-12-21 10:47:35.640][WARN ][restartedMain]org.springframework.context.support.AbstractApplicationContext:refresh[551] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration$EnableWebMvcConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.actuate.autoconfigure.EndpointWebMvcManagementContextConfiguration': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'managementServerProperties': Could not bind properties to ManagementServerProperties (prefix=management, ignoreInvalidFields=false, ignoreUnknownFields=true, ignoreNestedProperties=false); nested exception is org.springframework.validation.BindException: org.springframework.boot.bind.RelaxedDataBinder$RelaxedBeanPropertyBindingResult: 1 errors
Field error in object 'management' on field 'security.enabled': rejected value []; codes [typeMismatch.management.security.enabled,typeMismatch.security.enabled,typeMismatch.enabled,typeMismatch.boolean,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [management.security.enabled,security.enabled]; arguments []; default message [security.enabled]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'boolean' for property 'security.enabled'; nested exception is org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [java.lang.String] to type [boolean]]
[2017-12-21 10:47:35.640][INFO ][restartedMain]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-21 10:47:35.652][INFO ][restartedMain]org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer:logAutoConfigurationReport[101] - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
[2017-12-21 10:47:35.657][ERROR][restartedMain]org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter:report[42] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target org.springframework.boot.actuate.autoconfigure.ManagementServerProperties@3e262ab failed:

    Property: management.security.enabled
    Value: 
    Reason: Failed to convert property value of type 'java.lang.String' to required type 'boolean' for property 'security.enabled'; nested exception is org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [java.lang.String] to type [boolean]


Action:

Update your application's configuration

[2017-12-21 10:48:41.026][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:48:41.208][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@6883680e: startup date [Thu Dec 21 10:48:41 CST 2017]; root of context hierarchy
[2017-12-21 10:48:41.425][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 10:48:41.466][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5469c9ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:48:42.634][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:48:42.743][INFO ][restartedMain]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-21 10:48:42.761][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2588373f: startup date [Thu Dec 21 10:48:42 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6883680e
[2017-12-21 10:48:43.743][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-21 10:48:43.875][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-21 10:48:43.901][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-21 10:48:44.175][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-21 10:48:44.439][INFO ][restartedMain]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=a844e5dd-4a6a-3473-afa2-82f735923644
[2017-12-21 10:48:44.453][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 10:48:44.498][INFO ][restartedMain]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-21 10:48:44.498][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:48:44.498][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:48:44.559][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:48:44.612][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$384fc6cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:48:44.720][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$6a7c6d0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:48:44.732][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5469c9ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 10:48:45.182][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-21 10:48:45.302][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 2541 ms
[2017-12-21 10:48:45.648][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-21 10:48:45.653][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-21 10:48:45.653][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-21 10:48:45.654][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-21 10:48:45.654][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-21 10:48:45.654][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-21 10:48:45.654][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-21 10:48:45.654][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-21 10:48:46.241][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 10:48:46.242][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 10:48:46.246][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 10:48:46.246][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 10:48:46.673][INFO ][restartedMain]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2588373f: startup date [Thu Dec 21 10:48:42 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6883680e
[2017-12-21 10:48:46.776][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-21 10:48:46.780][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-21 10:48:46.781][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-21 10:48:46.845][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:48:46.846][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:48:46.909][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 10:48:48.096][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:48:49.430][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 10:48:50.059][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-21 10:48:50.060][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:48:50.061][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-21 10:48:50.063][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-21 10:48:50.063][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 10:48:50.064][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:48:50.064][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-21 10:48:50.065][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-21 10:48:50.065][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:48:50.066][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:48:50.067][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-21 10:48:50.069][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:48:50.069][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 10:48:50.070][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-21 10:48:50.070][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-21 10:48:50.071][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:48:50.072][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-21 10:48:50.072][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:48:50.073][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:48:50.073][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:48:50.074][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:48:50.074][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:48:50.075][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-21 10:48:50.076][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 10:48:50.355][INFO ][restartedMain]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer:startServer[58] - LiveReload server is running on port 35729
[2017-12-21 10:48:50.553][WARN ][restartedMain]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-21 10:48:50.772][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 10:48:50.773][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-21 10:48:50.781][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-21 10:48:50.784][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-21 10:48:50.785][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-21 10:48:50.786][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-21 10:48:50.787][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-21 10:48:50.789][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-21 10:48:50.801][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-21 10:48:50.808][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-21 10:48:50.822][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=2588373f,type=ConfigurationPropertiesRebinder]
[2017-12-21 10:48:50.828][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-21 10:48:50.831][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-21 10:48:50.835][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 10:48:51.114][INFO ][restartedMain]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-21 10:48:51.121][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-21 10:48:51.151][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-21 10:48:51.309][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-21 10:48:51.310][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-21 10:48:51.387][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-21 10:48:51.388][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-21 10:48:51.591][INFO ][restartedMain]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 10:48:51.628][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 10:48:51.628][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 10:48:51.628][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 10:48:51.628][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 10:48:51.629][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 10:48:51.629][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-21 10:48:51.629][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 10:48:51.722][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 10:48:51.723][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-21 10:48:51.725][INFO ][restartedMain]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-21 10:48:51.728][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513824531728 with initial instances count: 0
[2017-12-21 10:48:51.740][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-21 10:48:51.741][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513824531741, current=UP, previous=STARTING]
[2017-12-21 10:48:51.743][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888: registering service...
[2017-12-21 10:48:51.746][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-21 10:48:51.755][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[2017-12-21 10:48:51.766][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-21 10:48:51.768][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-21 10:48:51.771][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-21 10:48:51.773][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-21 10:48:51.775][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-21 10:48:51.778][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-21 10:48:51.781][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-21 10:48:51.788][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-21 10:48:51.790][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-21 10:48:51.793][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-21 10:48:51.795][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-21 10:48:51.798][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-21 10:48:51.799][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - registration status: 204
[2017-12-21 10:48:51.860][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-21 10:48:51.862][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-21 10:48:51.866][INFO ][restartedMain]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 12.009 seconds (JVM running for 12.756)
[2017-12-21 10:49:21.725][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 10:49:21.725][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 10:49:21.726][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 10:49:21.726][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 10:49:21.727][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 10:49:21.727][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: false
[2017-12-21 10:49:21.727][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 10:49:21.772][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 10:53:51.631][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 10:54:01.760][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-21 10:54:01.788][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
[2017-12-21 10:54:02.030][INFO ][http-nio-8888-exec-1]com.alibaba.druid.pool.DruidDataSource:init[922] - {dataSource-1} inited
[2017-12-21 10:54:02.034][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 10:54:02.054][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 10:54:02.072][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 10:54:02.074][INFO ][http-nio-8888-exec-1]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 10:54:02.075][INFO ][http-nio-8888-exec-1]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 10:54:02.091][INFO ][http-nio-8888-exec-1]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[281ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 10:58:51.633][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 11:03:51.634][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 11:08:51.635][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 11:13:51.638][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 11:18:51.639][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 11:22:44.570][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 11:22:44.570][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 11:22:44.573][DEBUG][http-nio-8888-exec-1]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 11:22:44.573][INFO ][http-nio-8888-exec-1]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 11:22:44.573][INFO ][http-nio-8888-exec-1]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 11:22:44.574][INFO ][http-nio-8888-exec-1]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[5ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 11:23:51.640][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 11:24:16.937][DEBUG][http-nio-8888-exec-3]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==>  Preparing: select id, name, password, age, sex from t_user 
[2017-12-21 11:24:16.938][DEBUG][http-nio-8888-exec-3]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - ==> Parameters: 
[2017-12-21 11:24:16.939][DEBUG][http-nio-8888-exec-3]org.apache.ibatis.logging.jdbc.BaseJdbcLogger:debug[159] - <==      Total: 4
[2017-12-21 11:24:16.940][INFO ][http-nio-8888-exec-3]com.crady.UserController:listAll[39] - 请求成功...www.baidu.com												
[2017-12-21 11:24:16.941][INFO ][http-nio-8888-exec-3]com.crady.UserController:listAll[40] - name=crady,url=http://www.baidu.com,port=8888
[2017-12-21 11:24:16.942][INFO ][http-nio-8888-exec-3]com.crady.interceptor.RequestInterceptor:afterCompletion[26] - 耗时:[6ms],请求参数:{url: http://localhost:8888/user/list, method: GET, uri: /user/list, params: null}
[2017-12-21 11:28:51.642][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 11:32:57.389][INFO ][Thread-9]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@6883680e: startup date [Thu Dec 21 10:48:41 CST 2017]; root of context hierarchy
[2017-12-21 11:32:57.390][INFO ][Thread-9]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2588373f: startup date [Thu Dec 21 10:48:42 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6883680e
[2017-12-21 11:32:57.391][INFO ][Thread-9]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-21 11:32:57.391][WARN ][Thread-9]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513827177391, current=DOWN, previous=UP]
[2017-12-21 11:32:57.391][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888: registering service...
[2017-12-21 11:32:57.393][INFO ][Thread-9]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-21 11:32:57.396][INFO ][Thread-9]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 11:32:57.398][INFO ][Thread-9]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 11:32:57.398][INFO ][Thread-9]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 11:32:57.399][INFO ][Thread-9]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 11:32:57.400][INFO ][Thread-9]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-21 11:32:57.401][INFO ][Thread-9]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-21 11:32:57.405][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - registration status: 204
[2017-12-21 11:32:57.410][INFO ][Thread-9]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - deregister  status: 200
[2017-12-21 11:32:57.414][INFO ][Thread-9]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-21 11:32:57.421][INFO ][Thread-9]com.alibaba.druid.pool.DruidDataSource:close[1817] - {dataSource-1} closed
[2017-12-21 11:32:57.422][INFO ][Thread-9]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
[2017-12-21 11:32:58.814][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 11:32:58.853][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@194a9009: startup date [Thu Dec 21 11:32:58 CST 2017]; root of context hierarchy
[2017-12-21 11:32:58.879][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 11:32:58.881][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5469c9ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 11:32:59.967][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 11:33:00.028][INFO ][restartedMain]org.springframework.boot.SpringApplication:logStartupProfileInfo[593] - No active profile set, falling back to default profiles: default
[2017-12-21 11:33:00.033][INFO ][restartedMain]org.springframework.context.support.AbstractApplicationContext:prepareRefresh[583] - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@14e1a60e: startup date [Thu Dec 21 11:33:00 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@194a9009
[2017-12-21 11:33:01.181][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-mybatis.xml]
[2017-12-21 11:33:01.206][INFO ][restartedMain]org.springframework.beans.factory.xml.XmlBeanDefinitionReader:loadBeanDefinitions[317] - Loading XML bean definitions from URL [file:/F:/eclipse-workspace/spring_cloud_mybatis2/target/classes/spring-transaction.xml]
[2017-12-21 11:33:01.230][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionalEventListenerFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]] with [Root bean: class [org.springframework.transaction.event.TransactionalEventListenerFactory]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
[2017-12-21 11:33:01.385][INFO ][restartedMain]org.springframework.beans.factory.support.DefaultListableBeanFactory:registerBeanDefinition[828] - Overriding bean definition for bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor' with a different definition: replacing [Generic bean: class [org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.scheduling.annotation.SchedulingConfiguration; factoryMethodName=scheduledAnnotationProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/scheduling/annotation/SchedulingConfiguration.class]]
[2017-12-21 11:33:01.501][INFO ][restartedMain]org.springframework.cloud.context.scope.GenericScope:setSerializationId[287] - BeanFactory id=a844e5dd-4a6a-3473-afa2-82f735923644
[2017-12-21 11:33:01.512][INFO ][restartedMain]org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:<init>[155] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2017-12-21 11:33:01.518][INFO ][restartedMain]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:initialize[165] - Initializing ExecutorService 
[2017-12-21 11:33:01.518][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.config.TaskExecutorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 11:33:01.518][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'defaultExecutor' of type [org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 11:33:01.528][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 11:33:01.541][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$384fc6cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 11:33:01.558][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$6a7c6d0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 11:33:01.564][INFO ][restartedMain]org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:postProcessAfterInitialization[327] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5469c9ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2017-12-21 11:33:01.746][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:initialize[89] - Tomcat initialized with port(s): 8888 (http)
[2017-12-21 11:33:01.770][INFO ][localhost-startStop-1]org.springframework.boot.context.embedded.EmbeddedWebApplicationContext:prepareEmbeddedWebApplicationContext[276] - Root WebApplicationContext: initialization completed in 1737 ms
[2017-12-21 11:33:01.919][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.ServletRegistrationBean:onStartup[190] - Mapping servlet: 'dispatcherServlet' to [/]
[2017-12-21 11:33:01.920][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'metricsFilter' to: [/*]
[2017-12-21 11:33:01.921][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'characterEncodingFilter' to: [/*]
[2017-12-21 11:33:01.921][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2017-12-21 11:33:01.921][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'httpPutFormContentFilter' to: [/*]
[2017-12-21 11:33:01.921][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'requestContextFilter' to: [/*]
[2017-12-21 11:33:01.921][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'webRequestLoggingFilter' to: [/*]
[2017-12-21 11:33:01.921][INFO ][localhost-startStop-1]org.springframework.boot.web.servlet.AbstractFilterRegistrationBean:configure[258] - Mapping filter: 'applicationContextIdFilter' to: [/*]
[2017-12-21 11:33:02.198][WARN ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[121] - No URLs will be polled as dynamic configuration sources.
[2017-12-21 11:33:02.199][INFO ][restartedMain]com.netflix.config.sources.URLConfigurationSource:<init>[122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[2017-12-21 11:33:02.401][INFO ][restartedMain]org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:initControllerAdviceCache[534] - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@14e1a60e: startup date [Thu Dec 21 11:33:00 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@194a9009
[2017-12-21 11:33:02.443][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/user/list]}" onto public java.util.List<com.crady.bean.User> com.crady.UserController.listAll()
[2017-12-21 11:33:02.446][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
[2017-12-21 11:33:02.446][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
[2017-12-21 11:33:02.485][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 11:33:02.486][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 11:33:02.523][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractUrlHandlerMapping:registerHandler[362] - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[2017-12-21 11:33:03.636][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 11:33:04.825][INFO ][restartedMain]org.springframework.cloud.commons.util.InetUtils:convertAddress[171] - Cannot determine local hostname
[2017-12-21 11:33:05.134][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
[2017-12-21 11:33:05.135][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 11:33:05.135][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 11:33:05.137][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
[2017-12-21 11:33:05.138][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
[2017-12-21 11:33:05.139][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 11:33:05.139][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 11:33:05.139][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 11:33:05.140][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 11:33:05.140][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 11:33:05.141][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 11:33:05.141][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
[2017-12-21 11:33:05.142][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
[2017-12-21 11:33:05.142][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 11:33:05.144][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
[2017-12-21 11:33:05.144][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
[2017-12-21 11:33:05.144][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
[2017-12-21 11:33:05.145][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
[2017-12-21 11:33:05.146][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 11:33:05.146][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
[2017-12-21 11:33:05.147][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 11:33:05.147][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 11:33:05.148][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
[2017-12-21 11:33:05.149][INFO ][restartedMain]org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry:register[543] - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
[2017-12-21 11:33:05.282][INFO ][restartedMain]org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer:startServer[58] - LiveReload server is running on port 35729
[2017-12-21 11:33:05.361][WARN ][restartedMain]org.springframework.cloud.starter.eureka.EurekaStarterDeprecationWarningAutoConfiguration:logWarning[19] - spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka
[2017-12-21 11:33:05.597][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 11:33:05.598][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'dataSource' has been autodetected for JMX exposure
[2017-12-21 11:33:05.601][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'environmentManager' has been autodetected for JMX exposure
[2017-12-21 11:33:05.604][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
[2017-12-21 11:33:05.605][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
[2017-12-21 11:33:05.605][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
[2017-12-21 11:33:05.606][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:autodetect[916] - Bean with name 'refreshScope' has been autodetected for JMX exposure
[2017-12-21 11:33:05.608][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
[2017-12-21 11:33:05.610][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
[2017-12-21 11:33:05.613][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
[2017-12-21 11:33:05.617][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=14e1a60e,type=ConfigurationPropertiesRebinder]
[2017-12-21 11:33:05.621][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[671] - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
[2017-12-21 11:33:05.623][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
[2017-12-21 11:33:05.624][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:afterSingletonsInstantiated[431] - Registering beans for JMX exposure on startup
[2017-12-21 11:33:05.919][INFO ][restartedMain]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:start[343] - Starting beans in phase 0
[2017-12-21 11:33:05.921][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.InstanceInfoFactory:create[71] - Setting initial instance status as: STARTING
[2017-12-21 11:33:05.925][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[347] - Initializing Eureka in region us-east-1
[2017-12-21 11:33:05.929][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[70] - Using JSON encoding codec LegacyJacksonJson
[2017-12-21 11:33:05.929][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[71] - Using JSON decoding codec LegacyJacksonJson
[2017-12-21 11:33:05.929][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[80] - Using XML encoding codec XStreamXml
[2017-12-21 11:33:05.929][INFO ][restartedMain]com.netflix.discovery.provider.DiscoveryJerseyProvider:<init>[81] - Using XML decoding codec XStreamXml
[2017-12-21 11:33:06.048][INFO ][restartedMain]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 11:33:06.055][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 11:33:06.056][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 11:33:06.056][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 11:33:06.056][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 11:33:06.056][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 11:33:06.056][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: true
[2017-12-21 11:33:06.057][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 11:33:06.060][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 11:33:06.061][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:initScheduledTasks[1253] - Starting heartbeat executor: renew interval is: 30
[2017-12-21 11:33:06.061][INFO ][restartedMain]com.netflix.discovery.InstanceInfoReplicator:<init>[59] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[2017-12-21 11:33:06.063][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient:<init>[434] - Discovery Client initialized at timestamp 1513827186063 with initial instances count: 0
[2017-12-21 11:33:06.072][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:register[40] - Registering application cloudMybatis with eureka with status UP
[2017-12-21 11:33:06.072][INFO ][restartedMain]com.netflix.discovery.DiscoveryClient$3:notify[1288] - Saw local status change event StatusChangeEvent [timestamp=1513827186072, current=UP, previous=STARTING]
[2017-12-21 11:33:06.073][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888: registering service...
[2017-12-21 11:33:06.075][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
[2017-12-21 11:33:06.076][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - registration status: 204
[2017-12-21 11:33:06.080][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
[2017-12-21 11:33:06.083][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
[2017-12-21 11:33:06.086][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
[2017-12-21 11:33:06.088][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
[2017-12-21 11:33:06.090][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
[2017-12-21 11:33:06.091][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
[2017-12-21 11:33:06.093][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
[2017-12-21 11:33:06.096][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
[2017-12-21 11:33:06.098][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
[2017-12-21 11:33:06.100][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
[2017-12-21 11:33:06.102][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
[2017-12-21 11:33:06.104][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
[2017-12-21 11:33:06.106][INFO ][restartedMain]org.springframework.jmx.export.MBeanExporter:registerBeanInstance[678] - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
[2017-12-21 11:33:06.122][INFO ][restartedMain]org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer:start[201] - Tomcat started on port(s): 8888 (http)
[2017-12-21 11:33:06.123][INFO ][restartedMain]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration:onApplicationEvent[124] - Updating port to 8888
[2017-12-21 11:33:06.126][INFO ][restartedMain]org.springframework.boot.StartupInfoLogger:logStarted[57] - Started SpringCloudMybatisApplication in 8.406 seconds (JVM running for 2667.015)
[2017-12-21 11:33:36.062][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[929] - Disable delta property : false
[2017-12-21 11:33:36.063][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[930] - Single vip registry refresh property : null
[2017-12-21 11:33:36.063][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[931] - Force full registry fetch : false
[2017-12-21 11:33:36.063][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[932] - Application is null : false
[2017-12-21 11:33:36.063][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[933] - Registered Applications size is zero : true
[2017-12-21 11:33:36.064][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:fetchRegistry[935] - Application version is -1: false
[2017-12-21 11:33:36.064][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1018] - Getting all instance registry info from the eureka server
[2017-12-21 11:33:36.071][INFO ][DiscoveryClient-CacheRefreshExecutor-0]com.netflix.discovery.DiscoveryClient:getAndStoreFullRegistry[1027] - The response status is 200
[2017-12-21 11:38:06.058][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 11:43:06.059][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 11:48:06.061][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 11:53:06.063][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 11:58:06.064][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 12:03:06.065][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 12:08:06.067][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 12:13:06.068][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 12:18:06.070][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 12:23:06.071][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 12:28:06.072][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 12:33:06.073][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 12:38:06.074][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 12:43:06.076][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 12:48:06.077][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 12:53:06.078][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 12:58:06.079][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 13:03:06.080][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 13:08:06.082][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 13:09:52.488][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[489] - FrameworkServlet 'dispatcherServlet': initialization started
[2017-12-21 13:09:52.495][INFO ][http-nio-8888-exec-1]org.springframework.web.servlet.FrameworkServlet:initServletBean[508] - FrameworkServlet 'dispatcherServlet': initialization completed in 7 ms
[2017-12-21 13:13:06.084][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 13:18:06.086][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 13:23:06.088][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 13:28:06.089][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 13:33:06.090][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 13:38:06.092][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 13:43:06.094][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 13:48:06.096][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 13:53:06.097][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 13:58:06.098][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 14:03:06.100][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 14:08:06.101][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 14:13:06.103][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 14:18:06.104][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 14:23:06.105][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 14:28:06.106][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 14:33:06.108][INFO ][AsyncResolver-bootstrap-executor-0]com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver:getClusterEndpoints[43] - Resolving eureka endpoints via configuration
[2017-12-21 14:37:09.346][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:shutdown[125] - Application shutdown requested.
[2017-12-21 14:37:09.348][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.AbstractApplicationContext:doClose[984] - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@14e1a60e: startup date [Thu Dec 21 11:33:00 CST 2017]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@194a9009
[2017-12-21 14:37:09.353][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry:deregister[64] - Unregistering application cloudMybatis with eureka with status DOWN
[2017-12-21 14:37:09.354][WARN ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient$3:notify[1286] - Saw local status change event StatusChangeEvent [timestamp=1513838229354, current=DOWN, previous=UP]
[2017-12-21 14:37:09.355][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[804] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888: registering service...
[2017-12-21 14:37:09.363][INFO ][DiscoveryClient-InstanceInfoReplicator-0]com.netflix.discovery.DiscoveryClient:register[813] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - registration status: 204
[2017-12-21 14:37:09.369][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup:stop[358] - Stopping beans in phase 0
[2017-12-21 14:37:09.372][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 14:37:09.372][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 14:37:09.373][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.export.MBeanExporter:destroy[449] - Unregistering JMX-exposed beans on shutdown
[2017-12-21 14:37:09.374][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.jmx.support.MBeanRegistrationSupport:unregisterBeans[241] - Unregistering JMX-exposed beans
[2017-12-21 14:37:09.375][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[861] - Shutting down DiscoveryClient ...
[2017-12-21 14:37:09.377][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[893] - Unregistering ...
[2017-12-21 14:37:09.380][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:unregister[895] - DiscoveryClient_CLOUDMYBATIS/localhost:cloudMybatis:8888 - deregister  status: 200
[2017-12-21 14:37:09.384][INFO ][RMI TCP Connection(2)-127.0.0.1]com.netflix.discovery.DiscoveryClient:shutdown[882] - Completed shut down of DiscoveryClient
[2017-12-21 14:37:09.386][INFO ][RMI TCP Connection(2)-127.0.0.1]org.springframework.scheduling.concurrent.ExecutorConfigurationSupport:shutdown[202] - Shutting down ExecutorService
